scalar JSONObject

scalar BigInt

type Query {
  # 클러스터 관계 목록 조회
  # 클러스터 관계를 조회한다.
  # @param Int limit 한 페이지에 표시할 항목 개수
  # @param Int offset 페이지에 표시할 항목 인덱스
  # @return [OpenStackDrClusterRelationshipsResponse]
  GetDashboardClusterRelationships(limit: BigInt, offset: BigInt): OpenStackDrClusterRelationshipsResponse
  # 클러스터 요약
  # 클러스터 요약 정보를 조회한다.
  # @return [OpenStackDrSummaryClustersResponse]
  GetDashboardClustersSummary: OpenStackDrSummaryClustersResponse
  # 보호 그룹 요약
  # 보호 그룹 요약 정보를 조회한다.
  # @return [OpenStackDrSummaryGroupsResponse]
  GetDashboardGroupsSummary: OpenStackDrSummaryGroupsResponse
  # 인스턴스 요약
  # 인스턴스 요약 정보를 조회한다.
  # @return [OpenStackDrSummaryInstancesResponse]
  GetDashboardInstancesSummary: OpenStackDrSummaryInstancesResponse
  # 재해 복구 작업 요약
  # 재해 복구 작업 요약 정보를 조회한다.
  # @param OpenStackDrRecoveryTypeEnum recoveryType 복구 유형
  # @param Int startDate
  # @param Int endDate
  # @return [OpenStackDrSummaryJobsResponse]
  GetDashboardJobsSummary(recoveryType: OpenStackDrRecoveryTypeEnum, startDate: BigInt, endDate: BigInt): OpenStackDrSummaryJobsResponse
  # 볼륨 요약
  # 볼륨 요약 정보를 조회한다.
  # @return [OpenStackDrSummaryVolumesResponse]
  GetDashboardVolumesSummary: OpenStackDrSummaryVolumesResponse
  # 인스턴스 템플릿 조회
  # 설명추가
  # @param Int templateId 인스턴스 템플릿의 ID
  # @return [OpenStackDrInstanceTemplateResponse]
  GetInstanceTemplate(templateId: BigInt): OpenStackDrInstanceTemplateResponse
  # 인스턴스 템플릿 목록 조회
  # 설명추가
  # @param Int limit 한 페이지에 표시할 항목 개수
  # @param Int offset 페이지에 표시할 항목 인덱스
  # @param String name 보호그룹 이름
  # @param Int ownerGroupId 보호그룹 원본 클러스터의 Owner 그룹 ID
  # @return [OpenStackDrInstanceTemplatesResponse]
  GetInstanceTemplates(limit: BigInt, offset: BigInt, name: String, ownerGroupId: BigInt): OpenStackDrInstanceTemplatesResponse
  # 마이그레이션 작업 상태 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 마이그레이션 계획 ID
  # @return [OpenStackDrMigrationJobStatusResponse]
  GetMigrationJobStatus(groupId: BigInt, planId: BigInt): OpenStackDrMigrationJobStatusResponse
  # 마이그레이션 계획 상세 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 마이그레이션 계획 ID
  # @return [OpenStackDrMigrationResponse]
  GetMigration(groupId: BigInt, planId: BigInt): OpenStackDrMigrationResponse
  # 마이그레이션 계획 목록 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int limit 한 페이지에 표시할 항목 개수
  # @param Int offset 페이지에 표시할 항목 인덱스
  # @param Int ownerGroupId 보호그룹 원본 클러스터의 Owner 그룹 ID
  # @param String name 마이그레이션 계획 이름
  # @return [OpenStackDrMigrationsResponse]
  GetMigrations(groupId: BigInt, limit: BigInt, offset: BigInt, ownerGroupId: BigInt, name: String): OpenStackDrMigrationsResponse
  # 마이그레이션 복제 상태 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 마이그레이션 계획 ID
  # @return [OpenStackDrMigrationReplicationStatusResponse]
  GetMigrationReplicationStatus(groupId: BigInt, planId: BigInt): OpenStackDrMigrationReplicationStatusResponse
  # 보호그룹 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @return [OpenStackDrProtectionGroupResponse]
  GetProtectionGroup(groupId: BigInt): OpenStackDrProtectionGroupResponse
  # 보호그룹 스냅샷 목록 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @return [OpenStackDrSnapshotsResponse]
  GetProtectionGroupSnapshot(groupId: BigInt): OpenStackDrSnapshotsResponse
  # 보호그룹 목록 조회
  # 설명추가
  # @param Int limit 한 페이지에 표시할 항목 개수
  # @param Int offset 페이지에 표시할 항목 인덱스
  # @param Int protectionClusterId 보호대상 클러스터 ID
  # @param OpenStackDrProtectionClusterTypeCodeEnum protectionClusterTypeCode 보호대상 클러스터 종류
  # @param Int ownerGroupId 보호그룹 원본 클러스터의 Owner 그룹 ID
  # @param String name 보호그룹 이름
  # @return [OpenStackDrProtectionGroupsResponse]
  GetProtectionGroups(limit: BigInt, offset: BigInt, protectionClusterId: BigInt, protectionClusterTypeCode: OpenStackDrProtectionClusterTypeCodeEnum, ownerGroupId: BigInt, name: String): OpenStackDrProtectionGroupsResponse
  # 클러스터 비보호 인스턴스 목록 조회
  # 설명추가
  # @param Int clusterId 클러스터 ID
  # @param Int limit 한 페이지에 표시할 항목 개수
  # @param Int offset 페이지에 표시할 항목 인덱스
  # @param Int clusterTenantId 클러스터 테넌트 ID
  # @param Int clusterAvailabilityZoneId 클러스터 가용구역 ID
  # @param Int clusterHypervisorId 클러스터 Hypervisor ID
  # @param String name 인스턴스 이름
  # @return [OpenStackDrInstancesResponse]
  GetUnprotectedInstances(clusterId: BigInt, limit: BigInt, offset: BigInt, clusterTenantId: BigInt, clusterAvailabilityZoneId: BigInt, clusterHypervisorId: BigInt, name: String): OpenStackDrInstancesResponse
  # 재해복구작업 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrRecoveryJobResponse]
  GetRecoveryJob(groupId: BigInt, jobId: BigInt): OpenStackDrRecoveryJobResponse
  # 재해복구작업 인스턴스 모니터링 (WebSocket 프로토콜 지원)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @param Int interval WebSocket 프로토콜을 사용할 때의 데이터 수신 간격 (sec)
  # @return [OpenStackDrRecoveryJobInstanceStatusResponse]
  GetRecoveryJobInstanceStatus(groupId: BigInt, jobId: BigInt, interval: BigInt): OpenStackDrRecoveryJobInstanceStatusResponse
  # 재해복구작업 모든 상태 모니터링 (WebSocket 프로토콜 지원)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @param Int interval WebSocket 프로토콜을 사용할 때의 데이터 수신 간격 (sec)
  # @return [OpenStackDrRecoveryJobMonitorsResponse]
  GetRecoveryJobMonitors(groupId: BigInt, jobId: BigInt, interval: BigInt): OpenStackDrRecoveryJobMonitorsResponse
  # 재해복구작업 모니터링 (WebSocket 프로토콜 지원)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @param Int interval WebSocket 프로토콜을 사용할 때의 데이터 수신 간격 (sec)
  # @return [OpenStackDrRecoveryJobStatusResponse]
  GetRecoveryJobStatus(groupId: BigInt, jobId: BigInt, interval: BigInt): OpenStackDrRecoveryJobStatusResponse
  # 재해복구작업 작업내역 모니터링 (WebSocket 프로토콜 지원)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @param Int interval WebSocket 프로토콜을 사용할 때의 데이터 수신 간격 (sec)
  # @return [OpenStackDrRecoveryTaskLogsResponse]
  GetRecoveryJobTaskLog(groupId: BigInt, jobId: BigInt, interval: BigInt): OpenStackDrRecoveryTaskLogsResponse
  # 재해복구작업 볼륨 모니터링 (WebSocket 프로토콜 지원)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @param Int interval WebSocket 프로토콜을 사용할 때의 데이터 수신 간격 (sec)
  # @return [OpenStackDrRecoveryJobVolumeStatusResponse]
  GetRecoveryJobVolumeStatus(groupId: BigInt, jobId: BigInt, interval: BigInt): OpenStackDrRecoveryJobVolumeStatusResponse
  # 재해복구작업 목록 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 재해복구계획 ID
  # @param Int limit 한 페이지에 표시할 항목 개수
  # @param Int offset 페이지에 표시할 항목 인덱스
  # @param String name 재해복구계획 이름
  # @param OpenStackDrRecoveryTypeEnum Type_ 복구 유형
  # @return [OpenStackDrRecoveryJobsResponse]
  GetRecoveryJobs(groupId: BigInt, planId: BigInt, limit: BigInt, offset: BigInt, name: String, Type_: OpenStackDrRecoveryTypeEnum): OpenStackDrRecoveryJobsResponse
  # 하이퍼바이저 리소스 정보 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 재해복구계획 ID
  # @param String recoveryPointTypeCode 복구 데이터 시점 유형
  # @param Int snapshotId 보호 그룹 스냅샷 ID
  # @return [OpenStackDrHypervisorResourcesResponse]
  GetHypervisor(groupId: BigInt, planId: BigInt, recoveryPointTypeCode: String, snapshotId: BigInt): OpenStackDrHypervisorResourcesResponse
  # 재해복구계획 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 재해복구계획 ID
  # @param Int snapshotId 보호 그룹 스냅샷 ID
  # @return [OpenStackDrRecoveryPlanResponse]
  GetRecoveryPlan(groupId: BigInt, planId: BigInt, snapshotId: BigInt): OpenStackDrRecoveryPlanResponse
  # 재해복구계획 목록 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int limit 한 페이지에 표시할 항목 개수
  # @param Int offset 페이지에 표시할 항목 인덱스
  # @param String name 보호그룹 이름
  # @return [OpenStackDrRecoveryPlansResponse]
  GetRecoveryPlans(groupId: BigInt, limit: BigInt, offset: BigInt, name: String): OpenStackDrRecoveryPlansResponse
  # 재해복구결과 보고서 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int resultId 재해복구결과 보고서 ID
  # @return [OpenStackDrRecoveryResultReportResponse]
  GetRecoveryReport(groupId: BigInt, resultId: BigInt): OpenStackDrRecoveryResultReportResponse
  # 보호그룹 history 조회
  # 설명추가
  # @return [OpenStackDrHistoryResponse]
  GetRecoveryReportHistory: OpenStackDrHistoryResponse
  # 재해복구결과 보고서 목록 조회
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param String groupName 보호그룹 Name
  # @param Int limit 한 페이지에 표시할 항목 개수
  # @param Int offset 페이지에 표시할 항목 인덱스
  # @param OpenStackDrRecoveryTypeEnum Type_ 복구 유형
  # @param OpenStackDrReportResultEnum result 복구 결과
  # @return [OpenStackDrRecoveryResultReportsResponse]
  GetRecoveryReports(groupId: BigInt, groupName: String, limit: BigInt, offset: BigInt, Type_: OpenStackDrRecoveryTypeEnum, result: OpenStackDrReportResultEnum): OpenStackDrRecoveryResultReportsResponse
}

type Mutation {
  # 인스턴스 템플릿 등록
  # 설명추가
  # @param OpenStackDrAddInstanceTemplateRequest openStackDrAddInstanceTemplateRequest
  # @return [OpenStackDrInstanceTemplateResponse]
  CreateInstanceTemplate(input: CreateInstanceTemplateInput): OpenStackDrInstanceTemplateResponse
  # 인스턴스 템플릿 삭제
  # 설명추가
  # @param Int templateId 인스턴스 템플릿의 ID
  # @return [OpenStackDrMessageResponse]
  DeleteInstanceTemplate(input: DeleteInstanceTemplateInput): OpenStackDrMessageResponse
  # 마이그레이션 작업 등록
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 마이그레이션 계획 ID
  # @param String jobType 마이그레이션 타입(\&quot;simulation\&quot; 또는 \&quot;cutover\&quot;)
  # @return [OpenStackDrMessageResponse]
  CreateMigrationJob(input: CreateMigrationJobInput): OpenStackDrMessageResponse
  # 마이그레이션 계획 삭제
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 마이그레이션 계획 ID
  # @return [OpenStackDrMessageResponse]
  DeleteMigration(input: DeleteMigrationInput): OpenStackDrMessageResponse
  # 마이그레이션 복제 싱크(데이터 동기화)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 마이그레이션 계획 ID
  # @param String replicator replicator 옵션 (\&quot;on\&quot; 또는 \&quot;off\&quot;)
  # @return [OpenStackDrMessageResponse]
  CreateMigrationPreparation(input: CreateMigrationPreparationInput): OpenStackDrMessageResponse
  # 마이그레이션 복제 시작
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 마이그레이션 계획 ID
  # @param String replicator replicator 옵션 (\&quot;on\&quot; 또는 \&quot;off\&quot;)
  # @return [OpenStackDrMessageResponse]
  CreateMigrationReplication(input: CreateMigrationReplicationInput): OpenStackDrMessageResponse
  # 마이그레이션 복제 삭제
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 마이그레이션 계획 ID
  # @return [OpenStackDrMessageResponse]
  DeleteMigrationReplication(input: DeleteMigrationReplicationInput): OpenStackDrMessageResponse
  # 보호그룹 등록
  # 설명추가
  # @param OpenStackDrProtectionGroupRequest openStackDrProtectionGroupRequest
  # @return [OpenStackDrProtectionGroupResponse]
  CreateProtectionGroup(input: CreateProtectionGroupInput): OpenStackDrProtectionGroupResponse
  # 보호그룹 스냅샷 추가
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @return [OpenStackDrSnapshotMessageResponse]
  CreateProtectionGroupSnapshot(input: CreateProtectionGroupSnapshotInput): OpenStackDrSnapshotMessageResponse
  # 보호그룹 삭제
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @return [OpenStackDrMessageResponse]
  DeleteProtectionGroup(input: DeleteProtectionGroupInput): OpenStackDrMessageResponse
  # 보호그룹 수정
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param OpenStackDrProtectionGroupRequest openStackDrProtectionGroupRequest
  # @return [OpenStackDrProtectionGroupResponse]
  UpdateProtectionGroup(input: UpdateProtectionGroupInput): OpenStackDrProtectionGroupResponse
  # 재해복구작업 취소
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  CancelRecoveryJob(input: CancelRecoveryJobInput): OpenStackDrMessageResponse
  # 재해복구작업 확정 취소
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  CancelRecoveryJobConfirm(input: CancelRecoveryJobConfirmInput): OpenStackDrMessageResponse
  # 재해복구작업 확정
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  ConfirmRecoveryJob(input: ConfirmRecoveryJobInput): OpenStackDrMessageResponse
  # 재해복구작업 확정 재시도
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  ConfirmRecoveryJobRetry(input: ConfirmRecoveryJobRetryInput): OpenStackDrMessageResponse
  # 재해복구작업 생성
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param OpenStackDrAddRecoveryJobRequest openStackDrAddRecoveryJobRequest
  # @return [OpenStackDrRecoveryJobResponse]
  CreateRecoveryJob(input: CreateRecoveryJobInput): OpenStackDrRecoveryJobResponse
  # 재해복구작업 삭제
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  DeleteRecoveryJob(input: DeleteRecoveryJobInput): OpenStackDrMessageResponse
  # 재해복구작업 강제 삭제
  # 재해복구작업을 클러스터의 상태와 상관없이 강제로 삭제한다.
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  DeleteRecoveryJobForce(input: DeleteRecoveryJobForceInput): OpenStackDrMessageResponse
  # 재해복구작업 일시중지 시간 연장
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @param OpenStackDrExtendRecoveryJobPausingTimeRequest openStackDrExtendRecoveryJobPausingTimeRequest
  # @return [OpenStackDrMessageResponse]
  ExtendRecoveryJobPause(input: ExtendRecoveryJobPauseInput): OpenStackDrMessageResponse
  # 재해복구작업 롤백 대기시간 연장
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @param OpenStackDrExtendRecoveryJobRollbackWaitingTimeRequest openStackDrExtendRecoveryJobRollbackWaitingTimeRequest
  # @return [OpenStackDrMessageResponse]
  ExtendRecoveryJobRollbackTime(input: ExtendRecoveryJobRollbackTimeInput): OpenStackDrMessageResponse
  # 재해복구작업 롤백 무시
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [Boolean]
  IgnoreRecoveryJobRollback(input: IgnoreRecoveryJobRollbackInput): Boolean
  # 재해복구작업 일시중지
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  PauseRecoveryJob(input: PauseRecoveryJobInput): OpenStackDrMessageResponse
  # 재해복구작업 재개
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  ResumeRecoveryJob(input: ResumeRecoveryJobInput): OpenStackDrMessageResponse
  # 재해복구작업 롤백 (재해복구)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  ResumeRecoveryJobMigrationRollback(input: ResumeRecoveryJobMigrationRollbackInput): OpenStackDrMessageResponse
  # 재해복구작업 재시도 (재해복구)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @param OpenStackDrRetryInstancesRequest openStackDrRetryInstancesRequest
  # @return [OpenStackDrMessageResponse]
  RetryRecoveryJob(input: RetryRecoveryJobInput): OpenStackDrMessageResponse
  # 재해복구작업 롤백 재시도
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  RetryRecoveryJobRollback(input: RetryRecoveryJobRollbackInput): OpenStackDrMessageResponse
  # 재해복구작업 롤백 (모의훈련)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @return [OpenStackDrMessageResponse]
  RollbackRecoveryJobSimulation(input: RollbackRecoveryJobSimulationInput): OpenStackDrMessageResponse
  # 재해복구작업 수정
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int jobId 재해복구작업 ID
  # @param OpenStackDrUpdateRecoveryJobRequest openStackDrUpdateRecoveryJobRequest
  # @return [OpenStackDrRecoveryJobResponse]
  UpdateRecoveryJob(input: UpdateRecoveryJobInput): OpenStackDrRecoveryJobResponse
  # 재해복구계획 등록
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param OpenStackDrRecoveryPlanRequest openStackDrRecoveryPlanRequest
  # @return [OpenStackDrRecoveryPlanResponse]
  CreateRecoveryPlan(input: CreateRecoveryPlanInput): OpenStackDrRecoveryPlanResponse
  # 재해복구계획 삭제
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 재해복구계획 ID
  # @return [OpenStackDrMessageResponse]
  DeleteRecoveryPlan(input: DeleteRecoveryPlanInput): OpenStackDrMessageResponse
  # 재해복구계획 수정
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int planId 재해복구계획 ID
  # @param OpenStackDrRecoveryPlanRequest openStackDrRecoveryPlanRequest
  # @return [OpenStackDrRecoveryPlanResponse]
  UpdateRecoveryPlan(input: UpdateRecoveryPlanInput): OpenStackDrRecoveryPlanResponse
  # 재해복구결과 보고서 삭제 (모의훈련)
  # 설명추가
  # @param Int groupId 보호그룹 ID
  # @param Int resultId 재해복구결과 보고서 ID
  # @return [OpenStackDrMessageResponse]
  DeleteRecoveryReport(input: DeleteRecoveryReportInput): OpenStackDrMessageResponse
}

# dashboard_api

# instance_template_api
input CreateInstanceTemplateInput {
    openStackDrAddInstanceTemplateRequest: OpenStackDrAddInstanceTemplateRequestInput
}

input DeleteInstanceTemplateInput {
    # 인스턴스 템플릿의 ID
    templateId: BigInt
}

# migration_job_api
input CreateMigrationJobInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 마이그레이션 계획 ID
    planId: BigInt,
    # 마이그레이션 타입(\&quot;simulation\&quot; 또는 \&quot;cutover\&quot;)
    jobType: String
}

# migration_plan_api
input DeleteMigrationInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 마이그레이션 계획 ID
    planId: BigInt
}

# migration_replication_api
input CreateMigrationPreparationInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 마이그레이션 계획 ID
    planId: BigInt,
    # replicator 옵션 (\&quot;on\&quot; 또는 \&quot;off\&quot;)
    replicator: String
}

input CreateMigrationReplicationInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 마이그레이션 계획 ID
    planId: BigInt,
    # replicator 옵션 (\&quot;on\&quot; 또는 \&quot;off\&quot;)
    replicator: String
}

input DeleteMigrationReplicationInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 마이그레이션 계획 ID
    planId: BigInt
}

# protection_group_api
input CreateProtectionGroupInput {
    openStackDrProtectionGroupRequest: OpenStackDrProtectionGroupRequestInput
}

input CreateProtectionGroupSnapshotInput {
    # 보호그룹 ID
    groupId: BigInt
}

input DeleteProtectionGroupInput {
    # 보호그룹 ID
    groupId: BigInt
}

input UpdateProtectionGroupInput {
    # 보호그룹 ID
    groupId: BigInt,
    openStackDrProtectionGroupRequest: OpenStackDrProtectionGroupRequestInput
}

# recovery_job_api
input CancelRecoveryJobInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input CancelRecoveryJobConfirmInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input ConfirmRecoveryJobInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input ConfirmRecoveryJobRetryInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input CreateRecoveryJobInput {
    # 보호그룹 ID
    groupId: BigInt,
    openStackDrAddRecoveryJobRequest: OpenStackDrAddRecoveryJobRequestInput
}

input DeleteRecoveryJobInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input DeleteRecoveryJobForceInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input ExtendRecoveryJobPauseInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt,
    openStackDrExtendRecoveryJobPausingTimeRequest: OpenStackDrExtendRecoveryJobPausingTimeRequestInput
}

input ExtendRecoveryJobRollbackTimeInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt,
    openStackDrExtendRecoveryJobRollbackWaitingTimeRequest: OpenStackDrExtendRecoveryJobRollbackWaitingTimeRequestInput
}

input IgnoreRecoveryJobRollbackInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input PauseRecoveryJobInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input ResumeRecoveryJobInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input ResumeRecoveryJobMigrationRollbackInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input RetryRecoveryJobInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt,
    openStackDrRetryInstancesRequest: OpenStackDrRetryInstancesRequestInput
}

input RetryRecoveryJobRollbackInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input RollbackRecoveryJobSimulationInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt
}

input UpdateRecoveryJobInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구작업 ID
    jobId: BigInt,
    openStackDrUpdateRecoveryJobRequest: OpenStackDrUpdateRecoveryJobRequestInput
}

# recovery_plan_api
input CreateRecoveryPlanInput {
    # 보호그룹 ID
    groupId: BigInt,
    openStackDrRecoveryPlanRequest: OpenStackDrRecoveryPlanRequestInput
}

input DeleteRecoveryPlanInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구계획 ID
    planId: BigInt
}

input UpdateRecoveryPlanInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구계획 ID
    planId: BigInt,
    openStackDrRecoveryPlanRequest: OpenStackDrRecoveryPlanRequestInput
}

# recovery_report_api
input DeleteRecoveryReportInput {
    # 보호그룹 ID
    groupId: BigInt,
    # 재해복구결과 보고서 ID
    resultId: BigInt
}

#
# cloud_day_of_month_enum.graphql
#
# 일자(1-31, last-day)
enum CloudDayOfMonthEnum {
  ONE
  TWO
  THREE
  FOUR
  FIVE
  SIX
  SEVEN
  EIGHT
  NINE
  TEN
  ELEVEN
  TWELVE
  THIRTEEN
  FOURTEEN
  FIFTEEN
  SIXTEEN
  SEVENTEEN
  EIGHTEEN
  NINETEEN
  TWENTY
  TWENTY_ONE
  TWENTY_TWO
  TWENTY_THREE
  TWENTY_FOUR
  TWENTY_FIVE
  TWENTY_SIX
  TWENTY_SEVEN
  TWENTY_EIGHT
  TWENTY_NINE
  THIRTY
  THIRTY_ONE
  LAST_DAY
}

#
# cloud_interval_hour_enum.graphql
#
# 주기간격 (시간)
enum CloudIntervalHourEnum {
  ONE
  TWO
  THREE
  FOUR
  SIX
  TWELVE
}

#
# cloud_interval_minute_enum.graphql
#
# 주기간격 (분)
enum CloudIntervalMinuteEnum {
  ONE
  TWO
  THREE
  FOUR
  FIVE
  SIX
  TEN
  TWELVE
  FIFTEEN
  TWENTY
  THIRTY
}

#
# cloud_interval_month_enum.graphql
#
# 주기간격 (개월)
enum CloudIntervalMonthEnum {
  ONE
  TWO
  THREE
  FOUR
  SIX
  TWELVE
}

#
# cloud_language_set_enum.graphql
#
# 언어셋
enum CloudLanguageSetEnum {
  ENG
  KOR
}

#
# cloud_role.graphql
#
# 솔루션 역할
type CloudRole {
  # 솔루션 역할의 ID
  id: BigInt
  # 솔루션 이름
  solution: String
  role: CloudRoleEnum
}

input CloudRoleInput {
    # 솔루션 역할의 ID
    id: BigInt
    # 솔루션 이름
    solution: String
    role: CloudRoleEnum
}

#
# cloud_role_enum.graphql
#
# 역할
enum CloudRoleEnum {
  ADMIN
  MANAGER
  OPERATOR
  USER
}

#
# cloud_schedule.graphql
#
# 스케쥴
type CloudSchedule {
  # 스케쥴 ID
  id: BigInt
  # 스케줄 활성화 여부
  activation_flag: Boolean
  # 메시지 Topic
  topic: String
  # 메시지
  message: String
  # 시작일
  start_at: BigInt
  # 종료일
  end_at: BigInt
  type: CloudScheduleTypeEnum
  interval_minute: CloudIntervalMinuteEnum
  interval_hour: CloudIntervalHourEnum
  # 주기간격 (일)
  interval_day: BigInt
  # 주기간격 (주)
  interval_week: BigInt
  interval_month: CloudIntervalMonthEnum
  week_of_month: CloudWeekOfMonthEnum
  day_of_month: CloudDayOfMonthEnum
  day_of_week: CloudWeekEnum
  # 시
  hour: BigInt
  # 분
  minute: BigInt
  # [타임존](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
  timezone: String
}

input CloudScheduleInput {
    # 스케쥴 ID
    id: BigInt
    # 스케줄 활성화 여부
    activation_flag: Boolean
    # 메시지 Topic
    topic: String
    # 메시지
    message: String
    # 시작일
    start_at: BigInt
    # 종료일
    end_at: BigInt
    type: CloudScheduleTypeEnum
    interval_minute: CloudIntervalMinuteEnum
    interval_hour: CloudIntervalHourEnum
    # 주기간격 (일)
    interval_day: BigInt
    # 주기간격 (주)
    interval_week: BigInt
    interval_month: CloudIntervalMonthEnum
    week_of_month: CloudWeekOfMonthEnum
    day_of_month: CloudDayOfMonthEnum
    day_of_week: CloudWeekEnum
    # 시
    hour: BigInt
    # 분
    minute: BigInt
    # [타임존](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
    timezone: String
}

#
# cloud_schedule_type_enum.graphql
#
# 주기 종류
enum CloudScheduleTypeEnum {
  SCHEDULE_TYPE_SPECIFIED
  SCHEDULE_TYPE_MINUTELY
  SCHEDULE_TYPE_HOURLY
  SCHEDULE_TYPE_DAILY
  SCHEDULE_TYPE_WEEKLY
  SCHEDULE_TYPE_MONTHLY
  SCHEDULE_TYPE_YEARLY
  SCHEDULE_TYPE_DAY_OF_MONTHLY
  SCHEDULE_TYPE_WEEK_OF_MONTHLY
}

#
# cloud_session.graphql
#
# 사용자 세션
type CloudSession {
  # 세션 키
  key: String
}

input CloudSessionInput {
    # 세션 키
    key: String
}

#
# cloud_tenant.graphql
#
# 테넌트
type CloudTenant {
  # 테넌트 ID
  id: BigInt
  # 테넌트 이름
  name: String
  # 사용여부
  use_flag: Boolean
  # 테넌트가 사용할 수 있는 솔루션 목록
  solutions: [CloudTenantSolution]
  # 비고
  remarks: String
  # 테넌트 생성 날짜
  created_at: BigInt
  # 테넌트 변경 날짜
  updated_at: BigInt
}

input CloudTenantInput {
    # 테넌트 ID
    id: BigInt
    # 테넌트 이름
    name: String
    # 사용여부
    use_flag: Boolean
    # 테넌트가 사용할 수 있는 솔루션 목록
    solutions: [CloudTenantSolutionInput]
    # 비고
    remarks: String
    # 테넌트 생성 날짜
    created_at: BigInt
    # 테넌트 변경 날짜
    updated_at: BigInt
}

#
# cloud_tenant_solution.graphql
#
# 테넌트
type CloudTenantSolution {
  # 솔루션 이름
  name: String
}

input CloudTenantSolutionInput {
    # 솔루션 이름
    name: String
}

#
# cloud_user.graphql
#
# 사용자
type CloudUser {
  # 사용자 ID
  id: BigInt
  # 계정 명
  account: String
  tenant: CloudTenant
  # 솔루션별 역할
  roles: [CloudRole]
  # 사용자 그룹 목록
  groups: [CloudUserGroup]
  # 사용자 타임존 ([참조링크](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones))
  timezone: String
  language_set: CloudLanguageSetEnum
  # 사용자 이름
  name: String
  # 사용자 부서
  department: String
  # 사용자 직책
  position: String
  # 사용자 이메일
  email: String
  # 사용자 연락처
  contact: String
  # 계정 암호 변경 날짜
  password_updated_at: BigInt
  # 계정 암호 변경 필요 여부
  password_update_flag: Boolean
  # 계정 마지막 로그인 날짜
  last_logged_in_at: BigInt
  # 계정 생성 날짜
  created_at: BigInt
  # 계정 내용 변경 날짜
  updated_at: BigInt
  session: CloudSession
}

input CloudUserInput {
    # 사용자 ID
    id: BigInt
    # 계정 명
    account: String
    tenant: CloudTenantInput
    # 솔루션별 역할
    roles: [CloudRoleInput]
    # 사용자 그룹 목록
    groups: [CloudUserGroupInput]
    # 사용자 타임존 ([참조링크](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones))
    timezone: String
    language_set: CloudLanguageSetEnum
    # 사용자 이름
    name: String
    # 사용자 부서
    department: String
    # 사용자 직책
    position: String
    # 사용자 이메일
    email: String
    # 사용자 연락처
    contact: String
    # 계정 암호 변경 날짜
    password_updated_at: BigInt
    # 계정 암호 변경 필요 여부
    password_update_flag: Boolean
    # 계정 마지막 로그인 날짜
    last_logged_in_at: BigInt
    # 계정 생성 날짜
    created_at: BigInt
    # 계정 내용 변경 날짜
    updated_at: BigInt
    session: CloudSessionInput
}

#
# cloud_user_group.graphql
#
# 사용자 그룹
type CloudUserGroup {
  # 사용자 그룹 ID
  id: BigInt
  tenant: CloudTenant
  # 사용자 그룹 이름
  name: String
  # 비고
  remarks: String
  # 사용자 그룹 생성 날짜
  created_at: BigInt
  # 사용자 그룹 변경 날짜
  updated_at: BigInt
  # 삭제 여부
  delete_flag: Boolean
}

input CloudUserGroupInput {
    # 사용자 그룹 ID
    id: BigInt
    tenant: CloudTenantInput
    # 사용자 그룹 이름
    name: String
    # 비고
    remarks: String
    # 사용자 그룹 생성 날짜
    created_at: BigInt
    # 사용자 그룹 변경 날짜
    updated_at: BigInt
    # 삭제 여부
    delete_flag: Boolean
}

#
# cloud_week_enum.graphql
#
# 요일
enum CloudWeekEnum {
  MON
  TUE
  WED
  THU
  FRI
  SAT
  SUN
}

#
# cloud_week_of_month_enum.graphql
#
# 주차
enum CloudWeekOfMonthEnum {
  ONE
  TWO
  THREE
  FOUR
  FIVE
  LAST_WEEK
}

#
# open_stack_cm_cluster.graphql
#
# 클러스터
type OpenStackCmCluster {
  # 클러스터의 ID
  id: BigInt
  owner_group: CloudUserGroup
  permissions: [OpenStackCmClusterPermission]
  # 클러스터의 이름
  name: String
  state_code: OpenStackCmClusterStateCodeEnum
  type_code: OpenStackCmClusterTypeCodeEnum
  # 클러스터의 API Server URL
  api_server_url: String
  # 클러스터의 API Credential의 암호문 ## Openstack **password authentication:** ```json {   \"methods\": [\"password\"],   \"password\": {     \"user\": {       \"name\": \"admin\",       \"domain\": {         \"name\": \"admin\"       },       \"password\": \"password\"     }   } } ```
  credential: String
  # 비고
  remarks: String
  # 클러스터 등록 일시 (Timestamp)
  created_at: BigInt
  # 클러스터 최종 수정 일시 (Timestamp)
  updated_at: BigInt
  # 클러스터 최종 동기화 일시 (Timestamp)
  synchronized_at: BigInt
}

input OpenStackCmClusterInput {
    # 클러스터의 ID
    id: BigInt
    owner_group: CloudUserGroupInput
    permissions: [OpenStackCmClusterPermissionInput]
    # 클러스터의 이름
    name: String
    state_code: OpenStackCmClusterStateCodeEnum
    type_code: OpenStackCmClusterTypeCodeEnum
    # 클러스터의 API Server URL
    api_server_url: String
    # 클러스터의 API Credential의 암호문 ## Openstack **password authentication:** ```json {   \"methods\": [\"password\"],   \"password\": {     \"user\": {       \"name\": \"admin\",       \"domain\": {         \"name\": \"admin\"       },       \"password\": \"password\"     }   } } ```
    credential: String
    # 비고
    remarks: String
    # 클러스터 등록 일시 (Timestamp)
    created_at: BigInt
    # 클러스터 최종 수정 일시 (Timestamp)
    updated_at: BigInt
    # 클러스터 최종 동기화 일시 (Timestamp)
    synchronized_at: BigInt
}

#
# open_stack_cm_cluster_1.graphql
#
# 클러스터
type OpenStackCmCluster1 {
  # 클러스터의 ID
  id: BigInt
  owner_group: CloudUserGroup
  permissions: [OpenStackCmClusterPermission1]
  # 클러스터의 이름
  name: String
  state_code: OpenStackCmClusterStateCodeEnum
  type_code: OpenStackCmClusterTypeCodeEnum
  # 클러스터의 API Server URL
  api_server_url: String
  # 클러스터의 API Credential의 암호문 ## Openstack **password authentication:** ```json {   \"methods\": [\"password\"],   \"password\": {     \"user\": {       \"name\": \"admin\",       \"domain\": {         \"name\": \"admin\"       },       \"password\": \"password\"     }   } } ```
  credential: String
  # 비고
  remarks: String
  # 클러스터 등록 일시 (Timestamp)
  created_at: BigInt
  # 클러스터 최종 수정 일시 (Timestamp)
  updated_at: BigInt
  # 클러스터 최종 동기화 일시 (Timestamp)
  synchronized_at: BigInt
}

input OpenStackCmCluster1Input {
    # 클러스터의 ID
    id: BigInt
    owner_group: CloudUserGroupInput
    permissions: [OpenStackCmClusterPermission1Input]
    # 클러스터의 이름
    name: String
    state_code: OpenStackCmClusterStateCodeEnum
    type_code: OpenStackCmClusterTypeCodeEnum
    # 클러스터의 API Server URL
    api_server_url: String
    # 클러스터의 API Credential의 암호문 ## Openstack **password authentication:** ```json {   \"methods\": [\"password\"],   \"password\": {     \"user\": {       \"name\": \"admin\",       \"domain\": {         \"name\": \"admin\"       },       \"password\": \"password\"     }   } } ```
    credential: String
    # 비고
    remarks: String
    # 클러스터 등록 일시 (Timestamp)
    created_at: BigInt
    # 클러스터 최종 수정 일시 (Timestamp)
    updated_at: BigInt
    # 클러스터 최종 동기화 일시 (Timestamp)
    synchronized_at: BigInt
}

#
# open_stack_cm_cluster_availability_zone.graphql
#
# 클러스터 가용구역
type OpenStackCmClusterAvailabilityZone {
  # 클러스터 가용구역의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  # 클러스터 가용구역의 이름
  name: String
  # 가용구역의 가용여부
  available: Boolean
}

input OpenStackCmClusterAvailabilityZoneInput {
    # 클러스터 가용구역의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    # 클러스터 가용구역의 이름
    name: String
    # 가용구역의 가용여부
    available: Boolean
}

#
# open_stack_cm_cluster_availability_zone_1.graphql
#
# 클러스터 가용구역
type OpenStackCmClusterAvailabilityZone1 {
  # 클러스터 가용구역의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  # 클러스터 가용구역의 이름
  name: String
  # 가용구역의 가용여부
  available: Boolean
}

input OpenStackCmClusterAvailabilityZone1Input {
    # 클러스터 가용구역의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    # 클러스터 가용구역의 이름
    name: String
    # 가용구역의 가용여부
    available: Boolean
}

#
# open_stack_cm_cluster_floating_ip.graphql
#
# 클러스터 Floating IP
type OpenStackCmClusterFloatingIp {
  # 클러스터 Floating IP 의 ID
  id: BigInt
  # 클러스터에서의 Floating IP ID
  uuid: String
  # 클러스터 Floating IP 의 설명
  description: String
  # IP 주소
  ip_address: String
  status: OpenStackCmClusterFloatingIpStatusEnum
}

input OpenStackCmClusterFloatingIpInput {
    # 클러스터 Floating IP 의 ID
    id: BigInt
    # 클러스터에서의 Floating IP ID
    uuid: String
    # 클러스터 Floating IP 의 설명
    description: String
    # IP 주소
    ip_address: String
    status: OpenStackCmClusterFloatingIpStatusEnum
}

#
# open_stack_cm_cluster_floating_ip_1.graphql
#
# 클러스터 Floating IP
type OpenStackCmClusterFloatingIp1 {
  # 클러스터 Floating IP 의 ID
  id: BigInt
  # 클러스터에서의 Floating IP ID
  uuid: String
  # 클러스터 Floating IP 의 설명
  description: String
  # IP 주소
  ip_address: String
  status: OpenStackCmClusterFloatingIpStatusEnum
}

input OpenStackCmClusterFloatingIp1Input {
    # 클러스터 Floating IP 의 ID
    id: BigInt
    # 클러스터에서의 Floating IP ID
    uuid: String
    # 클러스터 Floating IP 의 설명
    description: String
    # IP 주소
    ip_address: String
    status: OpenStackCmClusterFloatingIpStatusEnum
}

#
# open_stack_cm_cluster_floating_ip_status_enum.graphql
#
# 상태
enum OpenStackCmClusterFloatingIpStatusEnum {
  ACTIVE
  DOWN
  ERROR
}

#
# open_stack_cm_cluster_hypervisor.graphql
#
# 클러스터 Hypervisor
type OpenStackCmClusterHypervisor {
  # 클러스터 Hypervisor 의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  availability_zone: OpenStackCmClusterAvailabilityZone
  # 클러스터에서의 Hypervisor ID
  uuid: String
  type_code: OpenStackCmClusterHypervisorTypeCodeEnum
  # 클러스터 Hypervisor 의 호스트네임
  hostname: String
  # 클러스터 Hypervisor 의 IP 주소
  ip_address: String
  # 클러스터 Hypervisor 의 CPU 코어 갯수 (core)
  vcpu_total_cnt: BigInt
  # 클러스터 Hypervisor 의 사용중인 VCPU 갯수
  vcpu_used_cnt: BigInt
  # 클러스터 Hypervisor 의 총 메모리 용량 (bytes)
  mem_total_bytes: BigInt
  # 클러스터 Hypervisor 의 사용중인 메모리 용량 (bytes)
  mem_used_bytes: BigInt
  # 클러스터 Hypervisor 의 총 디스크 용량 (bytes)
  disk_total_bytes: BigInt
  # 클러스터 Hypervisor 의 사용중인 디스크 용량 (bytes)
  disk_used_bytes: BigInt
  status: OpenStackCmClusterHypervisorStatusEnum
  state: OpenStackCmClusterHypervisorStateEnum
  # 클러스터 Hypervisor SSH 접속 Port
  ssh_port: BigInt
  # 클러스터 Hypervisor SSH 접속 Account
  ssh_account: String
  # 클러스터 Hypervisor SSH 접속 Password
  ssh_password: String
  # Agent Bind Port
  agent_port: BigInt
  # Agent 버전
  agent_version: String
  # Agemt 최초 설치 일시 (Timestamp)
  agent_installed_at: BigInt
  # Agemt 최종 업데이트 일시 (Timestamp)
  agent_last_upgraded_at: BigInt
}

input OpenStackCmClusterHypervisorInput {
    # 클러스터 Hypervisor 의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    availability_zone: OpenStackCmClusterAvailabilityZoneInput
    # 클러스터에서의 Hypervisor ID
    uuid: String
    type_code: OpenStackCmClusterHypervisorTypeCodeEnum
    # 클러스터 Hypervisor 의 호스트네임
    hostname: String
    # 클러스터 Hypervisor 의 IP 주소
    ip_address: String
    # 클러스터 Hypervisor 의 CPU 코어 갯수 (core)
    vcpu_total_cnt: BigInt
    # 클러스터 Hypervisor 의 사용중인 VCPU 갯수
    vcpu_used_cnt: BigInt
    # 클러스터 Hypervisor 의 총 메모리 용량 (bytes)
    mem_total_bytes: BigInt
    # 클러스터 Hypervisor 의 사용중인 메모리 용량 (bytes)
    mem_used_bytes: BigInt
    # 클러스터 Hypervisor 의 총 디스크 용량 (bytes)
    disk_total_bytes: BigInt
    # 클러스터 Hypervisor 의 사용중인 디스크 용량 (bytes)
    disk_used_bytes: BigInt
    status: OpenStackCmClusterHypervisorStatusEnum
    state: OpenStackCmClusterHypervisorStateEnum
    # 클러스터 Hypervisor SSH 접속 Port
    ssh_port: BigInt
    # 클러스터 Hypervisor SSH 접속 Account
    ssh_account: String
    # 클러스터 Hypervisor SSH 접속 Password
    ssh_password: String
    # Agent Bind Port
    agent_port: BigInt
    # Agent 버전
    agent_version: String
    # Agemt 최초 설치 일시 (Timestamp)
    agent_installed_at: BigInt
    # Agemt 최종 업데이트 일시 (Timestamp)
    agent_last_upgraded_at: BigInt
}

#
# open_stack_cm_cluster_hypervisor_1.graphql
#
# 클러스터 Hypervisor
type OpenStackCmClusterHypervisor1 {
  # 클러스터 Hypervisor 의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  availability_zone: OpenStackCmClusterAvailabilityZone1
  # 클러스터에서의 Hypervisor ID
  uuid: String
  type_code: OpenStackCmClusterHypervisorTypeCodeEnum
  # 클러스터 Hypervisor 의 호스트네임
  hostname: String
  # 클러스터 Hypervisor 의 IP 주소
  ip_address: String
  # 클러스터 Hypervisor 의 CPU 코어 갯수 (core)
  vcpu_total_cnt: BigInt
  # 클러스터 Hypervisor 의 사용중인 VCPU 갯수
  vcpu_used_cnt: BigInt
  # 클러스터 Hypervisor 의 총 메모리 용량 (bytes)
  mem_total_bytes: BigInt
  # 클러스터 Hypervisor 의 사용중인 메모리 용량 (bytes)
  mem_used_bytes: BigInt
  # 클러스터 Hypervisor 의 총 디스크 용량 (bytes)
  disk_total_bytes: BigInt
  # 클러스터 Hypervisor 의 사용중인 디스크 용량 (bytes)
  disk_used_bytes: BigInt
  status: OpenStackCmClusterHypervisorStatusEnum
  state: OpenStackCmClusterHypervisorStateEnum
  # 클러스터 Hypervisor SSH 접속 Port
  ssh_port: BigInt
  # 클러스터 Hypervisor SSH 접속 Account
  ssh_account: String
  # 클러스터 Hypervisor SSH 접속 Password
  ssh_password: String
  # Agent Bind Port
  agent_port: BigInt
  # Agent 버전
  agent_version: String
  # Agemt 최초 설치 일시 (Timestamp)
  agent_installed_at: BigInt
  # Agemt 최종 업데이트 일시 (Timestamp)
  agent_last_upgraded_at: BigInt
}

input OpenStackCmClusterHypervisor1Input {
    # 클러스터 Hypervisor 의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    availability_zone: OpenStackCmClusterAvailabilityZone1Input
    # 클러스터에서의 Hypervisor ID
    uuid: String
    type_code: OpenStackCmClusterHypervisorTypeCodeEnum
    # 클러스터 Hypervisor 의 호스트네임
    hostname: String
    # 클러스터 Hypervisor 의 IP 주소
    ip_address: String
    # 클러스터 Hypervisor 의 CPU 코어 갯수 (core)
    vcpu_total_cnt: BigInt
    # 클러스터 Hypervisor 의 사용중인 VCPU 갯수
    vcpu_used_cnt: BigInt
    # 클러스터 Hypervisor 의 총 메모리 용량 (bytes)
    mem_total_bytes: BigInt
    # 클러스터 Hypervisor 의 사용중인 메모리 용량 (bytes)
    mem_used_bytes: BigInt
    # 클러스터 Hypervisor 의 총 디스크 용량 (bytes)
    disk_total_bytes: BigInt
    # 클러스터 Hypervisor 의 사용중인 디스크 용량 (bytes)
    disk_used_bytes: BigInt
    status: OpenStackCmClusterHypervisorStatusEnum
    state: OpenStackCmClusterHypervisorStateEnum
    # 클러스터 Hypervisor SSH 접속 Port
    ssh_port: BigInt
    # 클러스터 Hypervisor SSH 접속 Account
    ssh_account: String
    # 클러스터 Hypervisor SSH 접속 Password
    ssh_password: String
    # Agent Bind Port
    agent_port: BigInt
    # Agent 버전
    agent_version: String
    # Agemt 최초 설치 일시 (Timestamp)
    agent_installed_at: BigInt
    # Agemt 최종 업데이트 일시 (Timestamp)
    agent_last_upgraded_at: BigInt
}

#
# open_stack_cm_cluster_hypervisor_state_enum.graphql
#
# Hypervisor 상태
enum OpenStackCmClusterHypervisorStateEnum {
  UP
  DOWN
  UNKNOWN
}

#
# open_stack_cm_cluster_hypervisor_status_enum.graphql
#
# Hypervisor 상태
enum OpenStackCmClusterHypervisorStatusEnum {
  ENABLED
  DISABLED
  UNKNOWN
}

#
# open_stack_cm_cluster_hypervisor_type_code_enum.graphql
#
# 클러스터 Hypervisor 의 종류
enum OpenStackCmClusterHypervisorTypeCodeEnum {
  KVM
  LXC
  QEMU
  UML
  VMWARE
  XEN
  XENSERVER
  HYPER_V
  VIRTUOZZO
}

#
# open_stack_cm_cluster_instance.graphql
#
# 클러스터 인스턴스
type OpenStackCmClusterInstance {
  # 클러스터 인스턴스의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  tenant: OpenStackCmClusterTenant
  availability_zone: OpenStackCmClusterAvailabilityZone
  hypervisor: OpenStackCmClusterHypervisor
  # 클러스터에서의 인스턴스 ID
  uuid: String
  # 클러스터 인스턴스의 이름
  name: String
  # 클러스터 인스턴스의 설명
  description: String
  status: OpenStackCmClusterInstanceStatusEnum
  state: OpenStackCmClusterInstanceStateEnum
  keypair: OpenStackCmClusterKeyPair
  spec: OpenStackCmClusterInstanceSpec
  # 인스턴스의 네트워크 목록
  networks: [OpenStackCmClusterInstanceNetwork]
  # 인스턴스의 네트워크들과 연결된 라우터 목록
  routers: [OpenStackCmClusterRouter]
  # 인스턴스의 보안그룹 목록
  security_groups: [OpenStackCmClusterInstanceSecurityGroup]
  # 인스턴스의 볼륨 목록
  volumes: [OpenStackCmClusterInstanceVolume]
}

input OpenStackCmClusterInstanceInput {
    # 클러스터 인스턴스의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    tenant: OpenStackCmClusterTenantInput
    availability_zone: OpenStackCmClusterAvailabilityZoneInput
    hypervisor: OpenStackCmClusterHypervisorInput
    # 클러스터에서의 인스턴스 ID
    uuid: String
    # 클러스터 인스턴스의 이름
    name: String
    # 클러스터 인스턴스의 설명
    description: String
    status: OpenStackCmClusterInstanceStatusEnum
    state: OpenStackCmClusterInstanceStateEnum
    keypair: OpenStackCmClusterKeyPairInput
    spec: OpenStackCmClusterInstanceSpecInput
    # 인스턴스의 네트워크 목록
    networks: [OpenStackCmClusterInstanceNetworkInput]
    # 인스턴스의 네트워크들과 연결된 라우터 목록
    routers: [OpenStackCmClusterRouterInput]
    # 인스턴스의 보안그룹 목록
    security_groups: [OpenStackCmClusterInstanceSecurityGroupInput]
    # 인스턴스의 볼륨 목록
    volumes: [OpenStackCmClusterInstanceVolumeInput]
}

#
# open_stack_cm_cluster_instance_1.graphql
#
# 클러스터 인스턴스
type OpenStackCmClusterInstance1 {
  # 클러스터 인스턴스의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  tenant: OpenStackCmClusterTenant1
  availability_zone: OpenStackCmClusterAvailabilityZone1
  hypervisor: OpenStackCmClusterHypervisor1
  # 클러스터에서의 인스턴스 ID
  uuid: String
  # 클러스터 인스턴스의 이름
  name: String
  # 클러스터 인스턴스의 설명
  description: String
  status: OpenStackCmClusterInstanceStatusEnum
  state: OpenStackCmClusterInstanceStateEnum
  keypair: OpenStackCmClusterKeyPair1
  spec: OpenStackCmClusterInstanceSpec1
  # 인스턴스의 네트워크 목록
  networks: [OpenStackCmClusterInstanceNetwork1]
  # 인스턴스의 네트워크들과 연결된 라우터 목록
  routers: [OpenStackCmClusterRouter1]
  # 인스턴스의 보안그룹 목록
  security_groups: [OpenStackCmClusterInstanceSecurityGroup1]
  # 인스턴스의 볼륨 목록
  volumes: [OpenStackCmClusterInstanceVolume1]
  proxy: OpenStackCmClusterInstanceProxy
  extra: OpenStackCmClusterInstanceExtra
}

input OpenStackCmClusterInstance1Input {
    # 클러스터 인스턴스의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    tenant: OpenStackCmClusterTenant1Input
    availability_zone: OpenStackCmClusterAvailabilityZone1Input
    hypervisor: OpenStackCmClusterHypervisor1Input
    # 클러스터에서의 인스턴스 ID
    uuid: String
    # 클러스터 인스턴스의 이름
    name: String
    # 클러스터 인스턴스의 설명
    description: String
    status: OpenStackCmClusterInstanceStatusEnum
    state: OpenStackCmClusterInstanceStateEnum
    keypair: OpenStackCmClusterKeyPair1Input
    spec: OpenStackCmClusterInstanceSpec1Input
    # 인스턴스의 네트워크 목록
    networks: [OpenStackCmClusterInstanceNetwork1Input]
    # 인스턴스의 네트워크들과 연결된 라우터 목록
    routers: [OpenStackCmClusterRouter1Input]
    # 인스턴스의 보안그룹 목록
    security_groups: [OpenStackCmClusterInstanceSecurityGroup1Input]
    # 인스턴스의 볼륨 목록
    volumes: [OpenStackCmClusterInstanceVolume1Input]
    proxy: OpenStackCmClusterInstanceProxyInput
    extra: OpenStackCmClusterInstanceExtraInput
}

#
# open_stack_cm_cluster_instance_extra.graphql
#
# 클러스터 인스턴스의 추가 정보
type OpenStackCmClusterInstanceExtra {
  # uefi 부팅관련 정보
  uefi: Boolean
  # os 타입정보
  os: String
  # vmware의 경우 사용되는 instance id
  vm_id: BigInt
}

input OpenStackCmClusterInstanceExtraInput {
    # uefi 부팅관련 정보
    uefi: Boolean
    # os 타입정보
    os: String
    # vmware의 경우 사용되는 instance id
    vm_id: BigInt
}

#
# open_stack_cm_cluster_instance_extra_spec.graphql
#
# 클러스터 인스턴스 Extra Specification
type OpenStackCmClusterInstanceExtraSpec {
  key: OpenStackCmClusterInstanceExtraSpecKeyEnum
  # Extra Specification 의 Value
  value: String
}

input OpenStackCmClusterInstanceExtraSpecInput {
    key: OpenStackCmClusterInstanceExtraSpecKeyEnum
    # Extra Specification 의 Value
    value: String
}

#
# open_stack_cm_cluster_instance_extra_spec_1.graphql
#
# 클러스터 인스턴스 Extra Specification
type OpenStackCmClusterInstanceExtraSpec1 {
  key: OpenStackCmClusterInstanceExtraSpecKeyEnum
  # Extra Specification 의 Value
  value: String
}

input OpenStackCmClusterInstanceExtraSpec1Input {
    key: OpenStackCmClusterInstanceExtraSpecKeyEnum
    # Extra Specification 의 Value
    value: String
}

#
# open_stack_cm_cluster_instance_extra_spec_key_enum.graphql
#
# Extra Specification 의 Key  **CPU limits:** - quota:cpu_shares - Specifies the proportional weighted share for the domain. If this element is omitted, the service defaults to the OS provided defaults. There is no unit for the value; it is a relative measure based on the setting of other VMs. For example, a VM configured with value 2048 gets twice as much CPU time as a VM configured with value 1024. - quota:cpu_shares_level - On VMware, specifies the allocation level. Can be custom, high, normal, or low. If you choose custom, set the number of shares using cpu_shares_share. - quota:cpu_period - Specifies the enforcement interval (unit: microseconds) for QEMU and LXC hypervisors. Within a period, each VCPU of the domain is not allowed to consume more than the quota worth of runtime. The value should be in range [1000, 1000000]. A period with value 0 means no value. - quota:cpu_limit - Specifies the upper limit for VMware machine CPU allocation in MHz. This parameter ensures that a machine never uses more than the defined amount of CPU time. It can be used to enforce a limit on the machine's CPU performance. - quota:cpu_reservation - Specifies the guaranteed minimum CPU reservation in MHz for VMware. This means that if needed, the machine will definitely get allocated the reserved amount of CPU cycles. - quota:cpu_quota - Specifies the maximum allowed bandwidth (unit: microseconds). A domain with a negative-value quota indicates that the domain has infinite bandwidth, which means that it is not bandwidth controlled. The value should be in range [1000, 18446744073709551] or less than 0. A quota with value 0 means no value. You can use this feature to ensure that all vCPUs run at the same speed.  **Memory limits:** - quota:memory_limit - Specifies the upper limit for VMware machine memory allocation in MB. The utilization of a virtual machine will not exceed this limit, even if there are available resources. This is typically used to ensure a consistent performance of virtual machines independent of available resources. - quota:memory_reservation - Specifies the guaranteed minimum memory reservation in MB for VMware. This means the specified amount of memory will definitely be allocated to the machine. - quota:memory_shares_level - On VMware, specifies the allocation level. This can be custom, high, normal or low. If you choose custom, set the number of shares using memory_shares_share. - quota:memory_shares_share - Specifies the number of shares allocated in the event that custom is used. There is no unit for this value. It is a relative measure based on the settings for other VMs.  **Disk I/O limits:** - quota:disk_io_limit - Specifies the upper limit for disk utilization in I/O per second. The utilization of a virtual machine will not exceed this limit, even if there are available resources. The default value is -1 which indicates unlimited usage. - quota:disk_io_reservation - Specifies the guaranteed minimum disk allocation in terms of Input/output Operations Per Second (IOPS). - quota:disk_io_shares_level - Specifies the allocation level. This can be custom, high, normal or low. If you choose custom, set the number of shares using disk_io_shares_share. - quota:disk_io_shares_share - Specifies the number of shares allocated in the event that custom is used. When there is resource contention, this value is used to determine the resource allocation.  **Disk tuning:** - quota:disk_read_bytes_sec - quota:disk_read_iops_sec - quota:disk_write_bytes_sec - quota:disk_write_iops_sec - quota:disk_total_bytes_sec - quota:disk_total_iops_sec  **Bandwidth I/O:** - quota:vif_inbound_average - quota:vif_inbound_burst - quota:vif_inbound_peak - quota:vif_outbound_average - quota:vif_outbound_burst - quota:vif_outbound_peak  **Watchdog behavior:** - hw:watchdog_action  **Random-number generator:** - hw_rng:rate-allowed - hw_rng:rate_bytes - hw_rng:rate_period  **CPU topology:** - hw:cpu_sockets - hw:cpu_cores - hw:cpu_threads - hw:cpu_max_sockets - hw:cpu_max_cores - hw:cpu_max_threads  **CPU pinning policy:** - hw:cpu_policy - hw:cpu_thread_policy  **NUMA topology:** - hw:numa_nodes - hw:numa_cpus.N - hw:numa_mem.N  **Large pages allocation:** - hw:mem_page_size  **PCI passthrough:** - pci_passthrough:alias  **Secure Boot:** - os:secure_boot
enum OpenStackCmClusterInstanceExtraSpecKeyEnum {
  QUOTA_CPU_SHARES
  QUOTA_CPU_SHARES_LEVEL
  QUOTA_CPU_PERIOD
  QUOTA_CPU_LIMIT
  QUOTA_CPU_RESERVATION
  QUOTA_CPU_QUOTA
  QUOTA_MEMORY_LIMIT
  QUOTA_MEMORY_RESERVATION
  QUOTA_MEMORY_SHARES_LEVEL
  QUOTA_MEMORY_SHARES_SHARE
  QUOTA_DISK_IO_LIMIT
  QUOTA_DISK_IO_RESERVATION
  QUOTA_DISK_IO_SHARES_LEVEL
  QUOTA_DISK_IO_SHARES_SHARE
  QUOTA_DISK_READ_BYTES_SEC
  QUOTA_DISK_READ_IOPS_SEC
  QUOTA_DISK_WRITE_BYTES_SEC
  QUOTA_DISK_WRITE_IOPS_SEC
  QUOTA_DISK_TOTAL_BYTES_SEC
  QUOTA_DISK_TOTAL_IOPS_SEC
  QUOTA_VIF_INBOUND_AVERAGE
  QUOTA_VIF_INBOUND_BURST
  QUOTA_VIF_INBOUND_PEAK
  QUOTA_VIF_OUTBOUND_AVERAGE
  QUOTA_VIF_OUTBOUND_BURST
  QUOTA_VIF_OUTBOUND_PEAK
  HW_WATCHDOG_ACTION
  HW_RNG_RATE_ALLOWED
  HW_RNG_RATE_BYTES
  HW_RNG_RATE_PERIOD
  HW_CPU_SOCKETS
  HW_CPU_CORES
  HW_CPU_THREADS
  HW_CPU_MAX_SOCKETS
  HW_CPU_MAX_CORES
  HW_CPU_MAX_THREADS
  HW_CPU_POLICY
  HW_CPU_THREAD_POLICY
  HW_NUMA_NODES
  HW_NUMA_CPUS__N
  HW_NUMA_MEM__N
  HW_MEM_PAGE_SIZE
  PCI_PASSTHROUGH_ALIAS
  OS_SECURE_BOOT
}

#
# open_stack_cm_cluster_instance_network.graphql
#
# 클러스터 인스턴스의 네트워크
type OpenStackCmClusterInstanceNetwork {
  # 인스턴스 네트워크의 ID
  id: BigInt
  network: OpenStackCmClusterNetwork
  subnet: OpenStackCmClusterSubnet
  floating_ip: OpenStackCmClusterFloatingIp
  # DHCP 여부
  dhcp_flag: Boolean
  # IP 주소
  ip_address: String
}

input OpenStackCmClusterInstanceNetworkInput {
    # 인스턴스 네트워크의 ID
    id: BigInt
    network: OpenStackCmClusterNetworkInput
    subnet: OpenStackCmClusterSubnetInput
    floating_ip: OpenStackCmClusterFloatingIpInput
    # DHCP 여부
    dhcp_flag: Boolean
    # IP 주소
    ip_address: String
}

#
# open_stack_cm_cluster_instance_network_1.graphql
#
# 클러스터 인스턴스의 네트워크
type OpenStackCmClusterInstanceNetwork1 {
  # 인스턴스 네트워크의 ID
  id: BigInt
  network: OpenStackCmClusterNetwork1
  subnet: OpenStackCmClusterSubnet1
  floating_ip: OpenStackCmClusterFloatingIp1
  # DHCP 여부
  dhcp_flag: Boolean
  # IP 주소
  ip_address: String
}

input OpenStackCmClusterInstanceNetwork1Input {
    # 인스턴스 네트워크의 ID
    id: BigInt
    network: OpenStackCmClusterNetwork1Input
    subnet: OpenStackCmClusterSubnet1Input
    floating_ip: OpenStackCmClusterFloatingIp1Input
    # DHCP 여부
    dhcp_flag: Boolean
    # IP 주소
    ip_address: String
}

#
# open_stack_cm_cluster_instance_proxy.graphql
#
# 클러스터 인스턴스의 Proxy 설정 정보
type OpenStackCmClusterInstanceProxy {
  # 인스턴스 Proxy 설정 유무
  proxy_flag: Boolean
  # 인스턴스 Proxy IP 주소
  ip_address: String
  # 인스턴스 Proxy IP 포트
  port: BigInt
  # 인스턴스 Proxy OS 정보
  os_type: String
}

input OpenStackCmClusterInstanceProxyInput {
    # 인스턴스 Proxy 설정 유무
    proxy_flag: Boolean
    # 인스턴스 Proxy IP 주소
    ip_address: String
    # 인스턴스 Proxy IP 포트
    port: BigInt
    # 인스턴스 Proxy OS 정보
    os_type: String
}

#
# open_stack_cm_cluster_instance_proxy_link.graphql
#
# 클러스터 인스턴스의 Proxy pair 정보
type OpenStackCmClusterInstanceProxyLink {
  # Proxy pair ID
  id: BigInt
  # 클러스터 인스턴스 Proxy pair 이름
  name: String
  protection_proxy: OpenStackCmClusterInstance1
  recovery_proxy: OpenStackCmClusterInstance1
  # 클러스터 인스턴스의 Proxy pair 설명
  description: String
}

input OpenStackCmClusterInstanceProxyLinkInput {
    # Proxy pair ID
    id: BigInt
    # 클러스터 인스턴스 Proxy pair 이름
    name: String
    protection_proxy: OpenStackCmClusterInstance1Input
    recovery_proxy: OpenStackCmClusterInstance1Input
    # 클러스터 인스턴스의 Proxy pair 설명
    description: String
}

#
# open_stack_cm_cluster_instance_security_group.graphql
#
type OpenStackCmClusterInstanceSecurityGroup {
  # 클러스터 보안그룹의 규칙 목록
  rules: [OpenStackCmClusterSecurityGroupRule]
  # 클러스터 보안그룹의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  tenant: OpenStackCmClusterTenant
  # 클러스터에서의 보안그룹 ID
  uuid: String
  # 클러스터 보안그룹의 이름
  name: String
  # 클러스터 보안그룹의 설명
  description: String
}

input OpenStackCmClusterInstanceSecurityGroupInput {
    # 클러스터 보안그룹의 규칙 목록
    rules: [OpenStackCmClusterSecurityGroupRuleInput]
    # 클러스터 보안그룹의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    tenant: OpenStackCmClusterTenantInput
    # 클러스터에서의 보안그룹 ID
    uuid: String
    # 클러스터 보안그룹의 이름
    name: String
    # 클러스터 보안그룹의 설명
    description: String
}

#
# open_stack_cm_cluster_instance_security_group_1.graphql
#
type OpenStackCmClusterInstanceSecurityGroup1 {
  # 클러스터 보안그룹의 규칙 목록
  rules: [OpenStackCmClusterSecurityGroupRule1]
  # 클러스터 보안그룹의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  tenant: OpenStackCmClusterTenant1
  # 클러스터에서의 보안그룹 ID
  uuid: String
  # 클러스터 보안그룹의 이름
  name: String
  # 클러스터 보안그룹의 설명
  description: String
}

input OpenStackCmClusterInstanceSecurityGroup1Input {
    # 클러스터 보안그룹의 규칙 목록
    rules: [OpenStackCmClusterSecurityGroupRule1Input]
    # 클러스터 보안그룹의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    tenant: OpenStackCmClusterTenant1Input
    # 클러스터에서의 보안그룹 ID
    uuid: String
    # 클러스터 보안그룹의 이름
    name: String
    # 클러스터 보안그룹의 설명
    description: String
}

#
# open_stack_cm_cluster_instance_spec.graphql
#
# 클러스터 인스턴스 Specification
type OpenStackCmClusterInstanceSpec {
  # Specification 의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  # 클러스터에서의 Specification ID
  uuid: String
  # Specification 의 이름
  name: String
  # Specification 의 설명
  description: String
  # VCPU 코어 수 (core)
  vcpu_total_cnt: BigInt
  # 메모리 용량 (bytes)
  mem_total_bytes: BigInt
  # 디스크 용량 (bytes)
  disk_total_bytes: BigInt
  # 스왑 영역 (bytes)
  swap_total_bytes: BigInt
  # 임시 영역 (bytes)
  ephemeral_total_bytes: BigInt
  # Extra Specifications
  extra_specs: [OpenStackCmClusterInstanceExtraSpec]
}

input OpenStackCmClusterInstanceSpecInput {
    # Specification 의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    # 클러스터에서의 Specification ID
    uuid: String
    # Specification 의 이름
    name: String
    # Specification 의 설명
    description: String
    # VCPU 코어 수 (core)
    vcpu_total_cnt: BigInt
    # 메모리 용량 (bytes)
    mem_total_bytes: BigInt
    # 디스크 용량 (bytes)
    disk_total_bytes: BigInt
    # 스왑 영역 (bytes)
    swap_total_bytes: BigInt
    # 임시 영역 (bytes)
    ephemeral_total_bytes: BigInt
    # Extra Specifications
    extra_specs: [OpenStackCmClusterInstanceExtraSpecInput]
}

#
# open_stack_cm_cluster_instance_spec_1.graphql
#
# 클러스터 인스턴스 Specification
type OpenStackCmClusterInstanceSpec1 {
  # Specification 의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  # 클러스터에서의 Specification ID
  uuid: String
  # Specification 의 이름
  name: String
  # Specification 의 설명
  description: String
  # VCPU 코어 수 (core)
  vcpu_total_cnt: BigInt
  # 메모리 용량 (bytes)
  mem_total_bytes: BigInt
  # 디스크 용량 (bytes)
  disk_total_bytes: BigInt
  # 스왑 영역 (bytes)
  swap_total_bytes: BigInt
  # 임시 영역 (bytes)
  ephemeral_total_bytes: BigInt
  # Extra Specifications
  extra_specs: [OpenStackCmClusterInstanceExtraSpec1]
}

input OpenStackCmClusterInstanceSpec1Input {
    # Specification 의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    # 클러스터에서의 Specification ID
    uuid: String
    # Specification 의 이름
    name: String
    # Specification 의 설명
    description: String
    # VCPU 코어 수 (core)
    vcpu_total_cnt: BigInt
    # 메모리 용량 (bytes)
    mem_total_bytes: BigInt
    # 디스크 용량 (bytes)
    disk_total_bytes: BigInt
    # 스왑 영역 (bytes)
    swap_total_bytes: BigInt
    # 임시 영역 (bytes)
    ephemeral_total_bytes: BigInt
    # Extra Specifications
    extra_specs: [OpenStackCmClusterInstanceExtraSpec1Input]
}

#
# open_stack_cm_cluster_instance_state_enum.graphql
#
# 인스턴스 전원 상태 - 0: NOSTATE - 1: RUNNING - 3: PAUSED - 4: SHUTDOWN - 6: CRASHED - 7: SUSPENDED
enum OpenStackCmClusterInstanceStateEnum {
  NOSTATE
  RUNNING
  PAUSED
  SHUTDOWN
  CRASHED
  SUSPENDED
}

#
# open_stack_cm_cluster_instance_status_enum.graphql
#
# 인스턴스 상태 - ACTIVE: The server is active. - BUILD: The server has not yet finished the original build process. - DELETED: The server is deleted. - ERROR: The server is in error. - HARD_REBOOT: The server is hard rebooting. This is equivalent to pulling the power plug on a physical server, plugging it back in, and rebooting it. - MIGRATING: The server is migrating. This is caused by a live migration (moving a server that is active) action. - PASSWORD: The password is being reset on the server. - PAUSED: The server is paused. - REBOOT: The server is in a soft reboot state. A reboot command was passed to the operating system. - REBUILD: The server is currently being rebuilt from an image. - RESCUE: The server is in rescue mode. - RESIZE: Server is performing the differential copy of data that changed during its initial copy. Server is down for this stage. - REVERT_RESIZE: The resize or migration of a server failed for some reason. The destination server is being cleaned up and the original source server is restarting. - SHELVED: The server is in shelved state. Depends on the shelve offload time, the server will be automatically shelved off loaded. - SHELVED_OFFLOADED: The shelved server is offloaded (removed from the compute host) and it needs unshelved action to be used again. - SHUTOFF: The server was powered down by the user, either through the OpenStack Compute API or from within the server. For example, the user issued a shutdown -h command from within the server. If the OpenStack Compute manager detects that the VM was powered down, it transitions the server to the SHUTOFF status. - SOFT_DELETED: The server is marked as deleted but will remain in the cloud for some configurable amount of time. While soft-deleted, an authorized user can restore the server back to normal state. When the time expires, the server will be deleted permanently. - SUSPENDED: The server is suspended, either by request or necessity. See the feature support matrix for supported compute drivers. When you suspend a server, its state is stored on disk, all memory is written to disk, and the server is stopped. Suspending a server is similar to placing a device in hibernation and its occupied resource will not be freed but rather kept for when the server is resumed. If an instance is infrequently used and the occupied resource needs to be freed to create other servers, it should be shelved. - UNKNOWN: The state of the server is unknown. It could be because a part of the infrastructure is temporarily down (see Handling Down Cells for more information). Contact your cloud provider. - VERIFY_RESIZE: System is awaiting confirmation that the server is operational after a move or resize.
enum OpenStackCmClusterInstanceStatusEnum {
  ACTIVE
  BUILD
  DELETED
  ERROR
  HARD_REBOOT
  MIGRATING
  PASSWORD
  PAUSED
  REBOOT
  REBUILD
  RESCUE
  RESIZE
  REVERT_RESIZE
  SHELVED
  SHELVED_OFFLOADED
  SHUTOFF
  SOFT_DELETED
  SUSPENDED
  UNKNOWN
  VERIFY_RESIZE
}

#
# open_stack_cm_cluster_instance_volume.graphql
#
# 클러스터 인스턴스의 볼륨
type OpenStackCmClusterInstanceVolume {
  storage: OpenStackCmClusterStorage
  volume: OpenStackCmClusterVolume
  # 디바이스 경로
  device_path: String
  # 부팅 순서
  boot_index: BigInt
}

input OpenStackCmClusterInstanceVolumeInput {
    storage: OpenStackCmClusterStorageInput
    volume: OpenStackCmClusterVolumeInput
    # 디바이스 경로
    device_path: String
    # 부팅 순서
    boot_index: BigInt
}

#
# open_stack_cm_cluster_instance_volume_1.graphql
#
# 클러스터 인스턴스의 볼륨
type OpenStackCmClusterInstanceVolume1 {
  storage: OpenStackCmClusterStorage1
  volume: OpenStackCmClusterVolume1
  # 디바이스 경로
  device_path: String
  # 부팅 순서
  boot_index: BigInt
}

input OpenStackCmClusterInstanceVolume1Input {
    storage: OpenStackCmClusterStorage1Input
    volume: OpenStackCmClusterVolume1Input
    # 디바이스 경로
    device_path: String
    # 부팅 순서
    boot_index: BigInt
}

#
# open_stack_cm_cluster_key_pair.graphql
#
# 클러스터 KeyPair
type OpenStackCmClusterKeyPair {
  # KeyPair 의 ID
  id: BigInt
  # KeyPair 의 이름
  name: String
  # KeyPair 의 fingerprint
  fingerprint: String
  # KeyPair 의 public key
  public_key: String
  type_code: OpenStackCmClusterKeyPairTypeCodeEnum
}

input OpenStackCmClusterKeyPairInput {
    # KeyPair 의 ID
    id: BigInt
    # KeyPair 의 이름
    name: String
    # KeyPair 의 fingerprint
    fingerprint: String
    # KeyPair 의 public key
    public_key: String
    type_code: OpenStackCmClusterKeyPairTypeCodeEnum
}

#
# open_stack_cm_cluster_key_pair_1.graphql
#
# 클러스터 KeyPair
type OpenStackCmClusterKeyPair1 {
  # KeyPair 의 ID
  id: BigInt
  # KeyPair 의 이름
  name: String
  # KeyPair 의 fingerprint
  fingerprint: String
  # KeyPair 의 public key
  public_key: String
  type_code: OpenStackCmClusterKeyPairTypeCodeEnum
}

input OpenStackCmClusterKeyPair1Input {
    # KeyPair 의 ID
    id: BigInt
    # KeyPair 의 이름
    name: String
    # KeyPair 의 fingerprint
    fingerprint: String
    # KeyPair 의 public key
    public_key: String
    type_code: OpenStackCmClusterKeyPairTypeCodeEnum
}

#
# open_stack_cm_cluster_key_pair_type_code_enum.graphql
#
# KeyPair 의 타입
enum OpenStackCmClusterKeyPairTypeCodeEnum {
  SSH
  X509
}

#
# open_stack_cm_cluster_network.graphql
#
# 클러스터 네트워크
type OpenStackCmClusterNetwork {
  # 클러스터 네트워크의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  tenant: OpenStackCmClusterTenant
  type_code: OpenStackCmClusterNetworkTypeCodeEnum
  # 클러스터에서의 네트워크 ID
  uuid: String
  # 클러스터 네트워크의 이름
  name: String
  # 클러스터 네트워크의 설명
  description: String
  # 외부 네트워크 여부
  external_flag: Boolean
  status: OpenStackCmClusterNetworkStatusEnum
  state: OpenStackCmClusterNetworkStateEnum
  # 서브넷 목록
  subnets: [OpenStackCmClusterSubnet]
  # FloatingIP 목록
  floating_ips: [OpenStackCmClusterFloatingIp]
}

input OpenStackCmClusterNetworkInput {
    # 클러스터 네트워크의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    tenant: OpenStackCmClusterTenantInput
    type_code: OpenStackCmClusterNetworkTypeCodeEnum
    # 클러스터에서의 네트워크 ID
    uuid: String
    # 클러스터 네트워크의 이름
    name: String
    # 클러스터 네트워크의 설명
    description: String
    # 외부 네트워크 여부
    external_flag: Boolean
    status: OpenStackCmClusterNetworkStatusEnum
    state: OpenStackCmClusterNetworkStateEnum
    # 서브넷 목록
    subnets: [OpenStackCmClusterSubnetInput]
    # FloatingIP 목록
    floating_ips: [OpenStackCmClusterFloatingIpInput]
}

#
# open_stack_cm_cluster_network_1.graphql
#
# 클러스터 네트워크
type OpenStackCmClusterNetwork1 {
  # 클러스터 네트워크의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  tenant: OpenStackCmClusterTenant1
  type_code: OpenStackCmClusterNetworkTypeCodeEnum
  # 클러스터에서의 네트워크 ID
  uuid: String
  # 클러스터 네트워크의 이름
  name: String
  # 클러스터 네트워크의 설명
  description: String
  # 외부 네트워크 여부
  external_flag: Boolean
  status: OpenStackCmClusterNetworkStatusEnum
  state: OpenStackCmClusterNetworkStateEnum
  # 서브넷 목록
  subnets: [OpenStackCmClusterSubnet1]
  # FloatingIP 목록
  floating_ips: [OpenStackCmClusterFloatingIp1]
}

input OpenStackCmClusterNetwork1Input {
    # 클러스터 네트워크의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    tenant: OpenStackCmClusterTenant1Input
    type_code: OpenStackCmClusterNetworkTypeCodeEnum
    # 클러스터에서의 네트워크 ID
    uuid: String
    # 클러스터 네트워크의 이름
    name: String
    # 클러스터 네트워크의 설명
    description: String
    # 외부 네트워크 여부
    external_flag: Boolean
    status: OpenStackCmClusterNetworkStatusEnum
    state: OpenStackCmClusterNetworkStateEnum
    # 서브넷 목록
    subnets: [OpenStackCmClusterSubnet1Input]
    # FloatingIP 목록
    floating_ips: [OpenStackCmClusterFloatingIp1Input]
}

#
# open_stack_cm_cluster_network_routing_interface.graphql
#
# 네트워크 라우터의 라우팅 인터페이스
type OpenStackCmClusterNetworkRoutingInterface {
  network: OpenStackCmClusterNetwork
  subnet: OpenStackCmClusterSubnet
  # 라우팅 인터페이스의 IP 주소
  ip_address: String
}

input OpenStackCmClusterNetworkRoutingInterfaceInput {
    network: OpenStackCmClusterNetworkInput
    subnet: OpenStackCmClusterSubnetInput
    # 라우팅 인터페이스의 IP 주소
    ip_address: String
}

#
# open_stack_cm_cluster_network_routing_interface_1.graphql
#
# 네트워크 라우터의 라우팅 인터페이스
type OpenStackCmClusterNetworkRoutingInterface1 {
  network: OpenStackCmClusterNetwork1
  subnet: OpenStackCmClusterSubnet1
  # 라우팅 인터페이스의 IP 주소
  ip_address: String
}

input OpenStackCmClusterNetworkRoutingInterface1Input {
    network: OpenStackCmClusterNetwork1Input
    subnet: OpenStackCmClusterSubnet1Input
    # 라우팅 인터페이스의 IP 주소
    ip_address: String
}

#
# open_stack_cm_cluster_network_state_enum.graphql
#
# 네트워크 상태
enum OpenStackCmClusterNetworkStateEnum {
  UP
  DOWN
}

#
# open_stack_cm_cluster_network_status_enum.graphql
#
# 네트워크 상태
enum OpenStackCmClusterNetworkStatusEnum {
  ACTIVE
  DOWN
  BUILD
  ERROR
}

#
# open_stack_cm_cluster_network_type_code_enum.graphql
#
# 네트워크 타입
enum OpenStackCmClusterNetworkTypeCodeEnum {
  VLAN
  VXLAN
  GRE
  FLAT
  LOCAL
  GENEVE
}

#
# open_stack_cm_cluster_permission.graphql
#
# 클러스터 권한
type OpenStackCmClusterPermission {
  group: CloudUserGroup
  mode_code: OpenStackCmClusterPermissionModeCodeEnum
}

input OpenStackCmClusterPermissionInput {
    group: CloudUserGroupInput
    mode_code: OpenStackCmClusterPermissionModeCodeEnum
}

#
# open_stack_cm_cluster_permission_1.graphql
#
# 클러스터 권한
type OpenStackCmClusterPermission1 {
  group: CloudUserGroup
  mode_code: OpenStackCmClusterPermissionModeCodeEnum
}

input OpenStackCmClusterPermission1Input {
    group: CloudUserGroupInput
    mode_code: OpenStackCmClusterPermissionModeCodeEnum
}

#
# open_stack_cm_cluster_permission_mode_code_enum.graphql
#
# 클러스터 권한 모드
enum OpenStackCmClusterPermissionModeCodeEnum {
  CLUSTER_PERMISSION_MODE_READONLY
  CLUSTER_PERMISSION_MODE_READWRITE
}

#
# open_stack_cm_cluster_router.graphql
#
# 클러스터 네트워크 라우터
type OpenStackCmClusterRouter {
  # 클러스터 네트워크 라우터의 ID
  id: BigInt
  tenant: OpenStackCmClusterTenant
  # 클러스터에서의 네트워크 라우터 ID
  uuid: String
  # 클러스터 라우터의 이름
  name: String
  # 클러스터 라우터의 설명
  description: String
  # 내부 네트워크로의 라우팅 인터페이스 목록
  internal_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterface]
  # 외부 네트워크로의 라우팅 인터페이스 목록
  external_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterface]
  # 추가 라우트 목록
  extra_routes: [OpenStackCmClusterRouterExtraRoute]
  status: OpenStackCmClusterRouterStatusEnum
  state: OpenStackCmClusterRouterStateEnum
}

input OpenStackCmClusterRouterInput {
    # 클러스터 네트워크 라우터의 ID
    id: BigInt
    tenant: OpenStackCmClusterTenantInput
    # 클러스터에서의 네트워크 라우터 ID
    uuid: String
    # 클러스터 라우터의 이름
    name: String
    # 클러스터 라우터의 설명
    description: String
    # 내부 네트워크로의 라우팅 인터페이스 목록
    internal_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterfaceInput]
    # 외부 네트워크로의 라우팅 인터페이스 목록
    external_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterfaceInput]
    # 추가 라우트 목록
    extra_routes: [OpenStackCmClusterRouterExtraRouteInput]
    status: OpenStackCmClusterRouterStatusEnum
    state: OpenStackCmClusterRouterStateEnum
}

#
# open_stack_cm_cluster_router_1.graphql
#
# 클러스터 네트워크 라우터
type OpenStackCmClusterRouter1 {
  # 클러스터 네트워크 라우터의 ID
  id: BigInt
  tenant: OpenStackCmClusterTenant1
  # 클러스터에서의 네트워크 라우터 ID
  uuid: String
  # 클러스터 라우터의 이름
  name: String
  # 클러스터 라우터의 설명
  description: String
  # 내부 네트워크로의 라우팅 인터페이스 목록
  internal_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterface1]
  # 외부 네트워크로의 라우팅 인터페이스 목록
  external_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterface1]
  # 추가 라우트 목록
  extra_routes: [OpenStackCmClusterRouterExtraRoute]
  status: OpenStackCmClusterRouterStatusEnum
  state: OpenStackCmClusterRouterStateEnum
}

input OpenStackCmClusterRouter1Input {
    # 클러스터 네트워크 라우터의 ID
    id: BigInt
    tenant: OpenStackCmClusterTenant1Input
    # 클러스터에서의 네트워크 라우터 ID
    uuid: String
    # 클러스터 라우터의 이름
    name: String
    # 클러스터 라우터의 설명
    description: String
    # 내부 네트워크로의 라우팅 인터페이스 목록
    internal_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterface1Input]
    # 외부 네트워크로의 라우팅 인터페이스 목록
    external_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterface1Input]
    # 추가 라우트 목록
    extra_routes: [OpenStackCmClusterRouterExtraRouteInput]
    status: OpenStackCmClusterRouterStatusEnum
    state: OpenStackCmClusterRouterStateEnum
}

#
# open_stack_cm_cluster_router_extra_route.graphql
#
# 클러스터 네트워크 추가 라우트
type OpenStackCmClusterRouterExtraRoute {
  # 클러스터 네트워크 라우트의 ID
  id: BigInt
  # 목적지 CIDR
  destination: String
  # 목적지에 대한 Nexthop IP 주소
  nexthop: String
}

input OpenStackCmClusterRouterExtraRouteInput {
    # 클러스터 네트워크 라우트의 ID
    id: BigInt
    # 목적지 CIDR
    destination: String
    # 목적지에 대한 Nexthop IP 주소
    nexthop: String
}

#
# open_stack_cm_cluster_router_state_enum.graphql
#
# 라우터 상태
enum OpenStackCmClusterRouterStateEnum {
  UP
  DOWN
}

#
# open_stack_cm_cluster_router_status_enum.graphql
#
# 라우터 상태
enum OpenStackCmClusterRouterStatusEnum {
  ACTIVE
  DOWN
  BUILD
  ERROR
}

#
# open_stack_cm_cluster_security_group.graphql
#
# 클러스터 보안그룹
type OpenStackCmClusterSecurityGroup {
  # 클러스터 보안그룹의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  tenant: OpenStackCmClusterTenant
  # 클러스터에서의 보안그룹 ID
  uuid: String
  # 클러스터 보안그룹의 이름
  name: String
  # 클러스터 보안그룹의 설명
  description: String
}

input OpenStackCmClusterSecurityGroupInput {
    # 클러스터 보안그룹의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    tenant: OpenStackCmClusterTenantInput
    # 클러스터에서의 보안그룹 ID
    uuid: String
    # 클러스터 보안그룹의 이름
    name: String
    # 클러스터 보안그룹의 설명
    description: String
}

#
# open_stack_cm_cluster_security_group_1.graphql
#
# 클러스터 보안그룹
type OpenStackCmClusterSecurityGroup1 {
  # 클러스터 보안그룹의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  tenant: OpenStackCmClusterTenant1
  # 클러스터에서의 보안그룹 ID
  uuid: String
  # 클러스터 보안그룹의 이름
  name: String
  # 클러스터 보안그룹의 설명
  description: String
}

input OpenStackCmClusterSecurityGroup1Input {
    # 클러스터 보안그룹의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    tenant: OpenStackCmClusterTenant1Input
    # 클러스터에서의 보안그룹 ID
    uuid: String
    # 클러스터 보안그룹의 이름
    name: String
    # 클러스터 보안그룹의 설명
    description: String
}

#
# open_stack_cm_cluster_security_group_rule.graphql
#
# 클러스터 보안그룹 규칙
type OpenStackCmClusterSecurityGroupRule {
  # 클러스터 보안그룹 규칙의 ID
  id: BigInt
  remote_security_group: OpenStackCmClusterSecurityGroup
  # 클러스터에서의 보안그룹 규칙 ID
  uuid: String
  # 클러스터 보안그룹 규칙의 설명
  description: String
  ether_type: OpenStackCmClusterSecurityGroupRuleEtherTypeEnum
  # 네트워크 CIDR
  network_cidr: String
  direction: OpenStackCmClusterSecurityGroupRuleDirectionEnum
  # 포트 범위 최대 값
  port_range_max: BigInt
  # 포트 범위 최소 값
  port_range_min: BigInt
  # 프로토콜  The IP protocol can be represented by a string, an integer, or null. Valid string or integer values are any or 0, ah or 51, dccp or 33, egp or 8, esp or 50, gre or 47, icmp or 1, icmpv6 or 58, igmp or 2, ipip or 4, ipv6-encap or 41, ipv6-frag or 44, ipv6-icmp or 58, ipv6-nonxt or 59, ipv6-opts or 60, ipv6-route or 43, ospf or 89, pgm or 113, rsvp or 46, sctp or 132, tcp or 6, udp or 17, udplite or 136, vrrp or 112. Additionally, any integer value between [0-255] is also valid. The string any (or integer 0) means all IP protocols. See the constants in neutron_lib.constants for the most up-to-date list of supported strings.
  protocol: String
}

input OpenStackCmClusterSecurityGroupRuleInput {
    # 클러스터 보안그룹 규칙의 ID
    id: BigInt
    remote_security_group: OpenStackCmClusterSecurityGroupInput
    # 클러스터에서의 보안그룹 규칙 ID
    uuid: String
    # 클러스터 보안그룹 규칙의 설명
    description: String
    ether_type: OpenStackCmClusterSecurityGroupRuleEtherTypeEnum
    # 네트워크 CIDR
    network_cidr: String
    direction: OpenStackCmClusterSecurityGroupRuleDirectionEnum
    # 포트 범위 최대 값
    port_range_max: BigInt
    # 포트 범위 최소 값
    port_range_min: BigInt
    # 프로토콜  The IP protocol can be represented by a string, an integer, or null. Valid string or integer values are any or 0, ah or 51, dccp or 33, egp or 8, esp or 50, gre or 47, icmp or 1, icmpv6 or 58, igmp or 2, ipip or 4, ipv6-encap or 41, ipv6-frag or 44, ipv6-icmp or 58, ipv6-nonxt or 59, ipv6-opts or 60, ipv6-route or 43, ospf or 89, pgm or 113, rsvp or 46, sctp or 132, tcp or 6, udp or 17, udplite or 136, vrrp or 112. Additionally, any integer value between [0-255] is also valid. The string any (or integer 0) means all IP protocols. See the constants in neutron_lib.constants for the most up-to-date list of supported strings.
    protocol: String
}

#
# open_stack_cm_cluster_security_group_rule_1.graphql
#
# 클러스터 보안그룹 규칙
type OpenStackCmClusterSecurityGroupRule1 {
  # 클러스터 보안그룹 규칙의 ID
  id: BigInt
  remote_security_group: OpenStackCmClusterSecurityGroup1
  # 클러스터에서의 보안그룹 규칙 ID
  uuid: String
  # 클러스터 보안그룹 규칙의 설명
  description: String
  ether_type: OpenStackCmClusterSecurityGroupRuleEtherTypeEnum
  # 네트워크 CIDR
  network_cidr: String
  direction: OpenStackCmClusterSecurityGroupRuleDirectionEnum
  # 포트 범위 최대 값
  port_range_max: BigInt
  # 포트 범위 최소 값
  port_range_min: BigInt
  # 프로토콜  The IP protocol can be represented by a string, an integer, or null. Valid string or integer values are any or 0, ah or 51, dccp or 33, egp or 8, esp or 50, gre or 47, icmp or 1, icmpv6 or 58, igmp or 2, ipip or 4, ipv6-encap or 41, ipv6-frag or 44, ipv6-icmp or 58, ipv6-nonxt or 59, ipv6-opts or 60, ipv6-route or 43, ospf or 89, pgm or 113, rsvp or 46, sctp or 132, tcp or 6, udp or 17, udplite or 136, vrrp or 112. Additionally, any integer value between [0-255] is also valid. The string any (or integer 0) means all IP protocols. See the constants in neutron_lib.constants for the most up-to-date list of supported strings.
  protocol: String
}

input OpenStackCmClusterSecurityGroupRule1Input {
    # 클러스터 보안그룹 규칙의 ID
    id: BigInt
    remote_security_group: OpenStackCmClusterSecurityGroup1Input
    # 클러스터에서의 보안그룹 규칙 ID
    uuid: String
    # 클러스터 보안그룹 규칙의 설명
    description: String
    ether_type: OpenStackCmClusterSecurityGroupRuleEtherTypeEnum
    # 네트워크 CIDR
    network_cidr: String
    direction: OpenStackCmClusterSecurityGroupRuleDirectionEnum
    # 포트 범위 최대 값
    port_range_max: BigInt
    # 포트 범위 최소 값
    port_range_min: BigInt
    # 프로토콜  The IP protocol can be represented by a string, an integer, or null. Valid string or integer values are any or 0, ah or 51, dccp or 33, egp or 8, esp or 50, gre or 47, icmp or 1, icmpv6 or 58, igmp or 2, ipip or 4, ipv6-encap or 41, ipv6-frag or 44, ipv6-icmp or 58, ipv6-nonxt or 59, ipv6-opts or 60, ipv6-route or 43, ospf or 89, pgm or 113, rsvp or 46, sctp or 132, tcp or 6, udp or 17, udplite or 136, vrrp or 112. Additionally, any integer value between [0-255] is also valid. The string any (or integer 0) means all IP protocols. See the constants in neutron_lib.constants for the most up-to-date list of supported strings.
    protocol: String
}

#
# open_stack_cm_cluster_security_group_rule_direction_enum.graphql
#
# 방향
enum OpenStackCmClusterSecurityGroupRuleDirectionEnum {
  INGRESS
  EGRESS
}

#
# open_stack_cm_cluster_security_group_rule_ether_type_enum.graphql
#
# 이더넷 타입
enum OpenStackCmClusterSecurityGroupRuleEtherTypeEnum {
  FOUR
  SIX
}

#
# open_stack_cm_cluster_state_code_enum.graphql
#
# 클러스터 storage, compute, network 종합 상태
enum OpenStackCmClusterStateCodeEnum {
  CLUSTER_STATE_ACTIVE
  CLUSTER_STATE_INACTIVE
  CLUSTER_STATE_WARNING
  CLUSTER_STATE_LOADING
}

#
# open_stack_cm_cluster_storage.graphql
#
# 클러스터 볼륨타입
type OpenStackCmClusterStorage {
  # 클러스터 볼륨타입의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  # 클러스터에서의 볼륨타입 ID
  uuid: String
  # 클러스터 볼륨타입의 이름
  name: String
  # 클러스터 볼륨타입의 설명
  description: String
  type_code: OpenStackCmClusterStorageTypeCodeEnum
  # 클러스터 볼륨타입의 용량
  capacity_bytes: BigInt
  # 클러스터 볼륨타입의 사용량
  used_bytes: BigInt
  status: OpenStackCmClusterStorageStatusEnum
}

input OpenStackCmClusterStorageInput {
    # 클러스터 볼륨타입의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    # 클러스터에서의 볼륨타입 ID
    uuid: String
    # 클러스터 볼륨타입의 이름
    name: String
    # 클러스터 볼륨타입의 설명
    description: String
    type_code: OpenStackCmClusterStorageTypeCodeEnum
    # 클러스터 볼륨타입의 용량
    capacity_bytes: BigInt
    # 클러스터 볼륨타입의 사용량
    used_bytes: BigInt
    status: OpenStackCmClusterStorageStatusEnum
}

#
# open_stack_cm_cluster_storage_1.graphql
#
# 클러스터 볼륨타입
type OpenStackCmClusterStorage1 {
  # 클러스터 볼륨타입의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  # 클러스터에서의 볼륨타입 ID
  uuid: String
  # 클러스터 볼륨타입의 이름
  name: String
  # 클러스터 볼륨타입의 설명
  description: String
  type_code: OpenStackCmClusterStorageTypeCodeEnum
  # 클러스터 볼륨타입의 용량
  capacity_bytes: BigInt
  # 클러스터 볼륨타입의 사용량
  used_bytes: BigInt
  status: OpenStackCmClusterStorageStatusEnum
}

input OpenStackCmClusterStorage1Input {
    # 클러스터 볼륨타입의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    # 클러스터에서의 볼륨타입 ID
    uuid: String
    # 클러스터 볼륨타입의 이름
    name: String
    # 클러스터 볼륨타입의 설명
    description: String
    type_code: OpenStackCmClusterStorageTypeCodeEnum
    # 클러스터 볼륨타입의 용량
    capacity_bytes: BigInt
    # 클러스터 볼륨타입의 사용량
    used_bytes: BigInt
    status: OpenStackCmClusterStorageStatusEnum
}

#
# open_stack_cm_cluster_storage_status_enum.graphql
#
# 볼륨 상태
enum OpenStackCmClusterStorageStatusEnum {
  AVAILABLE
  UNAVAILABLE
  UNKNOWN
}

#
# open_stack_cm_cluster_storage_type_code_enum.graphql
#
# 클러스터 볼륨타입의 종류
enum OpenStackCmClusterStorageTypeCodeEnum {
  OPENSTACK_STORAGE_TYPE_LVM
  OPENSTACK_STORAGE_TYPE_NFS
  OPENSTACK_STORAGE_TYPE_CEPH
  OPENSTACK_STORAGE_TYPE_UNKNOWN
}

#
# open_stack_cm_cluster_subnet.graphql
#
# 클러스터 네트워크 서브넷
type OpenStackCmClusterSubnet {
  # 클러스터 네트워크 서브넷의 ID
  id: BigInt
  # 클러스터에서의 네트워크 서브넷 ID
  uuid: String
  # 클러스터 네트워크 서브넷의 이름
  name: String
  # 클러스터 네트워크 서브넷의 설명
  description: String
  # 클러스터 네트워크 서브넷의 네트워크 CIDR
  network_cidr: String
  # DHCP 활성화 여부
  dhcp_enabled: Boolean
  # DHCP 할당 범위 목록
  dhcp_pools: [OpenStackCmClusterSubnetDhcpPool]
  # 게이트웨이 활성화 여부
  gateway_enabled: Boolean
  # 게이트웨이 주소
  gateway_ip_address: String
  ipv6_address_mode_code: OpenStackCmClusterSubnetIpv6AddressModeCodeEnum
  ipv6_ra_mode_code: OpenStackCmClusterSubnetIpv6RaModeCodeEnum
  # 클러스터 네트워크 서브넷의 Nameserver 목록
  nameservers: [OpenStackCmClusterSubnetNameserver]
}

input OpenStackCmClusterSubnetInput {
    # 클러스터 네트워크 서브넷의 ID
    id: BigInt
    # 클러스터에서의 네트워크 서브넷 ID
    uuid: String
    # 클러스터 네트워크 서브넷의 이름
    name: String
    # 클러스터 네트워크 서브넷의 설명
    description: String
    # 클러스터 네트워크 서브넷의 네트워크 CIDR
    network_cidr: String
    # DHCP 활성화 여부
    dhcp_enabled: Boolean
    # DHCP 할당 범위 목록
    dhcp_pools: [OpenStackCmClusterSubnetDhcpPoolInput]
    # 게이트웨이 활성화 여부
    gateway_enabled: Boolean
    # 게이트웨이 주소
    gateway_ip_address: String
    ipv6_address_mode_code: OpenStackCmClusterSubnetIpv6AddressModeCodeEnum
    ipv6_ra_mode_code: OpenStackCmClusterSubnetIpv6RaModeCodeEnum
    # 클러스터 네트워크 서브넷의 Nameserver 목록
    nameservers: [OpenStackCmClusterSubnetNameserverInput]
}

#
# open_stack_cm_cluster_subnet_1.graphql
#
# 클러스터 네트워크 서브넷
type OpenStackCmClusterSubnet1 {
  # 클러스터 네트워크 서브넷의 ID
  id: BigInt
  # 클러스터에서의 네트워크 서브넷 ID
  uuid: String
  # 클러스터 네트워크 서브넷의 이름
  name: String
  # 클러스터 네트워크 서브넷의 설명
  description: String
  # 클러스터 네트워크 서브넷의 네트워크 CIDR
  network_cidr: String
  # DHCP 활성화 여부
  dhcp_enabled: Boolean
  # DHCP 할당 범위 목록
  dhcp_pools: [OpenStackCmClusterSubnetDhcpPool]
  # 게이트웨이 활성화 여부
  gateway_enabled: Boolean
  # 게이트웨이 주소
  gateway_ip_address: String
  ipv6_address_mode_code: OpenStackCmClusterSubnetIpv6AddressModeCodeEnum
  ipv6_ra_mode_code: OpenStackCmClusterSubnetIpv6RaModeCodeEnum
  # 클러스터 네트워크 서브넷의 Nameserver 목록
  nameservers: [OpenStackCmClusterSubnetNameserver]
}

input OpenStackCmClusterSubnet1Input {
    # 클러스터 네트워크 서브넷의 ID
    id: BigInt
    # 클러스터에서의 네트워크 서브넷 ID
    uuid: String
    # 클러스터 네트워크 서브넷의 이름
    name: String
    # 클러스터 네트워크 서브넷의 설명
    description: String
    # 클러스터 네트워크 서브넷의 네트워크 CIDR
    network_cidr: String
    # DHCP 활성화 여부
    dhcp_enabled: Boolean
    # DHCP 할당 범위 목록
    dhcp_pools: [OpenStackCmClusterSubnetDhcpPoolInput]
    # 게이트웨이 활성화 여부
    gateway_enabled: Boolean
    # 게이트웨이 주소
    gateway_ip_address: String
    ipv6_address_mode_code: OpenStackCmClusterSubnetIpv6AddressModeCodeEnum
    ipv6_ra_mode_code: OpenStackCmClusterSubnetIpv6RaModeCodeEnum
    # 클러스터 네트워크 서브넷의 Nameserver 목록
    nameservers: [OpenStackCmClusterSubnetNameserverInput]
}

#
# open_stack_cm_cluster_subnet_dhcp_pool.graphql
#
# 클러스터 네트워크 서브넷의 DHCP Pool
type OpenStackCmClusterSubnetDhcpPool {
  # 클러스터 네트워크 서브넷 DHCP Pool 의 ID
  id: BigInt
  # 할당 범위 시작 주소
  start_ip_address: String
  # 할당 범위 종료 주소
  end_ip_address: String
}

input OpenStackCmClusterSubnetDhcpPoolInput {
    # 클러스터 네트워크 서브넷 DHCP Pool 의 ID
    id: BigInt
    # 할당 범위 시작 주소
    start_ip_address: String
    # 할당 범위 종료 주소
    end_ip_address: String
}

#
# open_stack_cm_cluster_subnet_ipv6_address_mode_code_enum.graphql
#
# ipv6 의 ip 주소 할당 방법
enum OpenStackCmClusterSubnetIpv6AddressModeCodeEnum {
  SLAAC
  DHCPV6_STATEFUL
  DHCPV6_STATELESS
}

#
# open_stack_cm_cluster_subnet_ipv6_ra_mode_code_enum.graphql
#
# ipv6 의 router advertisement 방법
enum OpenStackCmClusterSubnetIpv6RaModeCodeEnum {
  SLAAC
  DHCPV6_STATEFUL
  DHCPV6_STATELESS
}

#
# open_stack_cm_cluster_subnet_nameserver.graphql
#
# 클러스터 네트워크 서브넷의 Nameserver
type OpenStackCmClusterSubnetNameserver {
  # 클러스터 네트워크 서브넷 Nameserver 의 ID
  id: BigInt
  # 네임서버 주소
  nameserver: String
}

input OpenStackCmClusterSubnetNameserverInput {
    # 클러스터 네트워크 서브넷 Nameserver 의 ID
    id: BigInt
    # 네임서버 주소
    nameserver: String
}

#
# open_stack_cm_cluster_tenant.graphql
#
# 클러스터 테넌트
type OpenStackCmClusterTenant {
  # 클러스터 테넌트의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  # 클러스터에서의 테넌트 ID
  uuid: String
  # 클러스터 테넌트의 이름
  name: String
  # 클러스터 테넌트의 설명
  description: String
  # 클러스터 테넌트 활성화 여부
  enabled: Boolean
  # 클러스터 테넌트 Quota 목록
  quotas: [OpenStackCmClusterTenantQuota]
}

input OpenStackCmClusterTenantInput {
    # 클러스터 테넌트의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    # 클러스터에서의 테넌트 ID
    uuid: String
    # 클러스터 테넌트의 이름
    name: String
    # 클러스터 테넌트의 설명
    description: String
    # 클러스터 테넌트 활성화 여부
    enabled: Boolean
    # 클러스터 테넌트 Quota 목록
    quotas: [OpenStackCmClusterTenantQuotaInput]
}

#
# open_stack_cm_cluster_tenant_1.graphql
#
# 클러스터 테넌트
type OpenStackCmClusterTenant1 {
  # 클러스터 테넌트의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  # 클러스터에서의 테넌트 ID
  uuid: String
  # 클러스터 테넌트의 이름
  name: String
  # 클러스터 테넌트의 설명
  description: String
  # 클러스터 테넌트 활성화 여부
  enabled: Boolean
  # 클러스터 테넌트 Quota 목록
  quotas: [OpenStackCmClusterTenantQuota]
}

input OpenStackCmClusterTenant1Input {
    # 클러스터 테넌트의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    # 클러스터에서의 테넌트 ID
    uuid: String
    # 클러스터 테넌트의 이름
    name: String
    # 클러스터 테넌트의 설명
    description: String
    # 클러스터 테넌트 활성화 여부
    enabled: Boolean
    # 클러스터 테넌트 Quota 목록
    quotas: [OpenStackCmClusterTenantQuotaInput]
}

#
# open_stack_cm_cluster_tenant_quota.graphql
#
# 클러스터 테넌트 Quota
type OpenStackCmClusterTenantQuota {
  # Quota Key
  key: String
  # Quota Value
  value: BigInt
}

input OpenStackCmClusterTenantQuotaInput {
    # Quota Key
    key: String
    # Quota Value
    value: BigInt
}

#
# open_stack_cm_cluster_type_code_enum.graphql
#
# 클러스터의 종류
enum OpenStackCmClusterTypeCodeEnum {
  CLUSTER_TYPE_OPENSTACK
  CLUSTER_TYPE_OPENSHIFT
  CLUSTER_TYPE_KUBERNETES
  CLUSTER_TYPE_VMWARE
}

#
# open_stack_cm_cluster_volume.graphql
#
# 클러스터 볼륨
type OpenStackCmClusterVolume {
  # 클러스터 볼륨의 ID
  id: BigInt
  cluster: OpenStackCmCluster
  tenant: OpenStackCmClusterTenant
  storage: OpenStackCmClusterStorage
  # 클러스터 볼륨 스냅샷 목록
  snapshots: [OpenStackCmClusterVolumeSnapshot]
  # 클러스터에서의 볼륨 ID
  uuid: String
  # 클러스터 볼륨의 이름
  name: String
  # 클러스터 볼륨의 설명
  description: String
  # 클러스터 볼륨의 용량
  size_bytes: BigInt
  # 공유 가능 여부
  multiattach: Boolean
  # 부팅 가능 여부
  bootable: Boolean
  # 읽기 전용 볼륨 여부
  readonly: Boolean
  status: OpenStackCmClusterVolumeStatusEnum
}

input OpenStackCmClusterVolumeInput {
    # 클러스터 볼륨의 ID
    id: BigInt
    cluster: OpenStackCmClusterInput
    tenant: OpenStackCmClusterTenantInput
    storage: OpenStackCmClusterStorageInput
    # 클러스터 볼륨 스냅샷 목록
    snapshots: [OpenStackCmClusterVolumeSnapshotInput]
    # 클러스터에서의 볼륨 ID
    uuid: String
    # 클러스터 볼륨의 이름
    name: String
    # 클러스터 볼륨의 설명
    description: String
    # 클러스터 볼륨의 용량
    size_bytes: BigInt
    # 공유 가능 여부
    multiattach: Boolean
    # 부팅 가능 여부
    bootable: Boolean
    # 읽기 전용 볼륨 여부
    readonly: Boolean
    status: OpenStackCmClusterVolumeStatusEnum
}

#
# open_stack_cm_cluster_volume_1.graphql
#
# 클러스터 볼륨
type OpenStackCmClusterVolume1 {
  # 클러스터 볼륨의 ID
  id: BigInt
  cluster: OpenStackCmCluster1
  tenant: OpenStackCmClusterTenant1
  storage: OpenStackCmClusterStorage1
  # 클러스터 볼륨 스냅샷 목록
  snapshots: [OpenStackCmClusterVolumeSnapshot1]
  # 클러스터에서의 볼륨 ID
  uuid: String
  # 클러스터 볼륨의 이름
  name: String
  # 클러스터 볼륨의 설명
  description: String
  # 클러스터 볼륨의 용량
  size_bytes: BigInt
  # 공유 가능 여부
  multiattach: Boolean
  # 부팅 가능 여부
  bootable: Boolean
  # 읽기 전용 볼륨 여부
  readonly: Boolean
  status: OpenStackCmClusterVolumeStatusEnum
}

input OpenStackCmClusterVolume1Input {
    # 클러스터 볼륨의 ID
    id: BigInt
    cluster: OpenStackCmCluster1Input
    tenant: OpenStackCmClusterTenant1Input
    storage: OpenStackCmClusterStorage1Input
    # 클러스터 볼륨 스냅샷 목록
    snapshots: [OpenStackCmClusterVolumeSnapshot1Input]
    # 클러스터에서의 볼륨 ID
    uuid: String
    # 클러스터 볼륨의 이름
    name: String
    # 클러스터 볼륨의 설명
    description: String
    # 클러스터 볼륨의 용량
    size_bytes: BigInt
    # 공유 가능 여부
    multiattach: Boolean
    # 부팅 가능 여부
    bootable: Boolean
    # 읽기 전용 볼륨 여부
    readonly: Boolean
    status: OpenStackCmClusterVolumeStatusEnum
}

#
# open_stack_cm_cluster_volume_snapshot.graphql
#
# 클러스터 볼륨 스냅샷
type OpenStackCmClusterVolumeSnapshot {
  # 클러스터 볼륨 스냅샷의 ID
  id: BigInt
  # 클러스터에서의 볼륨 스냅샷 ID
  uuid: String
  # 클러스터에서의 볼륨 그룹 스냅샷 ID
  cluster_volume_group_snapshot_uuid: String
  # 클러스터 볼륨 스냅샷의 이름
  name: String
  # 클러스터 볼륨 스냅샷의 설명
  description: String
  # 클러스터 볼륨 스냅샷의 용량
  size_bytes: BigInt
  status: OpenStackCmClusterVolumeSnapshotStatusEnum
  # 클러스터 볼륨 스냅샷 생성 일시 (Timestamp)
  created_at: BigInt
}

input OpenStackCmClusterVolumeSnapshotInput {
    # 클러스터 볼륨 스냅샷의 ID
    id: BigInt
    # 클러스터에서의 볼륨 스냅샷 ID
    uuid: String
    # 클러스터에서의 볼륨 그룹 스냅샷 ID
    cluster_volume_group_snapshot_uuid: String
    # 클러스터 볼륨 스냅샷의 이름
    name: String
    # 클러스터 볼륨 스냅샷의 설명
    description: String
    # 클러스터 볼륨 스냅샷의 용량
    size_bytes: BigInt
    status: OpenStackCmClusterVolumeSnapshotStatusEnum
    # 클러스터 볼륨 스냅샷 생성 일시 (Timestamp)
    created_at: BigInt
}

#
# open_stack_cm_cluster_volume_snapshot_1.graphql
#
# 클러스터 볼륨 스냅샷
type OpenStackCmClusterVolumeSnapshot1 {
  # 클러스터 볼륨 스냅샷의 ID
  id: BigInt
  # 클러스터에서의 볼륨 스냅샷 ID
  uuid: String
  # 클러스터에서의 볼륨 그룹 스냅샷 ID
  cluster_volume_group_snapshot_uuid: String
  # 클러스터 볼륨 스냅샷의 이름
  name: String
  # 클러스터 볼륨 스냅샷의 설명
  description: String
  # 클러스터 볼륨 스냅샷의 용량
  size_bytes: BigInt
  status: OpenStackCmClusterVolumeSnapshotStatusEnum
  # 클러스터 볼륨 스냅샷 생성 일시 (Timestamp)
  created_at: BigInt
}

input OpenStackCmClusterVolumeSnapshot1Input {
    # 클러스터 볼륨 스냅샷의 ID
    id: BigInt
    # 클러스터에서의 볼륨 스냅샷 ID
    uuid: String
    # 클러스터에서의 볼륨 그룹 스냅샷 ID
    cluster_volume_group_snapshot_uuid: String
    # 클러스터 볼륨 스냅샷의 이름
    name: String
    # 클러스터 볼륨 스냅샷의 설명
    description: String
    # 클러스터 볼륨 스냅샷의 용량
    size_bytes: BigInt
    status: OpenStackCmClusterVolumeSnapshotStatusEnum
    # 클러스터 볼륨 스냅샷 생성 일시 (Timestamp)
    created_at: BigInt
}

#
# open_stack_cm_cluster_volume_snapshot_status_enum.graphql
#
# 볼륨 스냅샷 상태
enum OpenStackCmClusterVolumeSnapshotStatusEnum {
  AVAILABLE
  ERROR
  CREATING
  DELETING
  ERROR_DELETING
}

#
# open_stack_cm_cluster_volume_status_enum.graphql
#
# 볼륨 상태
enum OpenStackCmClusterVolumeStatusEnum {
  AVAILABLE
  ERROR
  CREATING
  DELETING
  IN_USE
  ATTACHING
  DETACHING
  ERROR_DELETING
  MAINTENANCE
}

#
# open_stack_dr_abnormal_state_reasons.graphql
#
type OpenStackDrAbnormalStateReasons {
  prepare: [OpenStackDrMessage]
  warning: [OpenStackDrMessage]
  critical: [OpenStackDrMessage]
  emergency: [OpenStackDrMessage]
  mirroring: [OpenStackDrMessage]
}

input OpenStackDrAbnormalStateReasonsInput {
    prepare: [OpenStackDrMessageInput]
    warning: [OpenStackDrMessageInput]
    critical: [OpenStackDrMessageInput]
    emergency: [OpenStackDrMessageInput]
    mirroring: [OpenStackDrMessageInput]
}

#
# open_stack_dr_abnormal_state_reasons_response.graphql
#
type OpenStackDrAbnormalStateReasonsResponse {
  reasons: [OpenStackDrAbnormalStateReasons]
  message: OpenStackDrMessage
}

input OpenStackDrAbnormalStateReasonsResponseInput {
    reasons: [OpenStackDrAbnormalStateReasonsInput]
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_add_instance_template_request.graphql
#
type OpenStackDrAddInstanceTemplateRequest {
  template: OpenStackDrInstanceTemplate
}

input OpenStackDrAddInstanceTemplateRequestInput {
    template: OpenStackDrInstanceTemplateInput
}

#
# open_stack_dr_add_recovery_job_request.graphql
#
type OpenStackDrAddRecoveryJobRequest {
  job: OpenStackDrRecoveryJob
  # 모의훈련 혹은 재해복구가 불가능한 인스턴스가 존재하더라도 무시하고 생성
  force: Boolean
}

input OpenStackDrAddRecoveryJobRequestInput {
    job: OpenStackDrRecoveryJobInput
    # 모의훈련 혹은 재해복구가 불가능한 인스턴스가 존재하더라도 무시하고 생성
    force: Boolean
}

#
# open_stack_dr_availability_zone_recovery_plan.graphql
#
# 가용구역 복구계획
type OpenStackDrAvailabilityZoneRecoveryPlan {
  recovery_type_code: OpenStackDrAvailabilityZoneRecoveryPlanRecoveryTypeCodeEnum
  protection_cluster_availability_zone: OpenStackCmClusterAvailabilityZone
  recovery_cluster_availability_zone: OpenStackCmClusterAvailabilityZone
  # 가용구역 변경 필요 여부
  recovery_cluster_availability_zone_update_flag: Boolean
  # 가용구역 변경 필요 사유
  recovery_cluster_availability_zone_update_reason: OpenStackDrMessage
}

input OpenStackDrAvailabilityZoneRecoveryPlanInput {
    recovery_type_code: OpenStackDrAvailabilityZoneRecoveryPlanRecoveryTypeCodeEnum
    protection_cluster_availability_zone: OpenStackCmClusterAvailabilityZoneInput
    recovery_cluster_availability_zone: OpenStackCmClusterAvailabilityZoneInput
    # 가용구역 변경 필요 여부
    recovery_cluster_availability_zone_update_flag: Boolean
    # 가용구역 변경 필요 사유
    recovery_cluster_availability_zone_update_reason: OpenStackDrMessageInput
}

#
# open_stack_dr_availability_zone_recovery_plan_recovery_type_code_enum.graphql
#
# 복구 유형 (매핑만 지원)
enum OpenStackDrAvailabilityZoneRecoveryPlanRecoveryTypeCodeEnum {
  DR_RECOVERY_PLAN_AVAILABILITY_ZONE_RECOVERY_TYPE_MAPPING
}

#
# open_stack_dr_cluster_relationship.graphql
#
# 클러스터 관계
type OpenStackDrClusterRelationship {
  protection_cluster: OpenStackCmCluster
  recovery_cluster: OpenStackCmCluster
  state_code: OpenStackDrClusterRelationshipStateCodeEnum
  plans: [OpenStackDrClusterRelationshipPlan]
}

input OpenStackDrClusterRelationshipInput {
    protection_cluster: OpenStackCmClusterInput
    recovery_cluster: OpenStackCmClusterInput
    state_code: OpenStackDrClusterRelationshipStateCodeEnum
    plans: [OpenStackDrClusterRelationshipPlanInput]
}

#
# open_stack_dr_cluster_relationship_plan.graphql
#
type OpenStackDrClusterRelationshipPlan {
  group: OpenStackDrProtectionGroup
  # 재해복구계획 ID
  id: BigInt
  protection_cluster: OpenStackCmCluster
  recovery_cluster: OpenStackCmCluster
  # 재해복구계획 이름
  name: String
  # 스냅샷 유지갯수
  snapshot_retention_count: BigInt
  # 비고
  remarks: String
  direction_code: OpenStackDrRecoveryPlanDirectionCodeEnum
  state_code: OpenStackDrRecoveryPlanStateCodeEnum
  mirror_state_code: OpenStackDrRecoveryPlanMirrorStateCodeEnum
  # 재해복구계획 비정상 상태 사유
  abnormal_state_reasons: OpenStackDrAbnormalStateReasons
  # 재해복구계획 생성일시 (timestamp)
  created_at: BigInt
  # 재해복구계획 최종 수정일시 (timestamp)
  updated_at: BigInt
  detail: OpenStackDrRecoveryPlanDetail
  # 수정가능 여부
  updatable: Boolean
}

input OpenStackDrClusterRelationshipPlanInput {
    group: OpenStackDrProtectionGroupInput
    # 재해복구계획 ID
    id: BigInt
    protection_cluster: OpenStackCmClusterInput
    recovery_cluster: OpenStackCmClusterInput
    # 재해복구계획 이름
    name: String
    # 스냅샷 유지갯수
    snapshot_retention_count: BigInt
    # 비고
    remarks: String
    direction_code: OpenStackDrRecoveryPlanDirectionCodeEnum
    state_code: OpenStackDrRecoveryPlanStateCodeEnum
    mirror_state_code: OpenStackDrRecoveryPlanMirrorStateCodeEnum
    # 재해복구계획 비정상 상태 사유
    abnormal_state_reasons: OpenStackDrAbnormalStateReasonsInput
    # 재해복구계획 생성일시 (timestamp)
    created_at: BigInt
    # 재해복구계획 최종 수정일시 (timestamp)
    updated_at: BigInt
    detail: OpenStackDrRecoveryPlanDetailInput
    # 수정가능 여부
    updatable: Boolean
}

#
# open_stack_dr_cluster_relationship_state_code_enum.graphql
#
# 클러스터 관계 상태
enum OpenStackDrClusterRelationshipStateCodeEnum {
  DR_CLUSTER_RELATIONSHIP_STATE_NORMAL
  DR_CLUSTER_RELATIONSHIP_STATE_WARNING
  DR_CLUSTER_RELATIONSHIP_STATE_CRITICAL
  DR_CLUSTER_RELATIONSHIP_STATE_EMERGENCY
}

#
# open_stack_dr_cluster_relationships_response.graphql
#
type OpenStackDrClusterRelationshipsResponse {
  cluster_relationships: [OpenStackDrClusterRelationship]
  pagination: OpenStackDrPagination
  message: OpenStackDrMessage
}

input OpenStackDrClusterRelationshipsResponseInput {
    cluster_relationships: [OpenStackDrClusterRelationshipInput]
    pagination: OpenStackDrPaginationInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_extend_recovery_job_pausing_time_request.graphql
#
type OpenStackDrExtendRecoveryJobPausingTimeRequest {
  # 연장할 시간
  extend_time: BigInt
}

input OpenStackDrExtendRecoveryJobPausingTimeRequestInput {
    # 연장할 시간
    extend_time: BigInt
}

#
# open_stack_dr_extend_recovery_job_rollback_waiting_time_request.graphql
#
type OpenStackDrExtendRecoveryJobRollbackWaitingTimeRequest {
  # 연장할 시간
  extend_time: BigInt
}

input OpenStackDrExtendRecoveryJobRollbackWaitingTimeRequestInput {
    # 연장할 시간
    extend_time: BigInt
}

#
# open_stack_dr_external_network_recovery_plan.graphql
#
# 외부 네트워크 복구계획
type OpenStackDrExternalNetworkRecoveryPlan {
  recovery_type_code: OpenStackDrExternalNetworkRecoveryPlanRecoveryTypeCodeEnum
  protection_cluster_external_network: OpenStackCmClusterNetwork
  recovery_cluster_external_network: OpenStackCmClusterNetwork
  # 외부 네트워크 변경 필요 여부
  recovery_cluster_external_network_update_flag: Boolean
  # 외부 네트워크 변경 필요 사유
  recovery_cluster_external_network_update_reason: OpenStackDrMessage
}

input OpenStackDrExternalNetworkRecoveryPlanInput {
    recovery_type_code: OpenStackDrExternalNetworkRecoveryPlanRecoveryTypeCodeEnum
    protection_cluster_external_network: OpenStackCmClusterNetworkInput
    recovery_cluster_external_network: OpenStackCmClusterNetworkInput
    # 외부 네트워크 변경 필요 여부
    recovery_cluster_external_network_update_flag: Boolean
    # 외부 네트워크 변경 필요 사유
    recovery_cluster_external_network_update_reason: OpenStackDrMessageInput
}

#
# open_stack_dr_external_network_recovery_plan_recovery_type_code_enum.graphql
#
# 복구 유형 (미러링만 지원)
enum OpenStackDrExternalNetworkRecoveryPlanRecoveryTypeCodeEnum {
  DR_RECOVERY_PLAN_NETWORK_RECOVERY_TYPE_MAPPING
}

#
# open_stack_dr_floating_ip_recovery_plan.graphql
#
# FloatingIP 복구계획
type OpenStackDrFloatingIpRecoveryPlan {
  protection_cluster_floating_ip: OpenStackCmClusterFloatingIp
  # 복구 불가 여부
  unavailable_flag: Boolean
  # 복구 불가 사유
  unavailable_reason: OpenStackDrMessage
}

input OpenStackDrFloatingIpRecoveryPlanInput {
    protection_cluster_floating_ip: OpenStackCmClusterFloatingIpInput
    # 복구 불가 여부
    unavailable_flag: Boolean
    # 복구 불가 사유
    unavailable_reason: OpenStackDrMessageInput
}

#
# open_stack_dr_history_response.graphql
#
type OpenStackDrHistoryResponse {
  history: OpenStackDrProtectionGroupHistory
  message: OpenStackDrMessage
}

input OpenStackDrHistoryResponseInput {
    history: OpenStackDrProtectionGroupHistoryInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_hypervisor_resources.graphql
#
# 하이퍼바이저 리소스 정보
type OpenStackDrHypervisorResources {
  # 하이퍼바이저 리소스 id
  id: BigInt
  # 하이퍼바이저 리소스 이름
  name: String
  # CPU 전체 리소스 사이즈
  vpu_total_cnt: BigInt
  # CPU 요구 리소스 사이즈
  vcpu_expected_usage: BigInt
  # 메모리 전체 리소스 사이즈
  mem_total_bytes: BigInt
  # 메모리 사용중 리소스 사이즈
  mem_used_bytes: BigInt
  # 메모리 요구 리소스 사이즈
  mem_expected_usage: BigInt
  # 디스크 전체 리소스 사이즈
  disk_total_bytes: BigInt
  # 디스크 요구 리소스 사이즈
  disk_expected_usage: BigInt
}

input OpenStackDrHypervisorResourcesInput {
    # 하이퍼바이저 리소스 id
    id: BigInt
    # 하이퍼바이저 리소스 이름
    name: String
    # CPU 전체 리소스 사이즈
    vpu_total_cnt: BigInt
    # CPU 요구 리소스 사이즈
    vcpu_expected_usage: BigInt
    # 메모리 전체 리소스 사이즈
    mem_total_bytes: BigInt
    # 메모리 사용중 리소스 사이즈
    mem_used_bytes: BigInt
    # 메모리 요구 리소스 사이즈
    mem_expected_usage: BigInt
    # 디스크 전체 리소스 사이즈
    disk_total_bytes: BigInt
    # 디스크 요구 리소스 사이즈
    disk_expected_usage: BigInt
}

#
# open_stack_dr_hypervisor_resources_response.graphql
#
type OpenStackDrHypervisorResourcesResponse {
  hypervisor_resources: [OpenStackDrHypervisorResources]
  usable: OpenStackDrUsable
  message: OpenStackDrMessage
}

input OpenStackDrHypervisorResourcesResponseInput {
    hypervisor_resources: [OpenStackDrHypervisorResourcesInput]
    usable: OpenStackDrUsableInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_instance_migration_plan.graphql
#
# 인스턴스 마이그레이션 계획
type OpenStackDrInstanceMigrationPlan {
  protection_cluster_instance: OpenStackCmClusterInstance
  instance_proxy_link: OpenStackCmClusterInstanceProxyLink
  # 테넌트 UUID
  recovery_cluster_tenant_uuid: String
  # 가용구역 이름
  recovery_cluster_availability_zone_name: String
  # 가하이퍼바이저 호스트 이름
  recovery_cluster_hypervisor_hostname: String
  # 하이퍼바이저 IP 주소
  recovery_cluster_hypervisor_ip_address: String
  # 인스턴스 스팩 UUID
  recovery_cluster_instance_spec_uuid: String
  # 스토리지 ID
  recovery_cluster_storage_id: BigInt
  # 스토리지 타입
  recovery_cluster_storage_type_code: String
  # 인스턴스 이름
  recovery_cluster_instance_name: String
  # 키페어 이름
  recovery_cluster_keypair_name: String
  # 인스턴스 사용자 script 의 사용자 data
  recovery_cluster_instance_user_script_user_data: String
}

input OpenStackDrInstanceMigrationPlanInput {
    protection_cluster_instance: OpenStackCmClusterInstanceInput
    instance_proxy_link: OpenStackCmClusterInstanceProxyLinkInput
    # 테넌트 UUID
    recovery_cluster_tenant_uuid: String
    # 가용구역 이름
    recovery_cluster_availability_zone_name: String
    # 가하이퍼바이저 호스트 이름
    recovery_cluster_hypervisor_hostname: String
    # 하이퍼바이저 IP 주소
    recovery_cluster_hypervisor_ip_address: String
    # 인스턴스 스팩 UUID
    recovery_cluster_instance_spec_uuid: String
    # 스토리지 ID
    recovery_cluster_storage_id: BigInt
    # 스토리지 타입
    recovery_cluster_storage_type_code: String
    # 인스턴스 이름
    recovery_cluster_instance_name: String
    # 키페어 이름
    recovery_cluster_keypair_name: String
    # 인스턴스 사용자 script 의 사용자 data
    recovery_cluster_instance_user_script_user_data: String
}

#
# open_stack_dr_instance_network_migration_plan.graphql
#
# 인스턴스 네트워크 마이그레이션 계획
type OpenStackDrInstanceNetworkMigrationPlan {
  protection_cluster_instance: OpenStackCmClusterInstance
  # 네트워크 UUID
  recovery_cluster_network_uuid: String
  # 서브넷 UUID
  recovery_cluster_subnet_uuid: String
  # floating ip UUID
  recovery_cluster_floating_ip_uuid: String
  # IP 주소
  recovery_ip_address: String
  # DHCP 여부
  recovery_dhcp_flag: Boolean
}

input OpenStackDrInstanceNetworkMigrationPlanInput {
    protection_cluster_instance: OpenStackCmClusterInstanceInput
    # 네트워크 UUID
    recovery_cluster_network_uuid: String
    # 서브넷 UUID
    recovery_cluster_subnet_uuid: String
    # floating ip UUID
    recovery_cluster_floating_ip_uuid: String
    # IP 주소
    recovery_ip_address: String
    # DHCP 여부
    recovery_dhcp_flag: Boolean
}

#
# open_stack_dr_instance_recovery_plan.graphql
#
# 인스턴스 복구계획
type OpenStackDrInstanceRecoveryPlan {
  recovery_type_code: OpenStackDrInstanceRecoveryPlanRecoveryTypeCodeEnum
  protection_cluster_instance: OpenStackCmClusterInstance
  recovery_cluster_availability_zone: OpenStackCmClusterAvailabilityZone
  # 가용구역 변경 필요 여부
  recovery_cluster_availability_zone_update_flag: Boolean
  # 가용구역 변경 필요 사유
  recovery_cluster_availability_zone_update_reason: OpenStackDrMessage
  recovery_cluster_hypervisor: OpenStackCmClusterHypervisor
  # 재해복구시 기동 여부
  auto_start_flag: Boolean
  # 재해복구 기동 후 정상동작 확인 여부
  diagnosis_flag: Boolean
  diagnosis_method_code: OpenStackDrInstanceRecoveryPlanDiagnosisMethodCodeEnum
  # 재해복구 기동 후 정상동작 확인 방법 데이터
  diagnosis_method_data: String
  # 재해복구 기동 후 정상동작 확인 대기 시간 (초)
  diagnosis_timeout: BigInt
  # 의존하는 인스턴스 목록
  dependencies: [OpenStackCmClusterInstance]
}

input OpenStackDrInstanceRecoveryPlanInput {
    recovery_type_code: OpenStackDrInstanceRecoveryPlanRecoveryTypeCodeEnum
    protection_cluster_instance: OpenStackCmClusterInstanceInput
    recovery_cluster_availability_zone: OpenStackCmClusterAvailabilityZoneInput
    # 가용구역 변경 필요 여부
    recovery_cluster_availability_zone_update_flag: Boolean
    # 가용구역 변경 필요 사유
    recovery_cluster_availability_zone_update_reason: OpenStackDrMessageInput
    recovery_cluster_hypervisor: OpenStackCmClusterHypervisorInput
    # 재해복구시 기동 여부
    auto_start_flag: Boolean
    # 재해복구 기동 후 정상동작 확인 여부
    diagnosis_flag: Boolean
    diagnosis_method_code: OpenStackDrInstanceRecoveryPlanDiagnosisMethodCodeEnum
    # 재해복구 기동 후 정상동작 확인 방법 데이터
    diagnosis_method_data: String
    # 재해복구 기동 후 정상동작 확인 대기 시간 (초)
    diagnosis_timeout: BigInt
    # 의존하는 인스턴스 목록
    dependencies: [OpenStackCmClusterInstanceInput]
}

#
# open_stack_dr_instance_recovery_plan_diagnosis_method_code_enum.graphql
#
# 재해복구 기동 후 정상동작 확인 방법
enum OpenStackDrInstanceRecoveryPlanDiagnosisMethodCodeEnum {
  DR_RECOVERY_PLAN_INSTANCE_DIAGNOSIS_METHOD_SHELL_SCRIPT
  DR_RECOVERY_PLAN_INSTANCE_DIAGNOSIS_METHOD_PORT_SCAN
  DR_RECOVERY_PLAN_INSTANCE_DIAGNOSIS_METHOD_HTTP_GET
}

#
# open_stack_dr_instance_recovery_plan_recovery_type_code_enum.graphql
#
# 복구 유형 (미러링만 지원)
enum OpenStackDrInstanceRecoveryPlanRecoveryTypeCodeEnum {
  DR_RECOVERY_PLAN_INSTANCE_RECOVERY_TYPE_MIRRORING
}

#
# open_stack_dr_instance_recovery_result.graphql
#
type OpenStackDrInstanceRecoveryResult {
  protection_cluster_instance: OpenStackCmClusterInstance
  recovery_cluster_instance: OpenStackCmClusterInstance
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 재해복구시 기동 여부
  auto_start_flag: Boolean
  # 재해복구 기동 후 정상동작 확인 여부
  diagnosis_flag: Boolean
  diagnosis_method_code: OpenStackDrInstanceRecoveryResultDiagnosisMethodCodeEnum
  # 재해복구 기동 후 정상동작 확인 방법 데이터
  diagnosis_method_data: String
  # 재해복구 기동 후 정상동작 확인 대기 시간
  diagnosis_timeout: BigInt
  # 의존하는 인스턴스 목록
  dependencies: [OpenStackCmClusterInstance]
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  result_code: OpenStackDrInstanceRecoveryResultResultCodeEnum
  # 실패 사유
  failed_reason: OpenStackDrMessage
}

input OpenStackDrInstanceRecoveryResultInput {
    protection_cluster_instance: OpenStackCmClusterInstanceInput
    recovery_cluster_instance: OpenStackCmClusterInstanceInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 재해복구시 기동 여부
    auto_start_flag: Boolean
    # 재해복구 기동 후 정상동작 확인 여부
    diagnosis_flag: Boolean
    diagnosis_method_code: OpenStackDrInstanceRecoveryResultDiagnosisMethodCodeEnum
    # 재해복구 기동 후 정상동작 확인 방법 데이터
    diagnosis_method_data: String
    # 재해복구 기동 후 정상동작 확인 대기 시간
    diagnosis_timeout: BigInt
    # 의존하는 인스턴스 목록
    dependencies: [OpenStackCmClusterInstanceInput]
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    result_code: OpenStackDrInstanceRecoveryResultResultCodeEnum
    # 실패 사유
    failed_reason: OpenStackDrMessageInput
}

#
# open_stack_dr_instance_recovery_result_diagnosis_method_code_enum.graphql
#
# 재해복구 기동 후 정상동작 확인 방법
enum OpenStackDrInstanceRecoveryResultDiagnosisMethodCodeEnum {
  DR_RECOVERY_PLAN_INSTANCE_DIAGNOSIS_METHOD_SHELL_SCRIPT
  DR_RECOVERY_PLAN_INSTANCE_DIAGNOSIS_METHOD_PORT_SCAN
  DR_RECOVERY_PLAN_INSTANCE_DIAGNOSIS_METHOD_HTTP_GET
}

#
# open_stack_dr_instance_recovery_result_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrInstanceRecoveryResultResultCodeEnum {
  DR_RECOVERY_INSTANCE_RESULT_SUCCESS
  DR_RECOVERY_INSTANCE_RESULT_FAILED
  DR_RECOVERY_INSTANCE_RESULT_CANCELED
}

#
# open_stack_dr_instance_security_group_migration_plan.graphql
#
# 인스턴스 보안그룹 마이그레이션 계획
type OpenStackDrInstanceSecurityGroupMigrationPlan {
  protection_cluster_instance: OpenStackCmClusterInstance
  # 보안그룹 UUID
  recovery_cluster_security_group_uuid: String
  # 보안그룹 이름
  recovery_cluster_security_group_name: String
}

input OpenStackDrInstanceSecurityGroupMigrationPlanInput {
    protection_cluster_instance: OpenStackCmClusterInstanceInput
    # 보안그룹 UUID
    recovery_cluster_security_group_uuid: String
    # 보안그룹 이름
    recovery_cluster_security_group_name: String
}

#
# open_stack_dr_instance_template.graphql
#
# 인스턴스 템플릿
type OpenStackDrInstanceTemplate {
  # 인스턴스 템플릿 ID
  id: BigInt
  owner_group: CloudUserGroup
  # 보호그룹 이름
  name: String
  # 보호그룹 설명
  remarks: String
  # 보호그룹 생성일시 (timestamp)
  created_at: BigInt
  # 인스턴스 템플릿의 인스턴스 목록
  instances: [OpenStackDrInstanceTemplateInstance]
}

input OpenStackDrInstanceTemplateInput {
    # 인스턴스 템플릿 ID
    id: BigInt
    owner_group: CloudUserGroupInput
    # 보호그룹 이름
    name: String
    # 보호그룹 설명
    remarks: String
    # 보호그룹 생성일시 (timestamp)
    created_at: BigInt
    # 인스턴스 템플릿의 인스턴스 목록
    instances: [OpenStackDrInstanceTemplateInstanceInput]
}

#
# open_stack_dr_instance_template_instance.graphql
#
# 인스턴스 템플릿의 인스턴스
type OpenStackDrInstanceTemplateInstance {
  # 인스턴스 이름
  name: String
  # 재해복구시 기동 여부
  auto_start_flag: Boolean
  # 재해복구 기동 후 정상동작 확인 여부
  diagnosis_flag: Boolean
  diagnosis_method_code: OpenStackDrInstanceTemplateInstanceDiagnosisMethodCodeEnum
  # 재해복구 기동 후 정상동작 확인 방법 데이터
  diagnosis_method_data: String
  # 재해복구 기동 후 정상동작 확인 대기 시간 (초)
  diagnosis_timeout: BigInt
  # 의존하는 인스턴스 목록
  dependencies: [OpenStackDrInstanceTemplateInstanceDependency]
}

input OpenStackDrInstanceTemplateInstanceInput {
    # 인스턴스 이름
    name: String
    # 재해복구시 기동 여부
    auto_start_flag: Boolean
    # 재해복구 기동 후 정상동작 확인 여부
    diagnosis_flag: Boolean
    diagnosis_method_code: OpenStackDrInstanceTemplateInstanceDiagnosisMethodCodeEnum
    # 재해복구 기동 후 정상동작 확인 방법 데이터
    diagnosis_method_data: String
    # 재해복구 기동 후 정상동작 확인 대기 시간 (초)
    diagnosis_timeout: BigInt
    # 의존하는 인스턴스 목록
    dependencies: [OpenStackDrInstanceTemplateInstanceDependencyInput]
}

#
# open_stack_dr_instance_template_instance_dependency.graphql
#
# 의존하는 인스턴스
type OpenStackDrInstanceTemplateInstanceDependency {
  # 인스턴스 이름
  name: String
}

input OpenStackDrInstanceTemplateInstanceDependencyInput {
    # 인스턴스 이름
    name: String
}

#
# open_stack_dr_instance_template_instance_diagnosis_method_code_enum.graphql
#
# 재해복구 기동 후 정상동작 확인 방법
enum OpenStackDrInstanceTemplateInstanceDiagnosisMethodCodeEnum {
  DR_RECOVERY_PLAN_INSTANCE_DIAGNOSIS_METHOD_SHELL_SCRIPT
  DR_RECOVERY_PLAN_INSTANCE_DIAGNOSIS_METHOD_PORT_SCAN
  DR_RECOVERY_PLAN_INSTANCE_DIAGNOSIS_METHOD_HTTP_GET
}

#
# open_stack_dr_instance_template_response.graphql
#
type OpenStackDrInstanceTemplateResponse {
  template: OpenStackDrInstanceTemplate
  message: OpenStackDrMessage
}

input OpenStackDrInstanceTemplateResponseInput {
    template: OpenStackDrInstanceTemplateInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_instance_templates_response.graphql
#
type OpenStackDrInstanceTemplatesResponse {
  templates: [OpenStackDrInstanceTemplate]
  pagination: OpenStackDrPagination
  message: OpenStackDrMessage
}

input OpenStackDrInstanceTemplatesResponseInput {
    templates: [OpenStackDrInstanceTemplateInput]
    pagination: OpenStackDrPaginationInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_instance_volume_migration_plan.graphql
#
# 인스턴스 볼륨 마이그레이션 계획
type OpenStackDrInstanceVolumeMigrationPlan {
  protection_cluster_instance: OpenStackCmClusterInstance
  # 볼륨 UUID
  recovery_cluster_volume_uuid: String
  # 볼륨 bootable
  recovery_cluster_volume_bootable: Boolean
  # 볼륨 boot index
  recovery_cluster_volume_boot_index: BigInt
  # 볼륨 device 경로
  recovery_cluster_volume_device_path: String
  # 볼륨 UEFI 이미지
  recovery_cluster_volume_uefi_image: String
  # 스냅샷 볼륨 UUID
  recovery_cluster_snapshot_volume_uuid: String
}

input OpenStackDrInstanceVolumeMigrationPlanInput {
    protection_cluster_instance: OpenStackCmClusterInstanceInput
    # 볼륨 UUID
    recovery_cluster_volume_uuid: String
    # 볼륨 bootable
    recovery_cluster_volume_bootable: Boolean
    # 볼륨 boot index
    recovery_cluster_volume_boot_index: BigInt
    # 볼륨 device 경로
    recovery_cluster_volume_device_path: String
    # 볼륨 UEFI 이미지
    recovery_cluster_volume_uefi_image: String
    # 스냅샷 볼륨 UUID
    recovery_cluster_snapshot_volume_uuid: String
}

#
# open_stack_dr_instances_response.graphql
#
type OpenStackDrInstancesResponse {
  instances: [OpenStackCmClusterInstance]
  pagination: OpenStackDrPagination
  message: OpenStackDrMessage
}

input OpenStackDrInstancesResponseInput {
    instances: [OpenStackCmClusterInstanceInput]
    pagination: OpenStackDrPaginationInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_message.graphql
#
# 메시지
type OpenStackDrMessage {
  # 메시지 코드
  code: String
  # 메시지 상세 내용 데이터
  contents: String
}

input OpenStackDrMessageInput {
    # 메시지 코드
    code: String
    # 메시지 상세 내용 데이터
    contents: String
}

#
# open_stack_dr_message_response.graphql
#
type OpenStackDrMessageResponse {
  message: OpenStackDrMessage
}

input OpenStackDrMessageResponseInput {
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_migration.graphql
#
# 마이그레이션 계획
type OpenStackDrMigration {
  # 마이그레이션 계획 ID
  id: BigInt
  protection_cluster: OpenStackCmCluster
  recovery_cluster: OpenStackCmCluster
  # 마이그레이션 계획 이름
  name: String
  # 복제 동기화 주기
  auto_sync_interval: BigInt
  # 비고
  remarks: String
  # 마이그레이션 비정상 상태 사유
  abnormal_state_reasons: OpenStackDrAbnormalStateReasons
  # 마이그레이션 계획 생성일시 (timestamp)
  created_at: BigInt
  # 마이그레이션 계획 최종 수정일시 (timestamp)
  updated_at: BigInt
  # 마이그레이션 계획 상세
  details: [OpenStackDrMigrationPlanInstanceDetail]
  # 수정가능 여부
  updatable: Boolean
}

input OpenStackDrMigrationInput {
    # 마이그레이션 계획 ID
    id: BigInt
    protection_cluster: OpenStackCmClusterInput
    recovery_cluster: OpenStackCmClusterInput
    # 마이그레이션 계획 이름
    name: String
    # 복제 동기화 주기
    auto_sync_interval: BigInt
    # 비고
    remarks: String
    # 마이그레이션 비정상 상태 사유
    abnormal_state_reasons: OpenStackDrAbnormalStateReasonsInput
    # 마이그레이션 계획 생성일시 (timestamp)
    created_at: BigInt
    # 마이그레이션 계획 최종 수정일시 (timestamp)
    updated_at: BigInt
    # 마이그레이션 계획 상세
    details: [OpenStackDrMigrationPlanInstanceDetailInput]
    # 수정가능 여부
    updatable: Boolean
}

#
# open_stack_dr_migration_job_status_enum.graphql
#
# migration 작업 상태
enum OpenStackDrMigrationJobStatusEnum {
  START
  PREPARATION_RUN
  PREPARATION_STATUS_CHECK
  REPLICATION_STATUS_CHECK
  REPLICATION_LOCK
  REPLICATION_LOCK_STATUS_CHECK
  REPLICATION_UNLOCK
  REPLICATION_UNLOCK_STATUS_CHECK
  REPLICATION_DELETE
  VOLUME_SNAPSHOT_CREATE
  VOLUME_CREATE
  VOLUME_ATTACH
  VOLUME_DETACH
  CUSTOMIZATION_CREATE
  CUSTOMIZATION_STATUS_CHECK
  CUSTOMIZATION_DELETE
  VM_CREATE
  FAILED
  DONE
  NOT_FOUND
  UNKNOWN
}

#
# open_stack_dr_migration_job_status_response.graphql
#
type OpenStackDrMigrationJobStatusResponse {
  job_type: OpenStackDrMigrationJobTypeEnum
  status: OpenStackDrMigrationJobStatusEnum
  message: OpenStackDrMessage
}

input OpenStackDrMigrationJobStatusResponseInput {
    job_type: OpenStackDrMigrationJobTypeEnum
    status: OpenStackDrMigrationJobStatusEnum
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_migration_job_type_enum.graphql
#
# migration 작업 종류
enum OpenStackDrMigrationJobTypeEnum {
  SIMULATION
  CUTOVER
}

#
# open_stack_dr_migration_plan_instance_detail.graphql
#
# 인스턴스 마이그레이션 계획 정보
type OpenStackDrMigrationPlanInstanceDetail {
  instance: OpenStackDrInstanceMigrationPlan
  # 인스턴스 보안그룹 마이그레이션 계획
  security_groups: [OpenStackDrInstanceSecurityGroupMigrationPlan]
  # 인스턴스 볼륨 마이그레이션 계획
  volumes: [OpenStackDrInstanceVolumeMigrationPlan]
  # 인스턴스 네트워크 마이그레이션 계획
  networks: [OpenStackDrInstanceNetworkMigrationPlan]
}

input OpenStackDrMigrationPlanInstanceDetailInput {
    instance: OpenStackDrInstanceMigrationPlanInput
    # 인스턴스 보안그룹 마이그레이션 계획
    security_groups: [OpenStackDrInstanceSecurityGroupMigrationPlanInput]
    # 인스턴스 볼륨 마이그레이션 계획
    volumes: [OpenStackDrInstanceVolumeMigrationPlanInput]
    # 인스턴스 네트워크 마이그레이션 계획
    networks: [OpenStackDrInstanceNetworkMigrationPlanInput]
}

#
# open_stack_dr_migration_replication_status.graphql
#
# 마이그레이션 계획 복제 상태
type OpenStackDrMigrationReplicationStatus {
  status: OpenStackDrMigrationReplicationStatusEnum
  # 에러 코드
  err_code: BigInt
  # 원인
  cause: String
  # 마이그레이션 계획의 vm 개별 복제 상태
  vm_replication_status: [OpenStackDrMigrationVmStatus]
}

input OpenStackDrMigrationReplicationStatusInput {
    status: OpenStackDrMigrationReplicationStatusEnum
    # 에러 코드
    err_code: BigInt
    # 원인
    cause: String
    # 마이그레이션 계획의 vm 개별 복제 상태
    vm_replication_status: [OpenStackDrMigrationVmStatusInput]
}

#
# open_stack_dr_migration_replication_status_enum.graphql
#
# migration 복제 상태
enum OpenStackDrMigrationReplicationStatusEnum {
  UPDATING
  RUNNING
  DONE
  SWITCHING
  MIRRORING
  UNKNOWN
  NOT_FOUND
}

#
# open_stack_dr_migration_replication_status_response.graphql
#
type OpenStackDrMigrationReplicationStatusResponse {
  status: OpenStackDrMigrationReplicationStatus
  message: OpenStackDrMessage
}

input OpenStackDrMigrationReplicationStatusResponseInput {
    status: OpenStackDrMigrationReplicationStatusInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_migration_response.graphql
#
type OpenStackDrMigrationResponse {
  plan: OpenStackDrMigration
  message: OpenStackDrMessage
}

input OpenStackDrMigrationResponseInput {
    plan: OpenStackDrMigrationInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_migration_vm_status.graphql
#
# 마이그레이션 VM 개별 상태
type OpenStackDrMigrationVmStatus {
  # VM 아이디
  id: BigInt
  # VM 이름
  name: String
  status: OpenStackDrMigrationReplicationStatusEnum
  # 에러 코드
  err_code: BigInt
  # 원인
  cause: String
  # 진행률
  percentage: BigInt
}

input OpenStackDrMigrationVmStatusInput {
    # VM 아이디
    id: BigInt
    # VM 이름
    name: String
    status: OpenStackDrMigrationReplicationStatusEnum
    # 에러 코드
    err_code: BigInt
    # 원인
    cause: String
    # 진행률
    percentage: BigInt
}

#
# open_stack_dr_migrations_response.graphql
#
type OpenStackDrMigrationsResponse {
  plans: [OpenStackDrMigration]
  pagination: OpenStackDrPagination
  message: OpenStackDrMessage
}

input OpenStackDrMigrationsResponseInput {
    plans: [OpenStackDrMigrationInput]
    pagination: OpenStackDrPaginationInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_pagination.graphql
#
# 목록조회 페이지 정보
type OpenStackDrPagination {
  # 현재 페이지
  page: BigInt
  # 전체 페이지의 수
  total_page: BigInt
  # 검색된 아이템 전체 아이템 수
  total_items: BigInt
}

input OpenStackDrPaginationInput {
    # 현재 페이지
    page: BigInt
    # 전체 페이지의 수
    total_page: BigInt
    # 검색된 아이템 전체 아이템 수
    total_items: BigInt
}

#
# open_stack_dr_protection_cluster_history.graphql
#
# 보호 클러스터 history
type OpenStackDrProtectionClusterHistory {
  # 보호 클러스터 ID
  id: BigInt
  # 보호 클러스터 이름
  name: String
  # 보호그룹 목록(history)
  groups: [OpenStackDrProtectionGroup]
}

input OpenStackDrProtectionClusterHistoryInput {
    # 보호 클러스터 ID
    id: BigInt
    # 보호 클러스터 이름
    name: String
    # 보호그룹 목록(history)
    groups: [OpenStackDrProtectionGroupInput]
}

#
# open_stack_dr_protection_cluster_type_code_enum.graphql
#
# 보호대상 클러스터 종류
enum OpenStackDrProtectionClusterTypeCodeEnum {
  CLUSTER_TYPE_OPENSTACK
  CLUSTER_TYPE_OPENSHIFT
  CLUSTER_TYPE_KUBERNETES
  CLUSTER_TYPE_VMWARE
}

#
# open_stack_dr_protection_group.graphql
#
# 보호그룹
type OpenStackDrProtectionGroup {
  # 보호그룹 ID
  id: BigInt
  owner_group: CloudUserGroup
  protection_cluster: OpenStackCmCluster
  # 보호그룹 이름
  name: String
  # 보호그룹 Custom Resource 이름
  resource_name: String
  # 보호그룹 설명
  remarks: String
  recovery_point_objective_type: OpenStackDrRecoveryPointObjectiveTypeEnum
  # 목표복구시점
  recovery_point_objective: BigInt
  # 목표복구시간 (min)
  recovery_time_objective: BigInt
  snapshot_interval_type: OpenStackDrScheduleSnapshotIntervalTypeEnum
  # 스냅샷 생성주기 (recovery_point_objective 보다 크면 안됨)
  snapshot_interval: BigInt
  state_code: OpenStackDrScheduleStateCodeEnum
  # 재해복구계획 비정상 상태 사유
  abnormal_state_reasons: OpenStackDrAbnormalStateReasons
  # 복구대상 인스턴스 목록
  instances: [OpenStackCmClusterInstance]
  # 보호그룹 생성일시 (timestamp)
  created_at: BigInt
  # 보호그룹 최종 수정일시 (timestamp)
  updated_at: BigInt
  # 수정가능 여부
  updatable: Boolean
}

input OpenStackDrProtectionGroupInput {
    # 보호그룹 ID
    id: BigInt
    owner_group: CloudUserGroupInput
    protection_cluster: OpenStackCmClusterInput
    # 보호그룹 이름
    name: String
    # 보호그룹 Custom Resource 이름
    resource_name: String
    # 보호그룹 설명
    remarks: String
    recovery_point_objective_type: OpenStackDrRecoveryPointObjectiveTypeEnum
    # 목표복구시점
    recovery_point_objective: BigInt
    # 목표복구시간 (min)
    recovery_time_objective: BigInt
    snapshot_interval_type: OpenStackDrScheduleSnapshotIntervalTypeEnum
    # 스냅샷 생성주기 (recovery_point_objective 보다 크면 안됨)
    snapshot_interval: BigInt
    state_code: OpenStackDrScheduleStateCodeEnum
    # 재해복구계획 비정상 상태 사유
    abnormal_state_reasons: OpenStackDrAbnormalStateReasonsInput
    # 복구대상 인스턴스 목록
    instances: [OpenStackCmClusterInstanceInput]
    # 보호그룹 생성일시 (timestamp)
    created_at: BigInt
    # 보호그룹 최종 수정일시 (timestamp)
    updated_at: BigInt
    # 수정가능 여부
    updatable: Boolean
}

#
# open_stack_dr_protection_group_history.graphql
#
# 보호그룹 history
type OpenStackDrProtectionGroupHistory {
  # 보호 클러스터 목록(history)
  clusters: [OpenStackDrProtectionClusterHistory]
}

input OpenStackDrProtectionGroupHistoryInput {
    # 보호 클러스터 목록(history)
    clusters: [OpenStackDrProtectionClusterHistoryInput]
}

#
# open_stack_dr_protection_group_request.graphql
#
type OpenStackDrProtectionGroupRequest {
  group: OpenStackDrProtectionGroup
}

input OpenStackDrProtectionGroupRequestInput {
    group: OpenStackDrProtectionGroupInput
}

#
# open_stack_dr_protection_group_response.graphql
#
type OpenStackDrProtectionGroupResponse {
  group: OpenStackDrProtectionGroup
  message: OpenStackDrMessage
}

input OpenStackDrProtectionGroupResponseInput {
    group: OpenStackDrProtectionGroupInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_protection_group_snapshot.graphql
#
# 보호그룹의 스냅샷
type OpenStackDrProtectionGroupSnapshot {
  # 스냅샷 ID
  id: BigInt
  # 스냅샷 이름
  name: String
  # 스냅샷 생성 일시
  created_at: BigInt
}

input OpenStackDrProtectionGroupSnapshotInput {
    # 스냅샷 ID
    id: BigInt
    # 스냅샷 이름
    name: String
    # 스냅샷 생성 일시
    created_at: BigInt
}

#
# open_stack_dr_protection_groups_response.graphql
#
type OpenStackDrProtectionGroupsResponse {
  groups: [OpenStackDrProtectionGroup]
  pagination: OpenStackDrPagination
  message: OpenStackDrMessage
}

input OpenStackDrProtectionGroupsResponseInput {
    groups: [OpenStackDrProtectionGroupInput]
    pagination: OpenStackDrPaginationInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_recovery_job.graphql
#
# 재해복구작업
type OpenStackDrRecoveryJob {
  # 재해복구작업 ID
  id: BigInt
  group: OpenStackDrProtectionGroup
  plan: OpenStackDrRecoveryPlan
  type_code: OpenStackDrRecoveryTypeEnum
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구할 스냅샷
  recovery_point_snapshot: OpenStackDrProtectionGroupSnapshot
  schedule: CloudSchedule
  # 실행 예정시간
  next_runtime: BigInt
  operation_code: OpenStackDrRecoveryJobOperationCodeEnum
  state_code: OpenStackDrRecoveryJobStateCodeEnum
  # 작업 생성일시
  created_at: BigInt
  # 작업 수정일시
  updated_at: BigInt
}

input OpenStackDrRecoveryJobInput {
    # 재해복구작업 ID
    id: BigInt
    group: OpenStackDrProtectionGroupInput
    plan: OpenStackDrRecoveryPlanInput
    type_code: OpenStackDrRecoveryTypeEnum
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구할 스냅샷
    recovery_point_snapshot: OpenStackDrProtectionGroupSnapshotInput
    schedule: CloudScheduleInput
    # 실행 예정시간
    next_runtime: BigInt
    operation_code: OpenStackDrRecoveryJobOperationCodeEnum
    state_code: OpenStackDrRecoveryJobStateCodeEnum
    # 작업 생성일시
    created_at: BigInt
    # 작업 수정일시
    updated_at: BigInt
}

#
# open_stack_dr_recovery_job_floating_ip_status.graphql
#
# FloatingIP 복구 상태
type OpenStackDrRecoveryJobFloatingIpStatus {
  floating_ip: OpenStackCmClusterFloatingIp
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobStatusCodeEnum
  result_code: OpenStackDrRecoveryJobFloatingIpStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrRecoveryJobFloatingIpStatusInput {
    floating_ip: OpenStackCmClusterFloatingIpInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobStatusCodeEnum
    result_code: OpenStackDrRecoveryJobFloatingIpStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_recovery_job_floating_ip_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobFloatingIpStatusResultCodeEnum {
  SUCCESS
  FAILED
  EXCEPTED
  IGNORED
  CANCELED
}

#
# open_stack_dr_recovery_job_instance_spec_status.graphql
#
# 인스턴스 스펙 복구 상태
type OpenStackDrRecoveryJobInstanceSpecStatus {
  instance_spec: OpenStackCmClusterInstanceSpec
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobStatusCodeEnum
  result_code: OpenStackDrRecoveryJobInstanceSpecStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrRecoveryJobInstanceSpecStatusInput {
    instance_spec: OpenStackCmClusterInstanceSpecInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobStatusCodeEnum
    result_code: OpenStackDrRecoveryJobInstanceSpecStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_recovery_job_instance_spec_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobInstanceSpecStatusResultCodeEnum {
  SUCCESS
  FAILED
  EXCEPTED
  IGNORED
  CANCELED
}

#
# open_stack_dr_recovery_job_instance_status.graphql
#
# 인스턴스 복구 상태
type OpenStackDrRecoveryJobInstanceStatus {
  instance: OpenStackCmClusterInstance
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobInstanceStatusStateCodeEnum
  result_code: OpenStackDrRecoveryJobInstanceStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
}

input OpenStackDrRecoveryJobInstanceStatusInput {
    instance: OpenStackCmClusterInstanceInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobInstanceStatusStateCodeEnum
    result_code: OpenStackDrRecoveryJobInstanceStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
}

#
# open_stack_dr_recovery_job_instance_status_response.graphql
#
type OpenStackDrRecoveryJobInstanceStatusResponse {
  instances: [OpenStackDrRecoveryJobInstanceStatus]
}

input OpenStackDrRecoveryJobInstanceStatusResponseInput {
    instances: [OpenStackDrRecoveryJobInstanceStatusInput]
}

#
# open_stack_dr_recovery_job_instance_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobInstanceStatusResultCodeEnum {
  DR_RECOVERY_INSTANCE_RESULT_SUCCESS
  DR_RECOVERY_INSTANCE_RESULT_FAILED
  DR_RECOVERY_INSTANCE_RESULT_CANCELED
  DR_RECOVERY_INSTANCE_RESULT_UNKNOWN
}

#
# open_stack_dr_recovery_job_instance_status_state_code_enum.graphql
#
# 복구 상태
enum OpenStackDrRecoveryJobInstanceStatusStateCodeEnum {
  DR_RECOVERY_JOB_INSTANCE_STATE_EXCEPTED
  DR_RECOVERY_JOB_INSTANCE_STATE_IGNORED
  DR_RECOVERY_JOB_INSTANCE_STATE_PREPARING
  DR_RECOVERY_JOB_INSTANCE_STATE_READY
  DR_RECOVERY_JOB_INSTANCE_STATE_BOOTING
  DR_RECOVERY_JOB_INSTANCE_STATE_DIAGNOSING
  DR_RECOVERY_JOB_INSTANCE_STATE_SUCCESS
  DR_RECOVERY_JOB_INSTANCE_STATE_FAILED
  DR_RECOVERY_JOB_INSTANCE_STATE_DONE
  DR_RECOVERY_JOB_INSTANCE_STATE_RUNNING
}

#
# open_stack_dr_recovery_job_key_pair_status.graphql
#
# 키페어 복구 상태
type OpenStackDrRecoveryJobKeyPairStatus {
  keypair: OpenStackCmClusterKeyPair
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobStatusCodeEnum
  result_code: OpenStackDrRecoveryJobKeyPairStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrRecoveryJobKeyPairStatusInput {
    keypair: OpenStackCmClusterKeyPairInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobStatusCodeEnum
    result_code: OpenStackDrRecoveryJobKeyPairStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_recovery_job_key_pair_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobKeyPairStatusResultCodeEnum {
  SUCCESS
  FAILED
  EXCEPTED
  IGNORED
  CANCELED
}

#
# open_stack_dr_recovery_job_monitors_response.graphql
#
type OpenStackDrRecoveryJobMonitorsResponse {
  status: OpenStackDrRecoveryJobStatus
  tenants: [OpenStackDrRecoveryJobTenantStatus]
  security_groups: [OpenStackDrRecoveryJobSecurityGroupStatus]
  networks: [OpenStackDrRecoveryJobNetworkStatus]
  subnets: [OpenStackDrRecoveryJobSubnetStatus]
  floating_ips: [OpenStackDrRecoveryJobFloatingIpStatus]
  routers: [OpenStackDrRecoveryJobRouterStatus]
  volumes: [OpenStackDrRecoveryJobVolumeStatus]
  keypairs: [OpenStackDrRecoveryJobKeyPairStatus]
  instance_specs: [OpenStackDrRecoveryJobInstanceSpecStatus]
  instances: [OpenStackDrRecoveryJobInstanceStatus]
}

input OpenStackDrRecoveryJobMonitorsResponseInput {
    status: OpenStackDrRecoveryJobStatusInput
    tenants: [OpenStackDrRecoveryJobTenantStatusInput]
    security_groups: [OpenStackDrRecoveryJobSecurityGroupStatusInput]
    networks: [OpenStackDrRecoveryJobNetworkStatusInput]
    subnets: [OpenStackDrRecoveryJobSubnetStatusInput]
    floating_ips: [OpenStackDrRecoveryJobFloatingIpStatusInput]
    routers: [OpenStackDrRecoveryJobRouterStatusInput]
    volumes: [OpenStackDrRecoveryJobVolumeStatusInput]
    keypairs: [OpenStackDrRecoveryJobKeyPairStatusInput]
    instance_specs: [OpenStackDrRecoveryJobInstanceSpecStatusInput]
    instances: [OpenStackDrRecoveryJobInstanceStatusInput]
}

#
# open_stack_dr_recovery_job_network_status.graphql
#
# 네트워크 복구 상태
type OpenStackDrRecoveryJobNetworkStatus {
  network: OpenStackCmClusterNetwork
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobStatusCodeEnum
  result_code: OpenStackDrRecoveryJobNetworkStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrRecoveryJobNetworkStatusInput {
    network: OpenStackCmClusterNetworkInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobStatusCodeEnum
    result_code: OpenStackDrRecoveryJobNetworkStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_recovery_job_network_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobNetworkStatusResultCodeEnum {
  SUCCESS
  FAILED
  EXCEPTED
  IGNORED
  CANCELED
}

#
# open_stack_dr_recovery_job_operation_code_enum.graphql
#
# Operation
enum OpenStackDrRecoveryJobOperationCodeEnum {
  RUN
  PAUSE
  CANCEL
  RETRY
  ROLLBACK
  RETRY_ROLLBACK
  IGNORE_ROLLBACK
  CONFIRM
  RETRY_CONFIRM
  CANCEL_CONFIRM
}

#
# open_stack_dr_recovery_job_recovery_point_type_code_enum.graphql
#
# 데이터 시점 유형
enum OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum {
  DR_RECOVERY_RECOVERY_POINT_TYPE_LATEST
  DR_RECOVERY_RECOVERY_POINT_TYPE_LATEST_SNAPSHOT
  DR_RECOVERY_RECOVERY_POINT_TYPE_SNAPSHOT
}

#
# open_stack_dr_recovery_job_response.graphql
#
type OpenStackDrRecoveryJobResponse {
  job: OpenStackDrRecoveryJobResponseJob
  message: OpenStackDrMessage
}

input OpenStackDrRecoveryJobResponseInput {
    job: OpenStackDrRecoveryJobResponseJobInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_recovery_job_response_job.graphql
#
type OpenStackDrRecoveryJobResponseJob {
  operator: CloudUser
  # 재해복구작업 ID
  id: BigInt
  group: OpenStackDrProtectionGroup
  plan: OpenStackDrRecoveryPlan
  type_code: OpenStackDrRecoveryTypeEnum
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구할 스냅샷
  recovery_point_snapshot: OpenStackDrProtectionGroupSnapshot
  schedule: CloudSchedule
  # 실행 예정시간
  next_runtime: BigInt
  operation_code: OpenStackDrRecoveryJobOperationCodeEnum
  state_code: OpenStackDrRecoveryJobStateCodeEnum
  # 작업 생성일시
  created_at: BigInt
  # 작업 수정일시
  updated_at: BigInt
}

input OpenStackDrRecoveryJobResponseJobInput {
    operator: CloudUserInput
    # 재해복구작업 ID
    id: BigInt
    group: OpenStackDrProtectionGroupInput
    plan: OpenStackDrRecoveryPlanInput
    type_code: OpenStackDrRecoveryTypeEnum
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구할 스냅샷
    recovery_point_snapshot: OpenStackDrProtectionGroupSnapshotInput
    schedule: CloudScheduleInput
    # 실행 예정시간
    next_runtime: BigInt
    operation_code: OpenStackDrRecoveryJobOperationCodeEnum
    state_code: OpenStackDrRecoveryJobStateCodeEnum
    # 작업 생성일시
    created_at: BigInt
    # 작업 수정일시
    updated_at: BigInt
}

#
# open_stack_dr_recovery_job_router_status.graphql
#
# 라우터 복구 상태
type OpenStackDrRecoveryJobRouterStatus {
  router: OpenStackCmClusterRouter
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobStatusCodeEnum
  result_code: OpenStackDrRecoveryJobRouterStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrRecoveryJobRouterStatusInput {
    router: OpenStackCmClusterRouterInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobStatusCodeEnum
    result_code: OpenStackDrRecoveryJobRouterStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_recovery_job_router_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobRouterStatusResultCodeEnum {
  SUCCESS
  FAILED
  EXCEPTED
  IGNORED
  CANCELED
}

#
# open_stack_dr_recovery_job_security_group_status.graphql
#
# 보호그룹 복구 상태
type OpenStackDrRecoveryJobSecurityGroupStatus {
  security_group: OpenStackCmClusterSecurityGroup
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobSecurityGroupStatusStateCodeEnum
  result_code: OpenStackDrRecoveryJobSecurityGroupStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrRecoveryJobSecurityGroupStatusInput {
    security_group: OpenStackCmClusterSecurityGroupInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobSecurityGroupStatusStateCodeEnum
    result_code: OpenStackDrRecoveryJobSecurityGroupStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_recovery_job_security_group_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobSecurityGroupStatusResultCodeEnum {
  SUCCESS
  FAILED
  CANCELED
}

#
# open_stack_dr_recovery_job_security_group_status_state_code_enum.graphql
#
# 복구 상태
enum OpenStackDrRecoveryJobSecurityGroupStatusStateCodeEnum {
  PREPARING
  EXCEPTED
  SUCCESS
  FAILED
  DONE
}

#
# open_stack_dr_recovery_job_state_code_enum.graphql
#
# 작업 상태
enum OpenStackDrRecoveryJobStateCodeEnum {
  DR_RECOVERY_JOB_STATE_WAITING
  DR_RECOVERY_JOB_STATE_PENDING
  DR_RECOVERY_JOB_STATE_RUNNING
  DR_RECOVERY_JOB_STATE_CANCELING
  DR_RECOVERY_JOB_STATE_PAUSED
  DR_RECOVERY_JOB_STATE_COMPLETED
  DR_RECOVERY_JOB_STATE_CLEARING
  DR_RECOVERY_JOB_STATE_CLEAR_FAILED
  DR_RECOVERY_JOB_STATE_REPORTING
  DR_RECOVERY_JOB_STATE_FINISHED
}

#
# open_stack_dr_recovery_job_status.graphql
#
# 재해복구작업 상태
type OpenStackDrRecoveryJobStatus {
  # 작업 시작일시
  started_at: BigInt
  # 작업 종료일시
  finished_at: BigInt
  # 작업 소요시간
  elapsed_time: BigInt
  operation_code: OpenStackDrRecoveryJobOperationCodeEnum
  state_code: OpenStackDrRecoveryJobStateCodeEnum
  result_code: OpenStackDrRecoveryJobStatusResultCodeEnum
  # 경고 여부
  warning_flag: Boolean
  # 경고 사유 목록
  warning_reasons: [OpenStackDrMessage]
  # 실패 사유 목록
  failed_reasons: [OpenStackDrMessage]
  # 재개예정일시
  resume_at: BigInt
  # 롤백예정일시
  rollback_at: BigInt
}

input OpenStackDrRecoveryJobStatusInput {
    # 작업 시작일시
    started_at: BigInt
    # 작업 종료일시
    finished_at: BigInt
    # 작업 소요시간
    elapsed_time: BigInt
    operation_code: OpenStackDrRecoveryJobOperationCodeEnum
    state_code: OpenStackDrRecoveryJobStateCodeEnum
    result_code: OpenStackDrRecoveryJobStatusResultCodeEnum
    # 경고 여부
    warning_flag: Boolean
    # 경고 사유 목록
    warning_reasons: [OpenStackDrMessageInput]
    # 실패 사유 목록
    failed_reasons: [OpenStackDrMessageInput]
    # 재개예정일시
    resume_at: BigInt
    # 롤백예정일시
    rollback_at: BigInt
}

#
# open_stack_dr_recovery_job_status_code_enum.graphql
#
# 복구 상태
enum OpenStackDrRecoveryJobStatusCodeEnum {
  WAITING
  RUNNING
  DONE
}

#
# open_stack_dr_recovery_job_status_response.graphql
#
type OpenStackDrRecoveryJobStatusResponse {
  status: OpenStackDrRecoveryJobStatus
}

input OpenStackDrRecoveryJobStatusResponseInput {
    status: OpenStackDrRecoveryJobStatusInput
}

#
# open_stack_dr_recovery_job_status_result_code_enum.graphql
#
# 실행 결과
enum OpenStackDrRecoveryJobStatusResultCodeEnum {
  DR_RECOVERY_RESULT_SUCCESS
  DR_RECOVERY_RESULT_PARTIAL_SUCCESS
  DR_RECOVERY_RESULT_FAILED
  DR_RECOVERY_RESULT_CANCELED
}

#
# open_stack_dr_recovery_job_status_type_code_enum.graphql
#
# 복구, 롤백 상태
enum OpenStackDrRecoveryJobStatusTypeCodeEnum {
  DR_MIGRATION_TASK_CREATE
  DR_MIGRATION_TASK_DELETE
}

#
# open_stack_dr_recovery_job_subnet_status.graphql
#
# 서브넷 복구 상태
type OpenStackDrRecoveryJobSubnetStatus {
  subnet: OpenStackCmClusterSubnet
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobStatusCodeEnum
  result_code: OpenStackDrRecoveryJobSubnetStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrRecoveryJobSubnetStatusInput {
    subnet: OpenStackCmClusterSubnetInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobStatusCodeEnum
    result_code: OpenStackDrRecoveryJobSubnetStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_recovery_job_subnet_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobSubnetStatusResultCodeEnum {
  SUCCESS
  FAILED
  EXCEPTED
  IGNORED
  CANCELED
}

#
# open_stack_dr_recovery_job_tenant_status.graphql
#
# 테넌트 복구 상태
type OpenStackDrRecoveryJobTenantStatus {
  tenant: OpenStackCmClusterTenant
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobStatusCodeEnum
  result_code: OpenStackDrRecoveryJobTenantStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrRecoveryJobTenantStatusInput {
    tenant: OpenStackCmClusterTenantInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobStatusCodeEnum
    result_code: OpenStackDrRecoveryJobTenantStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_recovery_job_tenant_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobTenantStatusResultCodeEnum {
  SUCCESS
  FAILED
  EXCEPTED
  IGNORED
  CANCELED
}

#
# open_stack_dr_recovery_job_volume_status.graphql
#
# 볼륨 복구 상태
type OpenStackDrRecoveryJobVolumeStatus {
  volume: OpenStackCmClusterVolume
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  state_code: OpenStackDrRecoveryJobVolumeStatusStateCodeEnum
  result_code: OpenStackDrRecoveryJobVolumeStatusResultCodeEnum
  type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrRecoveryJobVolumeStatusInput {
    volume: OpenStackCmClusterVolumeInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    state_code: OpenStackDrRecoveryJobVolumeStatusStateCodeEnum
    result_code: OpenStackDrRecoveryJobVolumeStatusResultCodeEnum
    type_code: OpenStackDrRecoveryJobStatusTypeCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_recovery_job_volume_status_response.graphql
#
type OpenStackDrRecoveryJobVolumeStatusResponse {
  volumes: [OpenStackDrRecoveryJobVolumeStatus]
}

input OpenStackDrRecoveryJobVolumeStatusResponseInput {
    volumes: [OpenStackDrRecoveryJobVolumeStatusInput]
}

#
# open_stack_dr_recovery_job_volume_status_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrRecoveryJobVolumeStatusResultCodeEnum {
  DR_RECOVERY_VOLUME_RESULT_SUCCESS
  DR_RECOVERY_VOLUME_RESULT_FAILED
  DR_RECOVERY_VOLUME_RESULT_CANCELED
}

#
# open_stack_dr_recovery_job_volume_status_state_code_enum.graphql
#
# 복구 상태
enum OpenStackDrRecoveryJobVolumeStatusStateCodeEnum {
  DR_RECOVERY_JOB_VOLUME_STATE_PREPARING
  DR_RECOVERY_JOB_VOLUME_STATE_EXCEPTED
  DR_RECOVERY_JOB_VOLUME_STATE_SUCCESS
  DR_RECOVERY_JOB_VOLUME_STATE_FAILED
  DR_RECOVERY_JOB_VOLUME_STATE_DONE
}

#
# open_stack_dr_recovery_jobs_response.graphql
#
type OpenStackDrRecoveryJobsResponse {
  jobs: [OpenStackDrRecoveryJobsResponseJobs]
  pagination: OpenStackDrPagination
  message: OpenStackDrMessage
}

input OpenStackDrRecoveryJobsResponseInput {
    jobs: [OpenStackDrRecoveryJobsResponseJobsInput]
    pagination: OpenStackDrPaginationInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_recovery_jobs_response_jobs.graphql
#
type OpenStackDrRecoveryJobsResponseJobs {
  operator: CloudUser
  # 재해복구작업 ID
  id: BigInt
  group: OpenStackDrProtectionGroup
  plan: OpenStackDrRecoveryPlan
  type_code: OpenStackDrRecoveryTypeEnum
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구할 스냅샷
  recovery_point_snapshot: OpenStackDrProtectionGroupSnapshot
  schedule: CloudSchedule
  # 실행 예정시간
  next_runtime: BigInt
  operation_code: OpenStackDrRecoveryJobOperationCodeEnum
  state_code: OpenStackDrRecoveryJobStateCodeEnum
  # 작업 생성일시
  created_at: BigInt
  # 작업 수정일시
  updated_at: BigInt
}

input OpenStackDrRecoveryJobsResponseJobsInput {
    operator: CloudUserInput
    # 재해복구작업 ID
    id: BigInt
    group: OpenStackDrProtectionGroupInput
    plan: OpenStackDrRecoveryPlanInput
    type_code: OpenStackDrRecoveryTypeEnum
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구할 스냅샷
    recovery_point_snapshot: OpenStackDrProtectionGroupSnapshotInput
    schedule: CloudScheduleInput
    # 실행 예정시간
    next_runtime: BigInt
    operation_code: OpenStackDrRecoveryJobOperationCodeEnum
    state_code: OpenStackDrRecoveryJobStateCodeEnum
    # 작업 생성일시
    created_at: BigInt
    # 작업 수정일시
    updated_at: BigInt
}

#
# open_stack_dr_recovery_plan.graphql
#
# 재해복구계획
type OpenStackDrRecoveryPlan {
  # 재해복구계획 ID
  id: BigInt
  protection_cluster: OpenStackCmCluster
  recovery_cluster: OpenStackCmCluster
  # 재해복구계획 이름
  name: String
  # 스냅샷 유지갯수
  snapshot_retention_count: BigInt
  # 비고
  remarks: String
  direction_code: OpenStackDrRecoveryPlanDirectionCodeEnum
  state_code: OpenStackDrRecoveryPlanStateCodeEnum
  mirror_state_code: OpenStackDrRecoveryPlanMirrorStateCodeEnum
  # 재해복구계획 비정상 상태 사유
  abnormal_state_reasons: OpenStackDrAbnormalStateReasons
  # 재해복구계획 생성일시 (timestamp)
  created_at: BigInt
  # 재해복구계획 최종 수정일시 (timestamp)
  updated_at: BigInt
  detail: OpenStackDrRecoveryPlanDetail
  # 수정가능 여부
  updatable: Boolean
}

input OpenStackDrRecoveryPlanInput {
    # 재해복구계획 ID
    id: BigInt
    protection_cluster: OpenStackCmClusterInput
    recovery_cluster: OpenStackCmClusterInput
    # 재해복구계획 이름
    name: String
    # 스냅샷 유지갯수
    snapshot_retention_count: BigInt
    # 비고
    remarks: String
    direction_code: OpenStackDrRecoveryPlanDirectionCodeEnum
    state_code: OpenStackDrRecoveryPlanStateCodeEnum
    mirror_state_code: OpenStackDrRecoveryPlanMirrorStateCodeEnum
    # 재해복구계획 비정상 상태 사유
    abnormal_state_reasons: OpenStackDrAbnormalStateReasonsInput
    # 재해복구계획 생성일시 (timestamp)
    created_at: BigInt
    # 재해복구계획 최종 수정일시 (timestamp)
    updated_at: BigInt
    detail: OpenStackDrRecoveryPlanDetailInput
    # 수정가능 여부
    updatable: Boolean
}

#
# open_stack_dr_recovery_plan_detail.graphql
#
# 재해복구계획 상세
type OpenStackDrRecoveryPlanDetail {
  # 테넌트 복구계획
  tenants: [OpenStackDrTenantRecoveryPlan]
  # 가용구역 복구계획
  availability_zones: [OpenStackDrAvailabilityZoneRecoveryPlan]
  # 외부 네트워크 복구계획
  external_networks: [OpenStackDrExternalNetworkRecoveryPlan]
  # 라우터 복구계획
  routers: [OpenStackDrRouterRecoveryPlan]
  # 볼륨타입 복구계획
  storages: [OpenStackDrStorageRecoveryPlan]
  # 인스턴스 복구계획
  instances: [OpenStackDrInstanceRecoveryPlan]
  # Floating IP 복구계획
  floating_ips: [OpenStackDrFloatingIpRecoveryPlan]
  # 볼륨 복구계획
  volumes: [OpenStackDrVolumeRecoveryPlan]
  # 보안그룹
  extra_remote_security_groups: [OpenStackCmClusterSecurityGroup]
}

input OpenStackDrRecoveryPlanDetailInput {
    # 테넌트 복구계획
    tenants: [OpenStackDrTenantRecoveryPlanInput]
    # 가용구역 복구계획
    availability_zones: [OpenStackDrAvailabilityZoneRecoveryPlanInput]
    # 외부 네트워크 복구계획
    external_networks: [OpenStackDrExternalNetworkRecoveryPlanInput]
    # 라우터 복구계획
    routers: [OpenStackDrRouterRecoveryPlanInput]
    # 볼륨타입 복구계획
    storages: [OpenStackDrStorageRecoveryPlanInput]
    # 인스턴스 복구계획
    instances: [OpenStackDrInstanceRecoveryPlanInput]
    # Floating IP 복구계획
    floating_ips: [OpenStackDrFloatingIpRecoveryPlanInput]
    # 볼륨 복구계획
    volumes: [OpenStackDrVolumeRecoveryPlanInput]
    # 보안그룹
    extra_remote_security_groups: [OpenStackCmClusterSecurityGroupInput]
}

#
# open_stack_dr_recovery_plan_direction_code_enum.graphql
#
# 복구 방향
enum OpenStackDrRecoveryPlanDirectionCodeEnum {
  DR_RECOVERY_DIRECTION_FAILOVER
  DR_RECOVERY_DIRECTION_FAILBACK
}

#
# open_stack_dr_recovery_plan_mirror_state_code_enum.graphql
#
# 재해복구계획의 미러링 상태
enum OpenStackDrRecoveryPlanMirrorStateCodeEnum {
  DR_RECOVERY_PLAN_STATE_PREPARE
  DR_RECOVERY_PLAN_STATE_MIRRORING
  DR_RECOVERY_PLAN_STATE_PAUSED
  DR_RECOVERY_PLAN_STATE_STOPPED
  DR_RECOVERY_PLAN_STATE_WARNING
}

#
# open_stack_dr_recovery_plan_request.graphql
#
type OpenStackDrRecoveryPlanRequest {
  plan: OpenStackDrRecoveryPlan
  # warning 을 무시하고 등록
  force: Boolean
}

input OpenStackDrRecoveryPlanRequestInput {
    plan: OpenStackDrRecoveryPlanInput
    # warning 을 무시하고 등록
    force: Boolean
}

#
# open_stack_dr_recovery_plan_response.graphql
#
type OpenStackDrRecoveryPlanResponse {
  plan: OpenStackDrRecoveryPlan
  message: OpenStackDrMessage
}

input OpenStackDrRecoveryPlanResponseInput {
    plan: OpenStackDrRecoveryPlanInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_recovery_plan_state_code_enum.graphql
#
# 재해복구계획의 상태
enum OpenStackDrRecoveryPlanStateCodeEnum {
  DR_RECOVERY_PLAN_STATE_NORMAL
  DR_RECOVERY_PLAN_STATE_WARNING
  DR_RECOVERY_PLAN_STATE_EMERGENCY
  DR_RECOVERY_PLAN_STATE_CRITICAL
}

#
# open_stack_dr_recovery_plans_response.graphql
#
type OpenStackDrRecoveryPlansResponse {
  plans: [OpenStackDrRecoveryPlan]
  pagination: OpenStackDrPagination
  message: OpenStackDrMessage
}

input OpenStackDrRecoveryPlansResponseInput {
    plans: [OpenStackDrRecoveryPlanInput]
    pagination: OpenStackDrPaginationInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_recovery_point_objective_type_enum.graphql
#
# RPO 시간 단위 recovery.point.objective.type.minute: 분단위 recovery.point.objective.type.hour: 시간단위 recovery.point.objective.type.day: 일단위
enum OpenStackDrRecoveryPointObjectiveTypeEnum {
  RECOVERY_POINT_OBJECTIVE_TYPE_MINUTE
  RECOVERY_POINT_OBJECTIVE_TYPE_HOUR
  RECOVERY_POINT_OBJECTIVE_TYPE_DAY
}

#
# open_stack_dr_recovery_result.graphql
#
type OpenStackDrRecoveryResult {
  # 재해복구결과 ID
  id: BigInt
  # 재해복구작업 실행 혹은 예약한 사용자 ID
  operator_id: BigInt
  # 재해복구작업 실행 혹은 예약한 사용자 계정
  operator_account: String
  # 재해복구작업 실행 혹은 예약한 사용자 이름
  operator_name: String
  # 재해복구작업 실행 혹은 예약한 사용자 부서
  operator_department: String
  # 재해복구작업 실행 혹은 예약한 사용자 직책
  operator_position: String
  # 재해복구작업 확정/취소한 사용자 ID
  approver_id: BigInt
  # 재해복구작업 확정/취소한 사용자 계정
  approver_account: String
  # 재해복구작업 확정/취소한 사용자 이름
  approver_name: String
  # 재해복구작업 확정/취소한 사용자 부서
  approver_department: String
  # 재해복구작업 확정/취소한 사용자 직책
  approver_position: String
  # 보호그룹 ID
  protection_group_id: BigInt
  # 보호그룹 이름
  protection_group_name: String
  # 보호그룹 설명
  protection_group_remarks: String
  # 재해복구계획 ID
  recovery_plan_id: BigInt
  # 재해복구계획 이름
  recovery_plan_name: String
  # 재해복구계획 설명
  recovery_plan_remarks: String
  # 보호대상 클러스터 ID
  protection_cluster_id: BigInt
  # 보호대상 클러스터 이름
  protection_cluster_type_code: String
  # 보호대상 클러스터 이름
  protection_cluster_name: String
  # 보호대상 클러스터 설명
  protection_cluster_remarks: String
  # 복구대상 클러스터 ID
  recovery_cluster_id: BigInt
  # 복구대상 클러스터 이름
  recovery_cluster_type_code: String
  # 복구대상 클러스터 이름
  recovery_cluster_name: String
  # 복구대상 클러스터 설명
  recovery_cluster_remarks: String
  recovery_type_code: OpenStackDrRecoveryTypeEnum
  recovery_direction_code: OpenStackDrRecoveryPlanDirectionCodeEnum
  recovery_point_objective_type: OpenStackDrRecoveryPointObjectiveTypeEnum
  # 목표복구시점
  recovery_point_objective: BigInt
  # 목표복구시간 (min)
  recovery_time_objective: BigInt
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  schedule_type: CloudScheduleTypeEnum
  # 복구 시작일시
  started_at: BigInt
  # 복구 종료일시
  finished_at: BigInt
  # 복구 소요시간
  elapsed_time: BigInt
  result_code: OpenStackDrRecoveryResultResultCodeEnum
  # 경고 여부
  warning_flag: Boolean
  # 경고 사유 목록
  warning_reasons: [OpenStackDrMessage]
  # 실패 사유 목록
  failed_reasons: [OpenStackDrMessage]
  task_logs: [OpenStackDrRecoveryTaskLog]
  instances: [OpenStackDrInstanceRecoveryResult]
  volumes: [OpenStackDrVolumeRecoveryResult]
  routers: [OpenStackDrRouterRecoveryResult]
}

input OpenStackDrRecoveryResultInput {
    # 재해복구결과 ID
    id: BigInt
    # 재해복구작업 실행 혹은 예약한 사용자 ID
    operator_id: BigInt
    # 재해복구작업 실행 혹은 예약한 사용자 계정
    operator_account: String
    # 재해복구작업 실행 혹은 예약한 사용자 이름
    operator_name: String
    # 재해복구작업 실행 혹은 예약한 사용자 부서
    operator_department: String
    # 재해복구작업 실행 혹은 예약한 사용자 직책
    operator_position: String
    # 재해복구작업 확정/취소한 사용자 ID
    approver_id: BigInt
    # 재해복구작업 확정/취소한 사용자 계정
    approver_account: String
    # 재해복구작업 확정/취소한 사용자 이름
    approver_name: String
    # 재해복구작업 확정/취소한 사용자 부서
    approver_department: String
    # 재해복구작업 확정/취소한 사용자 직책
    approver_position: String
    # 보호그룹 ID
    protection_group_id: BigInt
    # 보호그룹 이름
    protection_group_name: String
    # 보호그룹 설명
    protection_group_remarks: String
    # 재해복구계획 ID
    recovery_plan_id: BigInt
    # 재해복구계획 이름
    recovery_plan_name: String
    # 재해복구계획 설명
    recovery_plan_remarks: String
    # 보호대상 클러스터 ID
    protection_cluster_id: BigInt
    # 보호대상 클러스터 이름
    protection_cluster_type_code: String
    # 보호대상 클러스터 이름
    protection_cluster_name: String
    # 보호대상 클러스터 설명
    protection_cluster_remarks: String
    # 복구대상 클러스터 ID
    recovery_cluster_id: BigInt
    # 복구대상 클러스터 이름
    recovery_cluster_type_code: String
    # 복구대상 클러스터 이름
    recovery_cluster_name: String
    # 복구대상 클러스터 설명
    recovery_cluster_remarks: String
    recovery_type_code: OpenStackDrRecoveryTypeEnum
    recovery_direction_code: OpenStackDrRecoveryPlanDirectionCodeEnum
    recovery_point_objective_type: OpenStackDrRecoveryPointObjectiveTypeEnum
    # 목표복구시점
    recovery_point_objective: BigInt
    # 목표복구시간 (min)
    recovery_time_objective: BigInt
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    schedule_type: CloudScheduleTypeEnum
    # 복구 시작일시
    started_at: BigInt
    # 복구 종료일시
    finished_at: BigInt
    # 복구 소요시간
    elapsed_time: BigInt
    result_code: OpenStackDrRecoveryResultResultCodeEnum
    # 경고 여부
    warning_flag: Boolean
    # 경고 사유 목록
    warning_reasons: [OpenStackDrMessageInput]
    # 실패 사유 목록
    failed_reasons: [OpenStackDrMessageInput]
    task_logs: [OpenStackDrRecoveryTaskLogInput]
    instances: [OpenStackDrInstanceRecoveryResultInput]
    volumes: [OpenStackDrVolumeRecoveryResultInput]
    routers: [OpenStackDrRouterRecoveryResultInput]
}

#
# open_stack_dr_recovery_result_report_response.graphql
#
type OpenStackDrRecoveryResultReportResponse {
  report: OpenStackDrRecoveryResult
  message: OpenStackDrMessage
}

input OpenStackDrRecoveryResultReportResponseInput {
    report: OpenStackDrRecoveryResultInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_recovery_result_reports_response.graphql
#
type OpenStackDrRecoveryResultReportsResponse {
  reports: [OpenStackDrRecoveryResult]
  pagination: OpenStackDrPagination
  message: OpenStackDrMessage
}

input OpenStackDrRecoveryResultReportsResponseInput {
    reports: [OpenStackDrRecoveryResultInput]
    pagination: OpenStackDrPaginationInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_recovery_result_result_code_enum.graphql
#
# 실행 결과
enum OpenStackDrRecoveryResultResultCodeEnum {
  DR_RECOVERY_RESULT_SUCCESS
  DR_RECOVERY_RESULT_PARTIAL_SUCCESS
  DR_RECOVERY_RESULT_FAILED
  DR_RECOVERY_RESULT_CANCELED
}

#
# open_stack_dr_recovery_task_log.graphql
#
# 재해복구작업 내역 로그
type OpenStackDrRecoveryTaskLog {
  # 작업 내역 로그 seq
  log_seq: BigInt
  # 작업 내역 로깅 일시
  log_dt: BigInt
  # 메시지 코드
  code: String
  # 메시지 상세 내용 데이터
  contents: String
}

input OpenStackDrRecoveryTaskLogInput {
    # 작업 내역 로그 seq
    log_seq: BigInt
    # 작업 내역 로깅 일시
    log_dt: BigInt
    # 메시지 코드
    code: String
    # 메시지 상세 내용 데이터
    contents: String
}

#
# open_stack_dr_recovery_task_logs_response.graphql
#
type OpenStackDrRecoveryTaskLogsResponse {
  task_logs: [OpenStackDrRecoveryTaskLog]
}

input OpenStackDrRecoveryTaskLogsResponseInput {
    task_logs: [OpenStackDrRecoveryTaskLogInput]
}

#
# open_stack_dr_recovery_type_enum.graphql
#
# 복구 유형
enum OpenStackDrRecoveryTypeEnum {
  DR_RECOVERY_TYPE_SIMULATION
  DR_RECOVERY_TYPE_MIGRATION
}

#
# open_stack_dr_report_result_enum.graphql
#
# 복구 결과
enum OpenStackDrReportResultEnum {
  DR_RECOVERY_RESULT_SUCCESS
  DR_RECOVERY_RESULT_PARTIAL_SUCCESS
  DR_RECOVERY_RESULT_FAILED
  DR_RECOVERY_RESULT_CANCELED
}

#
# open_stack_dr_retry_instances_request.graphql
#
type OpenStackDrRetryInstancesRequest {
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구할 스냅샷
  recovery_point_snapshot: OpenStackDrProtectionGroupSnapshot
  # 재시도할 인스턴스 목록
  instances: [OpenStackCmClusterInstance]
}

input OpenStackDrRetryInstancesRequestInput {
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구할 스냅샷
    recovery_point_snapshot: OpenStackDrProtectionGroupSnapshotInput
    # 재시도할 인스턴스 목록
    instances: [OpenStackCmClusterInstanceInput]
}

#
# open_stack_dr_router_recovery_plan.graphql
#
# 라우터 복구계획
type OpenStackDrRouterRecoveryPlan {
  recovery_type_code: OpenStackDrRouterRecoveryPlanRecoveryTypeCodeEnum
  protection_cluster_router: OpenStackCmClusterRouter
  # 라우팅할 외부 네트워크
  recovery_cluster_external_network: OpenStackCmClusterNetwork
  # 라우팅할 외부 네트워크 변경 필요 여부
  recovery_cluster_external_network_update_flag: Boolean
  # 라우팅할 외부 네트워크 변경 필요 사유
  recovery_cluster_external_network_update_reason: OpenStackDrMessage
  # 라우팅할 외부 네트워크로의 라우팅 인터페이스 목록
  recovery_cluster_external_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterface]
}

input OpenStackDrRouterRecoveryPlanInput {
    recovery_type_code: OpenStackDrRouterRecoveryPlanRecoveryTypeCodeEnum
    protection_cluster_router: OpenStackCmClusterRouterInput
    # 라우팅할 외부 네트워크
    recovery_cluster_external_network: OpenStackCmClusterNetworkInput
    # 라우팅할 외부 네트워크 변경 필요 여부
    recovery_cluster_external_network_update_flag: Boolean
    # 라우팅할 외부 네트워크 변경 필요 사유
    recovery_cluster_external_network_update_reason: OpenStackDrMessageInput
    # 라우팅할 외부 네트워크로의 라우팅 인터페이스 목록
    recovery_cluster_external_routing_interfaces: [OpenStackCmClusterNetworkRoutingInterfaceInput]
}

#
# open_stack_dr_router_recovery_plan_recovery_type_code_enum.graphql
#
# 복구 유형 (미러링만 지원)
enum OpenStackDrRouterRecoveryPlanRecoveryTypeCodeEnum {
  DR_RECOVERY_PLAN_NETWORK_RECOVERY_TYPE_MIRRORING
}

#
# open_stack_dr_router_recovery_result.graphql
#
type OpenStackDrRouterRecoveryResult {
  protection_cluster_router: OpenStackCmClusterRouter
  recovery_cluster_router: OpenStackCmClusterRouter
}

input OpenStackDrRouterRecoveryResultInput {
    protection_cluster_router: OpenStackCmClusterRouterInput
    recovery_cluster_router: OpenStackCmClusterRouterInput
}

#
# open_stack_dr_schedule_snapshot_interval_type_enum.graphql
#
# 스냅샷 생성주기 시간 단위
enum OpenStackDrScheduleSnapshotIntervalTypeEnum {
  SNAPSHOT_INTERVAL_TYPE_MINUTELY
  SNAPSHOT_INTERVAL_TYPE_HOURLY
  SNAPSHOT_INTERVAL_TYPE_DAILY
}

#
# open_stack_dr_schedule_state_code_enum.graphql
#
# 보호그룹 상태
enum OpenStackDrScheduleStateCodeEnum {
  DR_PROTECTION_GROUP_STATE_NORMAL
  DR_PROTECTION_GROUP_STATE_WARNING
  DR_PROTECTION_GROUP_STATE_CRITICAL
  DR_PROTECTION_GROUP_STATE_EMERGENCY
}

#
# open_stack_dr_snapshot_message_response.graphql
#
type OpenStackDrSnapshotMessageResponse {
  message: OpenStackDrMessage
}

input OpenStackDrSnapshotMessageResponseInput {
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_snapshots_response.graphql
#
type OpenStackDrSnapshotsResponse {
  snapshots: [OpenStackDrProtectionGroupSnapshot]
  message: OpenStackDrMessage
}

input OpenStackDrSnapshotsResponseInput {
    snapshots: [OpenStackDrProtectionGroupSnapshotInput]
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_storage_recovery_plan.graphql
#
# 볼륨타입 복구계획
type OpenStackDrStorageRecoveryPlan {
  recovery_type_code: OpenStackDrStorageRecoveryPlanRecoveryTypeCodeEnum
  protection_cluster_storage: OpenStackCmClusterStorage
  recovery_cluster_storage: OpenStackCmClusterStorage
  # 볼륨타입 변경 필요 여부
  recovery_cluster_storage_update_flag: Boolean
  # 볼륨타입 변경 필요 사유
  recovery_cluster_storage_update_reason: OpenStackDrMessage
  # 복구 불가 여부
  unavailable_flag: Boolean
  # 복구 불가 사유
  unavailable_reason: OpenStackDrMessage
}

input OpenStackDrStorageRecoveryPlanInput {
    recovery_type_code: OpenStackDrStorageRecoveryPlanRecoveryTypeCodeEnum
    protection_cluster_storage: OpenStackCmClusterStorageInput
    recovery_cluster_storage: OpenStackCmClusterStorageInput
    # 볼륨타입 변경 필요 여부
    recovery_cluster_storage_update_flag: Boolean
    # 볼륨타입 변경 필요 사유
    recovery_cluster_storage_update_reason: OpenStackDrMessageInput
    # 복구 불가 여부
    unavailable_flag: Boolean
    # 복구 불가 사유
    unavailable_reason: OpenStackDrMessageInput
}

#
# open_stack_dr_storage_recovery_plan_recovery_type_code_enum.graphql
#
# 복구 유형 (매핑만 지원)
enum OpenStackDrStorageRecoveryPlanRecoveryTypeCodeEnum {
  DR_RECOVERY_PLAN_STORAGE_RECOVERY_TYPE_MAPPING
}

#
# open_stack_dr_summary_clusters_response.graphql
#
type OpenStackDrSummaryClustersResponse {
  summary: OpenStackDrSummaryClustersResponseSummary
  message: OpenStackDrMessage
}

input OpenStackDrSummaryClustersResponseInput {
    summary: OpenStackDrSummaryClustersResponseSummaryInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_summary_clusters_response_summary.graphql
#
type OpenStackDrSummaryClustersResponseSummary {
  # 모든 클러스터 수
  total_cluster: BigInt
  # 활성화 클러스터 수
  active_cluster: BigInt
  # 비활성화 클러스터 수
  inactive_cluster: BigInt
}

input OpenStackDrSummaryClustersResponseSummaryInput {
    # 모든 클러스터 수
    total_cluster: BigInt
    # 활성화 클러스터 수
    active_cluster: BigInt
    # 비활성화 클러스터 수
    inactive_cluster: BigInt
}

#
# open_stack_dr_summary_groups_response.graphql
#
type OpenStackDrSummaryGroupsResponse {
  summary: OpenStackDrSummaryGroupsResponseSummary
  message: OpenStackDrMessage
}

input OpenStackDrSummaryGroupsResponseInput {
    summary: OpenStackDrSummaryGroupsResponseSummaryInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_summary_groups_response_summary.graphql
#
type OpenStackDrSummaryGroupsResponseSummary {
  # 모든 보호 그룹 수
  total_group: BigInt
  # normal 보호 그룹 수
  normal_group: BigInt
  # warning 보호 그룹 수
  warning_group: BigInt
  # critical 보호 그룹 수
  critical_group: BigInt
  # emergency 보호 그룹 수
  emergency_group: BigInt
}

input OpenStackDrSummaryGroupsResponseSummaryInput {
    # 모든 보호 그룹 수
    total_group: BigInt
    # normal 보호 그룹 수
    normal_group: BigInt
    # warning 보호 그룹 수
    warning_group: BigInt
    # critical 보호 그룹 수
    critical_group: BigInt
    # emergency 보호 그룹 수
    emergency_group: BigInt
}

#
# open_stack_dr_summary_instances_response.graphql
#
type OpenStackDrSummaryInstancesResponse {
  summary: OpenStackDrSummaryInstancesSummary
  message: OpenStackDrMessage
}

input OpenStackDrSummaryInstancesResponseInput {
    summary: OpenStackDrSummaryInstancesSummaryInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_summary_instances_summary.graphql
#
type OpenStackDrSummaryInstancesSummary {
  # 모든 인스턴스 수
  total_instance: BigInt
  # 보호 인스턴스 수
  protection_instance: BigInt
}

input OpenStackDrSummaryInstancesSummaryInput {
    # 모든 인스턴스 수
    total_instance: BigInt
    # 보호 인스턴스 수
    protection_instance: BigInt
}

#
# open_stack_dr_summary_jobs_response.graphql
#
type OpenStackDrSummaryJobsResponse {
  summary: [OpenStackDrSummaryJobsResponseSummary]
  message: OpenStackDrMessage
}

input OpenStackDrSummaryJobsResponseInput {
    summary: [OpenStackDrSummaryJobsResponseSummaryInput]
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_summary_jobs_response_summary.graphql
#
type OpenStackDrSummaryJobsResponseSummary {
  # 일자(YYYYMMDD)
  date: String
  # 성공 작업 수
  success: BigInt
  # 실패 작업 수
  fail: BigInt
}

input OpenStackDrSummaryJobsResponseSummaryInput {
    # 일자(YYYYMMDD)
    date: String
    # 성공 작업 수
    success: BigInt
    # 실패 작업 수
    fail: BigInt
}

#
# open_stack_dr_summary_volumes_response.graphql
#
type OpenStackDrSummaryVolumesResponse {
  summary: OpenStackDrSummaryVolumesResponseSummary
  message: OpenStackDrMessage
}

input OpenStackDrSummaryVolumesResponseInput {
    summary: OpenStackDrSummaryVolumesResponseSummaryInput
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_summary_volumes_response_summary.graphql
#
type OpenStackDrSummaryVolumesResponseSummary {
  # 보호 볼륨 수
  protection_volume: BigInt
}

input OpenStackDrSummaryVolumesResponseSummaryInput {
    # 보호 볼륨 수
    protection_volume: BigInt
}

#
# open_stack_dr_tenant_recovery_plan.graphql
#
# 테넌트 복구계획
type OpenStackDrTenantRecoveryPlan {
  recovery_type_code: OpenStackDrTenantRecoveryPlanRecoveryTypeCodeEnum
  protection_cluster_tenant: OpenStackCmClusterTenant
  # 복구대상 클러스터의 테넌트 (Failback)
  recovery_cluster_tenant: OpenStackCmClusterTenant
  # 미러링 테넌트 이름
  recovery_cluster_tenant_mirror_name: String
  # 미러링 테넌트 이름 변경 필요 여부
  recovery_cluster_tenant_mirror_name_update_flag: Boolean
  # 미러링 테넌트 이름 변경 필요 사유
  recovery_cluster_tenant_mirror_name_update_reason: OpenStackDrMessage
}

input OpenStackDrTenantRecoveryPlanInput {
    recovery_type_code: OpenStackDrTenantRecoveryPlanRecoveryTypeCodeEnum
    protection_cluster_tenant: OpenStackCmClusterTenantInput
    # 복구대상 클러스터의 테넌트 (Failback)
    recovery_cluster_tenant: OpenStackCmClusterTenantInput
    # 미러링 테넌트 이름
    recovery_cluster_tenant_mirror_name: String
    # 미러링 테넌트 이름 변경 필요 여부
    recovery_cluster_tenant_mirror_name_update_flag: Boolean
    # 미러링 테넌트 이름 변경 필요 사유
    recovery_cluster_tenant_mirror_name_update_reason: OpenStackDrMessageInput
}

#
# open_stack_dr_tenant_recovery_plan_recovery_type_code_enum.graphql
#
# 복구 유형
enum OpenStackDrTenantRecoveryPlanRecoveryTypeCodeEnum {
  DR_RECOVERY_PLAN_TENANT_RECOVERY_TYPE_MIRRORING
}

#
# open_stack_dr_unavailable_instances_response.graphql
#
type OpenStackDrUnavailableInstancesResponse {
  # 복구불가 인스턴스 목록
  instances: [OpenStackDrUnavailableInstancesResponseInstances]
  message: OpenStackDrMessage
}

input OpenStackDrUnavailableInstancesResponseInput {
    # 복구불가 인스턴스 목록
    instances: [OpenStackDrUnavailableInstancesResponseInstancesInput]
    message: OpenStackDrMessageInput
}

#
# open_stack_dr_unavailable_instances_response_instances.graphql
#
type OpenStackDrUnavailableInstancesResponseInstances {
  instance: OpenStackCmClusterInstance
  unavailable_reasons: [OpenStackDrMessage]
}

input OpenStackDrUnavailableInstancesResponseInstancesInput {
    instance: OpenStackCmClusterInstanceInput
    unavailable_reasons: [OpenStackDrMessageInput]
}

#
# open_stack_dr_update_recovery_job_request.graphql
#
type OpenStackDrUpdateRecoveryJobRequest {
  job: OpenStackDrRecoveryJob
  # 모의훈련 혹은 재해복구가 불가능한 인스턴스가 존재하더라도 무시하고 생성
  force: Boolean
}

input OpenStackDrUpdateRecoveryJobRequestInput {
    job: OpenStackDrRecoveryJobInput
    # 모의훈련 혹은 재해복구가 불가능한 인스턴스가 존재하더라도 무시하고 생성
    force: Boolean
}

#
# open_stack_dr_usable.graphql
#
# 하이퍼바이저 리소스 사용 가능 유무
type OpenStackDrUsable {
  # 하이퍼바이저 리소스 사용 가능 유무
  usable: Boolean
}

input OpenStackDrUsableInput {
    # 하이퍼바이저 리소스 사용 가능 유무
    usable: Boolean
}

#
# open_stack_dr_volume_recovery_plan.graphql
#
# 볼륨 복구계획
type OpenStackDrVolumeRecoveryPlan {
  recovery_type_code: OpenStackDrVolumeRecoveryPlanRecoveryTypeCodeEnum
  protection_cluster_volume: OpenStackCmClusterVolume
  recovery_cluster_storage: OpenStackCmClusterStorage
  # 볼륨타입 변경 필요 여부
  recovery_cluster_storage_update_flag: Boolean
  # 볼륨타입 변경 필요 사유
  recovery_cluster_storage_update_reason: OpenStackDrMessage
  # 복구 불가 여부
  unavailable_flag: Boolean
  # 복구 불가 사유
  unavailable_reason: OpenStackDrMessage
}

input OpenStackDrVolumeRecoveryPlanInput {
    recovery_type_code: OpenStackDrVolumeRecoveryPlanRecoveryTypeCodeEnum
    protection_cluster_volume: OpenStackCmClusterVolumeInput
    recovery_cluster_storage: OpenStackCmClusterStorageInput
    # 볼륨타입 변경 필요 여부
    recovery_cluster_storage_update_flag: Boolean
    # 볼륨타입 변경 필요 사유
    recovery_cluster_storage_update_reason: OpenStackDrMessageInput
    # 복구 불가 여부
    unavailable_flag: Boolean
    # 복구 불가 사유
    unavailable_reason: OpenStackDrMessageInput
}

#
# open_stack_dr_volume_recovery_plan_recovery_type_code_enum.graphql
#
# 복구 유형 (미러링만 지원)
enum OpenStackDrVolumeRecoveryPlanRecoveryTypeCodeEnum {
  DR_RECOVERY_PLAN_VOLUME_RECOVERY_TYPE_MIRRORING
}

#
# open_stack_dr_volume_recovery_result.graphql
#
type OpenStackDrVolumeRecoveryResult {
  protection_cluster_volume: OpenStackCmClusterVolume
  recovery_cluster_volume: OpenStackCmClusterVolume
  recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
  # 복구 데이터 시점
  recovery_point: BigInt
  # 복구 시작 일시
  started_at: BigInt
  # 복구 종료 일시
  finished_at: BigInt
  result_code: OpenStackDrVolumeRecoveryResultResultCodeEnum
  # 복구 실패 사유
  failed_reason: OpenStackDrMessage
  # 롤백 여부
  rollback_flag: Boolean
}

input OpenStackDrVolumeRecoveryResultInput {
    protection_cluster_volume: OpenStackCmClusterVolumeInput
    recovery_cluster_volume: OpenStackCmClusterVolumeInput
    recovery_point_type_code: OpenStackDrRecoveryJobRecoveryPointTypeCodeEnum
    # 복구 데이터 시점
    recovery_point: BigInt
    # 복구 시작 일시
    started_at: BigInt
    # 복구 종료 일시
    finished_at: BigInt
    result_code: OpenStackDrVolumeRecoveryResultResultCodeEnum
    # 복구 실패 사유
    failed_reason: OpenStackDrMessageInput
    # 롤백 여부
    rollback_flag: Boolean
}

#
# open_stack_dr_volume_recovery_result_result_code_enum.graphql
#
# 복구 결과
enum OpenStackDrVolumeRecoveryResultResultCodeEnum {
  DR_RECOVERY_VOLUME_RESULT_SUCCESS
  DR_RECOVERY_VOLUME_RESULT_FAILED
  DR_RECOVERY_VOLUME_RESULT_CANCELED
}

