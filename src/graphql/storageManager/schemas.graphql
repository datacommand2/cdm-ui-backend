scalar JSONObject

scalar BigInt

type Query {
  # 스토리지 조회
  # @param String resourceName 내부적으로 데이터베이스를 사용하지 않고, 쿠버네티스 API 서버를 통해 리소스를 관리 및 식별하기 때문에 &#x60;resource_name&#x60; 필드의 값을 식별자로 사용합니다.
  # @return [SmGetStorageResponse]
  GetStorage(resourceName: String): SmGetStorageResponse
  # 스토리지 상태 조회
  # @param String resourceName 내부적으로 데이터베이스를 사용하지 않고, 쿠버네티스 API 서버를 통해 리소스를 관리 및 식별하기 때문에 &#x60;resource_name&#x60; 필드의 값을 식별자로 사용합니다.
  # @return [SmGetStorageStatusResponse]
  GetStorageStatus(resourceName: String): SmGetStorageStatusResponse
  # 스토리지 목록 조회
  # @return [SmGetStoragesResponse]
  GetStorages: SmGetStoragesResponse
}

type Mutation {
  # 스토리지 등록
  # @param SmCreateStorageRequest smCreateStorageRequest 스토리지 등록
  # @return [SmCreateStorageResponse]
  CreateStorage(input: CreateStorageInput): SmCreateStorageResponse
  # 스토리지 삭제
  # @param String resourceName 내부적으로 데이터베이스를 사용하지 않고, 쿠버네티스 API 서버를 통해 리소스를 관리 및 식별하기 때문에 &#x60;resource_name&#x60; 필드의 값을 식별자로 사용합니다.
  # @return [Boolean]
  DeleteStorage(input: DeleteStorageInput): Boolean
  # 스토리지 수정
  # &#x60;spec.name&#x60; 필드와 &#x60;spec.description&#x60; 필드의 값만 수정 가능합니다.
  # @param String resourceName 내부적으로 데이터베이스를 사용하지 않고, 쿠버네티스 API 서버를 통해 리소스를 관리 및 식별하기 때문에 &#x60;resource_name&#x60; 필드의 값을 식별자로 사용합니다.
  # @param SmUpdateStorageRequest smUpdateStorageRequest 스토리지 수정
  # @return [SmUpdateStorageResponse]
  UpdateStorage(input: UpdateStorageInput): SmUpdateStorageResponse
}

# storage_api
input CreateStorageInput {
    # 스토리지 등록
    smCreateStorageRequest: SmCreateStorageRequestInput
}

input DeleteStorageInput {
    # 내부적으로 데이터베이스를 사용하지 않고, 쿠버네티스 API 서버를 통해 리소스를 관리 및 식별하기 때문에 &#x60;resource_name&#x60; 필드의 값을 식별자로 사용합니다.
    resourceName: String
}

input UpdateStorageInput {
    # 내부적으로 데이터베이스를 사용하지 않고, 쿠버네티스 API 서버를 통해 리소스를 관리 및 식별하기 때문에 &#x60;resource_name&#x60; 필드의 값을 식별자로 사용합니다.
    resourceName: String,
    # 스토리지 수정
    smUpdateStorageRequest: SmUpdateStorageRequestInput
}

#
# cloud_language_set_enum.graphql
#
# 언어셋
enum CloudLanguageSetEnum {
  ENG
  KOR
}

#
# cloud_role.graphql
#
# 솔루션 역할
type CloudRole {
  # 솔루션 역할의 ID
  id: BigInt
  # 솔루션 이름
  solution: String
  role: CloudRoleEnum
}

input CloudRoleInput {
    # 솔루션 역할의 ID
    id: BigInt
    # 솔루션 이름
    solution: String
    role: CloudRoleEnum
}

#
# cloud_role_enum.graphql
#
# 역할
enum CloudRoleEnum {
  ADMIN
  MANAGER
  OPERATOR
  USER
}

#
# cloud_session.graphql
#
# 사용자 세션
type CloudSession {
  # 세션 키
  key: String
}

input CloudSessionInput {
    # 세션 키
    key: String
}

#
# cloud_tenant.graphql
#
# 테넌트
type CloudTenant {
  # 테넌트 ID
  id: BigInt
  # 테넌트 이름
  name: String
  # 사용여부
  use_flag: Boolean
  # 테넌트가 사용할 수 있는 솔루션 목록
  solutions: [CloudTenantSolution]
  # 비고
  remarks: String
  # 테넌트 생성 날짜
  created_at: BigInt
  # 테넌트 변경 날짜
  updated_at: BigInt
}

input CloudTenantInput {
    # 테넌트 ID
    id: BigInt
    # 테넌트 이름
    name: String
    # 사용여부
    use_flag: Boolean
    # 테넌트가 사용할 수 있는 솔루션 목록
    solutions: [CloudTenantSolutionInput]
    # 비고
    remarks: String
    # 테넌트 생성 날짜
    created_at: BigInt
    # 테넌트 변경 날짜
    updated_at: BigInt
}

#
# cloud_tenant_solution.graphql
#
# 테넌트
type CloudTenantSolution {
  # 솔루션 이름
  name: String
}

input CloudTenantSolutionInput {
    # 솔루션 이름
    name: String
}

#
# cloud_user.graphql
#
# 사용자
type CloudUser {
  # 사용자 ID
  id: BigInt
  # 계정 명
  account: String
  tenant: CloudTenant
  # 솔루션별 역할
  roles: [CloudRole]
  # 사용자 그룹 목록
  groups: [CloudUserGroup]
  # 사용자 타임존 ([참조링크](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones))
  timezone: String
  language_set: CloudLanguageSetEnum
  # 사용자 이름
  name: String
  # 사용자 부서
  department: String
  # 사용자 직책
  position: String
  # 사용자 이메일
  email: String
  # 사용자 연락처
  contact: String
  # 계정 암호 변경 날짜
  password_updated_at: BigInt
  # 계정 암호 변경 필요 여부
  password_update_flag: Boolean
  # 계정 마지막 로그인 날짜
  last_logged_in_at: BigInt
  # 계정 생성 날짜
  created_at: BigInt
  # 계정 내용 변경 날짜
  updated_at: BigInt
  session: CloudSession
}

input CloudUserInput {
    # 사용자 ID
    id: BigInt
    # 계정 명
    account: String
    tenant: CloudTenantInput
    # 솔루션별 역할
    roles: [CloudRoleInput]
    # 사용자 그룹 목록
    groups: [CloudUserGroupInput]
    # 사용자 타임존 ([참조링크](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones))
    timezone: String
    language_set: CloudLanguageSetEnum
    # 사용자 이름
    name: String
    # 사용자 부서
    department: String
    # 사용자 직책
    position: String
    # 사용자 이메일
    email: String
    # 사용자 연락처
    contact: String
    # 계정 암호 변경 날짜
    password_updated_at: BigInt
    # 계정 암호 변경 필요 여부
    password_update_flag: Boolean
    # 계정 마지막 로그인 날짜
    last_logged_in_at: BigInt
    # 계정 생성 날짜
    created_at: BigInt
    # 계정 내용 변경 날짜
    updated_at: BigInt
    session: CloudSessionInput
}

#
# cloud_user_group.graphql
#
# 사용자 그룹
type CloudUserGroup {
  # 사용자 그룹 ID
  id: BigInt
  tenant: CloudTenant
  # 사용자 그룹 이름
  name: String
  # 비고
  remarks: String
  # 사용자 그룹 생성 날짜
  created_at: BigInt
  # 사용자 그룹 변경 날짜
  updated_at: BigInt
  # 삭제 여부
  delete_flag: Boolean
}

input CloudUserGroupInput {
    # 사용자 그룹 ID
    id: BigInt
    tenant: CloudTenantInput
    # 사용자 그룹 이름
    name: String
    # 비고
    remarks: String
    # 사용자 그룹 생성 날짜
    created_at: BigInt
    # 사용자 그룹 변경 날짜
    updated_at: BigInt
    # 삭제 여부
    delete_flag: Boolean
}

#
# sm_create_storage_request.graphql
#
type SmCreateStorageRequest {
  # 사용자 정의 스토리지 이름
  name: String
  # 사용자 정의 스토리지 부가 설명
  description: String
  type: SmStorageTypeEnum
  configuration: SmStorageConfigurationType
}

input SmCreateStorageRequestInput {
    # 사용자 정의 스토리지 이름
    name: String
    # 사용자 정의 스토리지 부가 설명
    description: String
    type: SmStorageTypeEnum
    configuration: SmStorageConfigurationTypeInput
}

#
# sm_create_storage_response.graphql
#
type SmCreateStorageResponse {
  storage: SmStorage
}

input SmCreateStorageResponseInput {
    storage: SmStorageInput
}

#
# sm_get_storage_response.graphql
#
type SmGetStorageResponse {
  storage: SmStorage
}

input SmGetStorageResponseInput {
    storage: SmStorageInput
}

#
# sm_get_storage_status_response.graphql
#
type SmGetStorageStatusResponse {
  status: SmStorageStatus
}

input SmGetStorageStatusResponseInput {
    status: SmStorageStatusInput
}

#
# sm_get_storages_response.graphql
#
type SmGetStoragesResponse {
  storages: [SmStorage]
}

input SmGetStoragesResponseInput {
    storages: [SmStorageInput]
}

#
# sm_storage.graphql
#
type SmStorage {
  # 스토리지 식별자(사용자 정의 X)
  resource_name: String
  spec: SmStorageSpec
  status: SmStorageStatus
  primary: Boolean
}

input SmStorageInput {
    # 스토리지 식별자(사용자 정의 X)
    resource_name: String
    spec: SmStorageSpecInput
    status: SmStorageStatusInput
    primary: Boolean
}

#
# sm_storage_configuration_aws_s3.graphql
#
type SmStorageConfigurationAwsS3 {
  # https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_credentials_access-keys.html
  access_key_id: String
  # https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_credentials_access-keys.html
  secret_access_key: String
  region: SmStorageConfigurationAwsS3RegionEnum
  # https://stackoverflow.com/questions/50480924/regex-for-s3-bucket-name
  bucket: String
}

input SmStorageConfigurationAwsS3Input {
    # https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_credentials_access-keys.html
    access_key_id: String
    # https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_credentials_access-keys.html
    secret_access_key: String
    region: SmStorageConfigurationAwsS3RegionEnum
    # https://stackoverflow.com/questions/50480924/regex-for-s3-bucket-name
    bucket: String
}

#
# sm_storage_configuration_aws_s3_region_enum.graphql
#
enum SmStorageConfigurationAwsS3RegionEnum {
  US_EAST_2
  US_EAST_1
  US_WEST_1
  US_WEST_2
  AF_SOUTH_1
  AP_EAST_1
  AP_SOUTH_2
  AP_SOUTHEAST_3
  AP_SOUTHEAST_4
  AP_SOUTH_1
  AP_NORTHEAST_3
  AP_NORTHEAST_2
  AP_SOUTHEAST_1
  AP_SOUTHEAST_2
  AP_NORTHEAST_1
  CA_CENTRAL_1
  CA_WEST_1
  EU_CENTRAL_1
  EU_WEST_1
  EU_WEST_2
  EU_SOUTH_1
  EU_WEST_3
  EU_SOUTH_2
  EU_NORTH_1
  EU_CENTRAL_2
  IL_CENTRAL_1
  ME_SOUTH_1
  ME_CENTRAL_1
  SA_EAST_1
}

#
# sm_storage_configuration_azure_blob.graphql
#
type SmStorageConfigurationAzureBlob {
  storage_account_name: String
  storage_account_key: String
}

input SmStorageConfigurationAzureBlobInput {
    storage_account_name: String
    storage_account_key: String
}

#
# sm_storage_configuration_ceph_rbd.graphql
#
# 필수가 아닌 옵션은 향후에 추가될 가능성이 존재합니다.
type SmStorageConfigurationCephRbd {
  # Ceph 클러스터 fsid
  fsid: String
  # Ceph 클러스터 내 모니터 주소 목록
  monitors: [String]
  # 쿠버네티스가 스토리지에 접근할 때 사용할 유저 ID
  user_id: String
  # 쿠버네티스가 사용할 유저 ID에 대응되는 Key
  user_key: String
  # 동적 프로비저닝될 볼륨(이미지)가 생성될 Pool 이름
  pool: String
  image_features: [SmStorageConfigurationCephRbdImageFeaturesEnum]
}

input SmStorageConfigurationCephRbdInput {
    # Ceph 클러스터 fsid
    fsid: String
    # Ceph 클러스터 내 모니터 주소 목록
    monitors: [String]
    # 쿠버네티스가 스토리지에 접근할 때 사용할 유저 ID
    user_id: String
    # 쿠버네티스가 사용할 유저 ID에 대응되는 Key
    user_key: String
    # 동적 프로비저닝될 볼륨(이미지)가 생성될 Pool 이름
    pool: String
    image_features: [SmStorageConfigurationCephRbdImageFeaturesEnum]
}

#
# sm_storage_configuration_ceph_rbd_image_features_enum.graphql
#
# reference: https://docs.ceph.com/en/quincy/man/8/rbd/#cmdoption-rbd-image-feature layering: layering support striping: striping v2 support exclusive-lock: exclusive locking support object-map: object map support (requires exclusive-lock) fast-diff: fast diff calculations (requires object-map) deep-flatten: snapshot flatten support journaling: journaled IO support (requires exclusive-lock) data-pool: erasure coded pool support 필수 옵션: \"layering\"
enum SmStorageConfigurationCephRbdImageFeaturesEnum {
  LAYERING
  JOURNALING
  STRIPING
  EXCLUSIVE_LOCK
  OBJECT_MAP
  FAST_DIFF
  DEEP_FLATTEN
  DATA_POOL
}

#
# sm_storage_configuration_nfs.graphql
#
type SmStorageConfigurationNfs {
  server: String
  share: String
}

input SmStorageConfigurationNfsInput {
    server: String
    share: String
}

#
# sm_storage_configuration_type.graphql
#
type SmStorageConfigurationType {
  # Ceph 클러스터 fsid
  fsid: String
  # Ceph 클러스터 내 모니터 주소 목록
  monitors: [String]
  # 쿠버네티스가 스토리지에 접근할 때 사용할 유저 ID
  user_id: String
  # 쿠버네티스가 사용할 유저 ID에 대응되는 Key
  user_key: String
  # 동적 프로비저닝될 볼륨(이미지)가 생성될 Pool 이름
  pool: String
  image_features: [SmStorageConfigurationCephRbdImageFeaturesEnum]
  server: String
  share: String
  # https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_credentials_access-keys.html
  access_key_id: String
  # https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_credentials_access-keys.html
  secret_access_key: String
  region: SmStorageConfigurationAwsS3RegionEnum
  # https://stackoverflow.com/questions/50480924/regex-for-s3-bucket-name
  bucket: String
  storage_account_name: String
  storage_account_key: String
}

input SmStorageConfigurationTypeInput {
    # Ceph 클러스터 fsid
    fsid: String
    # Ceph 클러스터 내 모니터 주소 목록
    monitors: [String]
    # 쿠버네티스가 스토리지에 접근할 때 사용할 유저 ID
    user_id: String
    # 쿠버네티스가 사용할 유저 ID에 대응되는 Key
    user_key: String
    # 동적 프로비저닝될 볼륨(이미지)가 생성될 Pool 이름
    pool: String
    image_features: [SmStorageConfigurationCephRbdImageFeaturesEnum]
    server: String
    share: String
    # https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_credentials_access-keys.html
    access_key_id: String
    # https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_credentials_access-keys.html
    secret_access_key: String
    region: SmStorageConfigurationAwsS3RegionEnum
    # https://stackoverflow.com/questions/50480924/regex-for-s3-bucket-name
    bucket: String
    storage_account_name: String
    storage_account_key: String
}

#
# sm_storage_spec.graphql
#
type SmStorageSpec {
  # 사용자 정의 스토리지 이름
  name: String
  # 사용자 정의 스토리지 부가 설명
  description: String
  type: SmStorageTypeEnum
  configuration: SmStorageConfigurationType
  creator: CloudUser
  created_at: BigInt
  modifier: CloudUser
  modified_at: BigInt
}

input SmStorageSpecInput {
    # 사용자 정의 스토리지 이름
    name: String
    # 사용자 정의 스토리지 부가 설명
    description: String
    type: SmStorageTypeEnum
    configuration: SmStorageConfigurationTypeInput
    creator: CloudUserInput
    created_at: BigInt
    modifier: CloudUserInput
    modified_at: BigInt
}

#
# sm_storage_state_code_enum.graphql
#
enum SmStorageStateCodeEnum {
  CDM_BACKUP_STORAGE_STATE_AVAILABLE
  CDM_BACKUP_STORAGE_STATE_UNAVAILABLE
  CDM_BACKUP_STORAGE_STATE_ERROR
}

#
# sm_storage_status.graphql
#
# 스토리지 상태
type SmStorageStatus {
  capacity: BigInt
  free_space: BigInt
  state_code: SmStorageStateCodeEnum
}

input SmStorageStatusInput {
    capacity: BigInt
    free_space: BigInt
    state_code: SmStorageStateCodeEnum
}

#
# sm_storage_type_enum.graphql
#
enum SmStorageTypeEnum {
  CDM_BACKUP_STORAGE_TYPE_CEPH_RBD
  CDM_BACKUP_STORAGE_TYPE_NFS
  CDM_BACKUP_STORAGE_TYPE_AWS_S3
  CDM_BACKUP_STORAGE_TYPE_AZURE_BLOB
}

#
# sm_update_storage_request.graphql
#
type SmUpdateStorageRequest {
  # 사용자 정의 스토리지 이름
  name: String
  # 사용자 정의 스토리지 부가 설명
  description: String
}

input SmUpdateStorageRequestInput {
    # 사용자 정의 스토리지 이름
    name: String
    # 사용자 정의 스토리지 부가 설명
    description: String
}

#
# sm_update_storage_response.graphql
#
type SmUpdateStorageResponse {
  storage: SmStorage
}

input SmUpdateStorageResponseInput {
    storage: SmStorageInput
}

